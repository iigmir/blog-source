{
"articles": [
	{
		"id" : 1,
		"title" : "Hello World",
		"context" : "Hello, this iismmx's blog. Mainly, this is for my rails notes.\r\n\r\nこんにちは世界、こんにちは言葉、そして、こんにちは誠くん。\r\n\r\n好累，我對這該死的資料庫搞了幾次有啊……",
		"created_at" : "2017-12-19T10:45:49Z",
		"updated_at" : "2017-12-19T10:45:49Z"
	},
	{
		"id" : 2,
		"title" : "大災難：資料庫的關聯重整",
		"context" : "### 故事\r\n今天大概是部落格開張最慘的一次。\r\n\r\n我原本要加入部落格的分類標籤功能：這個要實做起來，就是文章和分類兩個 Model 之間，用上一個小 Model 聯繫它們倆。夠簡單吧？\r\n\r\n然而，問題老在佈署的時候出現：標籤功能不能用。查了一下 Log，發現和關聯抓不到有關。不過，我不太清楚怎麼一回事，就上網搜尋了。接著，還看到有人說要重設資料夾。於是我重設，卻發現問題沒有解決。\r\n\r\n我看了一下，還是解決一下關聯問題好了。為了應急，我直接改了資料表的名稱。\r\n\r\n殊不知這才是災難的開始。\r\n\r\n關聯問題毫無解決，還出了很大的錯。我不斷地去修，最後還索性把控制器、以及關聯的 Model 整個重寫。好不容易才在生產環境施工。\r\n\r\n糟糕的是，接著電腦大當機，這篇的資訊都流失了。只好靠著記憶打這篇。好險還有備份之前的文章。\r\n\r\n### 教訓\r\n整個情況非常混亂，有時甚至有點不太清楚自己在幹嘛。\r\n我太心急了，看到解答就直接寫進去。結果並沒有解決到任何問題。\r\n\r\n因為情況的混亂與無力，我幾乎沒有接受什麼教訓。\r\n不過，有一件事情很重要，就是不要隨便看網站的東西，就直接照著做。",
		"created_at" : "2017-12-19T11:04:33Z",
		"updated_at" : "2017-12-19T11:21:53Z"
	},
	{
		"id" : 15,
		"title" : "font-awesome on rails",
		"context" : "<p><a href=\"http:\/\/fontawesome.io\/\">Font Awesome<\/a> 是相當好用的 Icon Font。有了 Icon Font，你就不用自己手刻各種 Icon：<br>\r\n要 Facebook 商標？ <a href=\"http:\/\/fontawesome.io\/icon\/facebook-official\/\">有。<\/a><br>\r\n要購物車標誌？ <a href=\"http:\/\/fontawesome.io\/icon\/shopping-cart\/\">也有。<\/a><br>\r\n需要上下左右的指引？ <a href=\"http:\/\/fontawesome.io\/icon\/arrow-up\/\">當然也可以。<\/a><\/p>\r\n\r\n<p>這麼好用的 Icon Font，自然也有人寫出了 gem 給 Rails 用。當然，原始碼都放在 <a href=\"https:\/\/github.com\/bokmann\/font-awesome-rails\">Github<\/a> 了。<\/p>\r\n\r\n<p>不多說了，直接開始：<\/p>\r\n\r\n<ol>\r\n\t<li>先告訴 Gemfile 說自己需要這個套件用：<code>gem \"font-awesome-rails\"<\/code> 後，下 <code>bundle install<\/code> 指令以安裝它。<\/li>\r\n\t<li>到 application.css，在開頭註解那邊添加這個 <code>gem： *= require font-awesome<\/code>\r\n<\/li>\r\n\t<li>搞定！現在，你可以直接用 Font Awesome 了。<\/li>\r\n<\/ol>\r\n\r\n<p>順便講一下，用這個 gem 裝的 Font Awesome 有自己的 helper 可以用：例如 &lt;i class=\"fa fa-facebook-official\" aria-hidden=\"true\"&gt; 就會變成 <code>fa_icon \"facebook-official\"<\/code>。十分方便。<\/p>\r\n\r\n<p>如果你想用 <code>link_to<\/code> 來包圖標，請用 <code>do...end<\/code> 語法：<\/p>\r\n<pre>\r\n  &lt;%= link_to mylinks_path, class:\"linkgap4rwd\" do %&gt;\r\n    &lt;%= fa_icon \"link 5x\" %&gt;\r\n  &lt;% end %&gt;\r\n<\/pre>",
		"created_at" : "2018-01-03T07:51:57Z",
		"updated_at" : "2018-01-03T07:51:57Z"
	},
	{
		"id" : 35,
		"title" : "CORS 筆記",
		"context" : "嗯，我要串接 xkcd 的 [API](https:\/\/xkcd.com\/json.html)，但要命<span hidden>，這 API 伺服器好像沒有給到[我需要的東西](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Access-Control-Allow-Origin)這真要了我的命……<\/span>…我花了好幾小時在處理 [CORS](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/CORS) 問題……\r\n\r\n總之，我沒辦法串接 xkcd 的 API 了。真可惜，不過講點 CORS 好了。\r\n\r\n-----\r\n\r\n一般來說，瀏覽器會禁止來自其他網域的資源，除非有取得網域資源的權限。這份權限就稱作 CORS。而 CORS 有兩種授權方法：simple 與 preflighted：simple 可以直接對伺服器請求，而 preflighted 則需要徵求伺服器同意。\r\n\r\n以下條件全部集滿，才能發動 simple 授權，否則將為 preflighted 授權：\r\n\r\n1. HTTP 方法只能是 `GET`、`HEAD`、`POST` 其中之一。\r\n2. HTTP 標頭只有 `Connection`、`User-Agent`、[forbidden header name](https:\/\/fetch.spec.whatwg.org\/#cors-safelisted-request-header)、[CORS-safelisted request-header](https:\/\/fetch.spec.whatwg.org\/#cors-safelisted-request-header) 標頭。\r\n3. HTTP `Content-Type` 標頭只能是 `application\/x-www-form-urlencoded`、`multipart\/form-data`、`text\/plain` 其中之一。\r\n\r\nsimple 授權會在請求標頭內多出 `Origin` 標頭，回應則多出 `Access-Control-Allow-Origin` 標頭；<br \/>\r\npreflighted 授權則會先發動 `OPTIONS` 請求，待回應後再發起含有 `Origin` 標頭的請求。\r\n\r\n-----\r\n\r\njQuery AJAX 雖然有 `type : \"jsonp\"` API 能用，但那樣會讓純 JSON 檔案出問題。所以還是要想辦法完成 CORS…axios 大概也是這樣……\r\n\r\n-----\r\n\r\n> 最糟糕的其實是把遞歸寫壞，結果瀏覽器載到死掉……\r\n\r\n* [CORS complain even when headers are sent](https:\/\/support.mozilla.org\/en-US\/questions\/1152971)\r\n* [跨來源資源共享](https:\/\/developer.mozilla.org\/zh-TW\/docs\/Web\/HTTP\/CORS)\r\n* [axios issue#475](https:\/\/github.com\/axios\/axios\/issues\/475)",
		"created_at" : "2018-01-23T10:12:26Z",
		"updated_at" : "2018-01-23T11:08:29Z"
	},
	{
		"id" : 40,
		"title" : "ES6 note",
		"context" : "面試又被電爆，所以寫一下筆記。當然會是動態擴充。\r\n\r\n雖然不知道該寫在哪裡……\r\n\r\n### [Arrow function](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/JavaScript\/Reference\/Functions\/Arrow_functions)\r\n\r\n`()=>{}` ←就這玩意兒。這玩意兩種功能，一是語法簡潔化、二是把 `this` 放到外面一層的物件上。\r\n\r\n<pre>\r\nfunction Person(){\r\n  this.age = 0;\r\n  setTimeout(()=>{\r\n    this.age++;\r\n  }, 1000);\r\n}\r\n\r\nvar p = new Person();\r\nconsole.log(p);\r\n\/\/ 用 Babel 還原語法看看？\r\n\r\n\"use strict\";\r\nfunction Person() {\r\n  var _this = this;\r\n\r\n  this.age = 0;\r\n  setTimeout(function () {\r\n    _this.age++;\r\n  }, 1000);\r\n}\r\n\r\nvar p = new Person();\r\nconsole.log(p);\r\n<\/pre>\r\n\r\n感覺還蠻像是 Vue 的用法……\r\n\r\n問題：`_this` 又是怎麼回事？\r\n\r\n---\r\n\r\n2018\/04\/30 增筆：在 JavaScript 裡面，**變數的生效範圍，是以函式為單位**。因此，為了讓 `setTimeout(function () {})` 函式，能收到外面函式的 `this`，我們需要指派一個變數給 `this` 用。而這個變數，在這裡就是 `_this`。\r\n\r\nRef: [ 重新認識 JavaScript: Day 10 函式 Functions 的基本概念 ](https:\/\/ithelp.ithome.com.tw\/articles\/10191549)\r\n\r\n### [Class](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/JavaScript\/Reference\/Statements\/class)\r\n\r\n語法糖。讓基於原型的 JavaScript 可以看起來像其他的物件導向一點。[MDN](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/JavaScript\/Reference\/Classes) 。\r\n\r\n<pre>\r\nclass Bar {\r\n\tconstructor(baz) {\r\n\t\tthis.baz = baz;\r\n\t}\r\n}\r\n\r\nclass Foo extends Bar {\r\n\tconstructor(ipt) {\r\n\t\tsuper(ipt);\r\n\t\tthis.player = 2000;\r\n\t}\r\n}\r\n\r\nconsole.log(new Foo(\"Java\")); \/\/ { baz:\"Java\" , player:2000 }\r\n\r\n\/\/ 用 Babel 把語法解壓縮以後，發現長成這樣子：\r\n\r\n\"use strict\";\r\n\r\nfunction _possibleConstructorReturn(self, call) {\r\n    if (!self) {\r\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\r\n    }\r\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\r\n}\r\n\r\nfunction _inherits(subClass, superClass) {\r\n    if (typeof superClass !== \"function\" && superClass !== null) {\r\n        throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\r\n    }\r\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\r\n        constructor: {\r\n            value: subClass,\r\n            enumerable: false,\r\n            writable: true,\r\n            configurable: true\r\n        }\r\n    });\r\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\r\n}\r\n\r\nfunction _classCallCheck(instance, Constructor) {\r\n    if (!(instance instanceof Constructor)) {\r\n        throw new TypeError(\"Cannot call a class as a function\");\r\n    }\r\n}\r\n\r\nvar Bar = function Bar(baz) {\r\n    _classCallCheck(this, Bar);\r\n\r\n    this.baz = baz;\r\n};\r\n\r\nvar Foo = function(_Bar) {\r\n    _inherits(Foo, _Bar);\r\n\r\n    function Foo(ipt) {\r\n        _classCallCheck(this, Foo);\r\n\r\n        var _this = _possibleConstructorReturn(this, (Foo.__proto__ || Object.getPrototypeOf(Foo)).call(this, ipt));\r\n\r\n        _this.player = 2000;\r\n        return _this;\r\n    }\r\n\r\n    return Foo;\r\n}(Bar);\r\n<\/pre>\r\n\r\n看到 `_inherits` 函式裡面的 `subClass.prototype` 了嗎？所以儘管 ES6 用上了 `Class` 這物件導向的語法，它還是基於原型的程式語言。\r\n\r\n### [Enhanced Object Literals](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/JavaScript\/Reference\/Operators\/Object_initializer)\r\n<pre>\r\nvar obj =\r\n{\r\n  \t__proto__: theProtoObj,\r\n  \t['__proto__']: somethingElse,\r\n    handler,\r\n    toString() {\r\n     return \"d \" + super.toString();\r\n    },\r\n    [ \"prop_\" + (() => 42)() ]: 42\r\n};\r\n\r\n\"use strict\";\r\nvar _obj, _obj2;\r\nvar _get = function get(object, property, receiver)\r\n{\r\n    if (object === null) object = Function.prototype;\r\n    var desc = Object.getOwnPropertyDescriptor(object, property);\r\n    if (desc === undefined)\r\n    {\r\n        var parent = Object.getPrototypeOf(object);\r\n        if (parent === null)\r\n        {\r\n            return undefined;\r\n        }\r\n        else\r\n        {\r\n            return get(parent, property, receiver);\r\n        }\r\n    }\r\n    else if (\"value\" in desc)\r\n    {\r\n        return desc.value;\r\n    }\r\n    else\r\n    {\r\n        var getter = desc.get;\r\n        if (getter === undefined)\r\n        {\r\n            return undefined;\r\n        }\r\n        return getter.call(receiver);\r\n    }\r\n};\r\n\r\nfunction _defineProperty(obj, key, value)\r\n{\r\n    if (key in obj)\r\n    {\r\n        Object.defineProperty(obj, key\r\n        , {\r\n            value: value\r\n            , enumerable: true\r\n            , configurable: true\r\n            , writable: true\r\n        });\r\n    }\r\n    else\r\n    {\r\n        obj[key] = value;\r\n    }\r\n    return obj;\r\n}\r\nvar obj = _obj = (_obj2 = {\r\n    __proto__: theProtoObj\r\n}, _obj2['__proto__'] = somethingElse, _defineProperty(_obj2, \"handler\", handler), _defineProperty(_obj2, \"toString\", function toString()\r\n{\r\n    return \"d \" + _get(_obj.__proto__ || Object.getPrototypeOf(_obj), \"toString\", this)\r\n        .call(this);\r\n}), _defineProperty(_obj2, \"prop_\" + function ()\r\n{\r\n    return 42;\r\n}(), 42), _obj2);\r\n<\/pre>\r\n\r\n這什麼東西？我不知道……\r\n\r\n### [Template Strings](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/JavaScript\/Reference\/Template_literals)\r\n<pre>\r\nvar x = \"foo\";\r\nvar y = \"2000\";\r\n\r\nconsole.log( x + \"bar\" + y );\r\nconsole.log( \"I use \\\" \" + x + \"bar\" + y + \" \\\".\" );\r\n\/\/ 但你可以在 ES6 這樣寫……\r\nconsole.log( `${x}bar${y}` );\r\nconsole.log( `I use \"${x}bar${y}\".` );\r\n\r\n\/\/ 注意到 ` 符號了嗎？就是這個關鍵字。\r\n<\/pre>\r\n\r\n### [Destructuring](https:\/\/iismmx-rails-blog.herokuapp.com\/articles\/40\/edit)\r\n\r\n用 `[]` 這個看起來像是陣列的東西宣告多個變數。\r\n<pre>\r\nvar [ x , y , z ] = [ \"x\" , \"y\" ];\r\nconsole.log( x , y , z ); \/\/ Shows: \"x\" , \"y\" , undefined\r\nvar [ a , b , ...c ] = [ 1 , 2 , 3 , 4 , 5 , 6 ];\r\nconsole.log( a , b , c ); \/\/ Shows: 1 , 2 , [ 3 , 4 , 5 , 6 ]\r\n\/\/ 反過來這樣會有語法錯誤：\r\nvar [ a , b , ...c , d ] = [ 1 , 2 , 3 , 4 , 5 , 6 ];\r\nconsole.log( a , b , c , d ); \/\/ Error: rest element may not have a trailing comma\r\n<\/pre>\r\n\r\n### [Let](https:\/\/developer.mozilla.org\/zh-TW\/docs\/Web\/JavaScript\/Reference\/Statements\/let) , [Const](https:\/\/developer.mozilla.org\/zh-TW\/docs\/Web\/JavaScript\/Reference\/Statements\/const)\r\n\r\n原本的 [var](https:\/\/developer.mozilla.org\/zh-TW\/docs\/Web\/JavaScript\/Reference\/Statements\/var) 會全域生效，很容易被污染。但是在 ES6 裡面有兩種新的變數命名法：`let` 會只在被宣告的作用域內生效，而 `const` 在大多數情況下無法被變動。\r\n\r\n---\r\n\r\nRef: [Babel](https:\/\/babeljs.io\/learn-es2015\/)",
		"created_at" : "2018-02-24T08:03:56Z",
		"updated_at" : "2018-04-29T08:17:40Z"
	},
	{
		"id" : 3,
		"title" : "Callback Hell：一點迷宮",
		"context" : "AJAX，非同步 JavaScript 及 XML（Asynchronous JavaScript and XML，AJAX）的「非同步」，指的是電腦處理某東西時，不用馬上完成，而是等到某個時候再處理。至於「某個時候」是什麼時候，要視情況而定。\r\n\r\nAJAX 就是把請求先送到伺服器，等到某個時候再處理。在 AJAX，「某個時候」就是指伺服器有所回應時，無論它成功或失敗。用 jQuery 來看，就是這樣：\r\n<pre>\r\n$.ajax({\r\n    url:\"\/\/example.com\",\r\n    error: function(jqXHR, textStatus, errorThrown)\r\n    {\r\n        \/* 伺服器回應失敗的話怎麼做 *\/\r\n    },\r\n    success: function(data)\r\n    {\r\n        \/* 伺服器回應成功的話怎麼做 *\/\r\n    }\r\n});\r\n<\/pre>\r\n\r\n但如果我們要做很多次 AJAX 請求，故事會變成這樣……\r\n\r\n<pre>\r\n$.ajax({\r\n\t\/* 略 *\/\r\n\tsuccess: function(data)\r\n\t{\r\n\t\t$.ajax({\r\n\t\t\/* 略 *\/\r\n\t\t\tsuccess: function(data)\r\n\t\t\t{\r\n\t\t\t\/* 略 *\/\r\n\t\t\t\t$.ajax({\r\n\t\t\t\t\/* 略 *\/\r\n\t\t\t\tsuccess: function(data)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\/* 略 *\/\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n});\r\n<\/pre>\r\n\r\n感覺就像在走迷宮，對否？\r\n那要怎麼做才好呢？\r\n\r\n其實有很多方法。最基本、最簡單的方法，就是把它們變成一個個函式，然後拆開來：\r\n<pre>\r\nfunction first_ajax()\r\n{\r\n\t$.ajax({\r\n\t\tsuccess: function(data)\r\n\t\t{\r\n\t\t\tsecond_ajax(data)\r\n\t\t}\r\n\t});\r\n}\r\nfunction second_ajax(sa_input)\r\n{\r\n\t$.ajax({\r\n\t\tsuccess: function(data)\r\n\t\t{\r\n\t\t\tthird_ajax(data)\r\n\t\t}\r\n\t});\r\n}\r\nfunction third_ajax(ta_input)\r\n{\r\n\t$.ajax({\r\n\t\tsuccess: function(data)\r\n\t\t{\r\n\t\t\t\/* 省略 *\/\r\n\t\t}\r\n\t});\r\n}\r\n<\/pre>\r\n\r\n我曾經考慮使用 ES6 的語法，不過看到拆成 `function` 才發現萬變不離其宗：要拆掉迷宮，首先要知道怎麼拆，再考慮要用什麼工具拆：\r\n> Before looking at more advanced solutions, remember that callbacks are a fundamental part of JavaScript (since they are just functions) and you should learn how to read and write them before moving on to more advanced language features, since they all depend on an understanding of callbacks.\r\n> 「在考慮更進階的解法前，謹記回呼是 JavaScript 的基礎（因為它們就只是函式）、你也應該在使用更進階的功能之前，先理解怎麼看、怎麼寫回呼，因為它們需要依賴你對回呼的理解。」\r\n[src](http:\/\/callbackhell.com\/)\r\n\r\n如果真的要用上更高階的作法，我建議參考 Calpa 的 [異步操作見聞錄](https:\/\/calpa.me\/2017\/09\/27\/async-summary\/)。\r\n\r\n----\r\n\r\n前端的變化很快，快到[有文章嘲諷 JS 框架的發展速度](https:\/\/hackernoon.com\/how-it-feels-to-learn-javascript-in-2016-d3a717dd577f)。但很多時候，其實會在想，自己是不是真的需要這些東西……\r\n我想起新手機的抉擇、還有支付寶的爭論。\r\n\r\n參考：\r\n\r\n* [Callback Hell](http:\/\/callbackhell.com)\r\n* [Callback Hell is a Myth ](http:\/\/thecodebarbarian.com\/2015\/03\/20\/callback-hell-is-a-myth)\r\n* [Stack Overflow: How to avoid long nesting of asynchronous functions in Node.js](https:\/\/stackoverflow.com\/questions\/4234619\/how-to-avoid-long-nesting-of-asynchronous-functions-in-node-js)\r\n* [Calpa：異步操作見聞錄](https:\/\/calpa.me\/2017\/09\/27\/async-summary\/)",
		"created_at" : "2017-12-26T02:53:09Z",
		"updated_at" : "2017-12-26T03:57:28Z"
	},
	{
		"id" : 4,
		"title" : "初見鐵路",
		"context" : "<p>很久以前，在 <a href=\"https:\/\/www.codecademy.com\/\">Codecademy<\/a> 學 Ruby on Rails，第一個感想是「不好用」。<\/p>\r\n<p>所以，決定先學前端。<\/p>\r\n\r\n<hr>\r\n<p>我從前端開始自學。可是，自學終究會有極限：我的美感是沒辦法追上的。<\/p>\r\n<p>為了結交些設計方面的朋友，我決定去參加職訓。自然的，在 HTML 方面，是學員裡面最好的幾位之一。<\/p>\r\n<p>那天，老師約我出去：<\/p>\r\n\r\n<blockquote>你前端都自學的話，要不要考慮學學後端？<\/blockquote>\r\n\r\n<p>於是我開始學 PHP 的框架 <a href=\"https:\/\/laravel.tw\/\">Laravel<\/a>。<\/p>\r\n<p>當時我後端語言只知道純 PHP……可是，框架學起來卻是相當<strong>痛苦<\/strong>：短短幾天要摸熟整個框架，令我十分焦慮。<\/p>\r\n<p>直到結訓後吧，才作出動態網站最基本的 <abbr title=\"Create, read, update and delete\">CRUD<\/abbr>──而且解決不了的問題非常多。<\/p>\r\n<p>後來，我想起自己用 <a href=\"https:\/\/getbootstrap.com\">Bootstrap<\/a> 用到最後覺得不順心，看到 <a href=\"https:\/\/imperavi.com\/kube\">Kube<\/a> 就徹底改用該框架的經歷……<\/p>\r\n<blockquote>不如我再看看其他框架，看看會不會像從 Bootstrap 轉投 Kube 一樣吧。<\/blockquote>\r\n<p>接著，看到很多人在力推 <a href=\"http:\/\/rubyonrails.org\/\">Ruby on Rails<\/a>，決定試試看。<\/p>\r\n<p>接著驚人的一刻出現了：<code>rails generate scaffold<\/code><\/p>\r\n<p>我用 Laravel 好幾天還搞不定的基本功能，Rails 才幾秒鐘就搞定了。<\/p>\r\n<p>我決定學下去。<\/p>\r\n<hr>\r\n<p>我一開始從 <a href=\"https:\/\/ihower.tw\/rails\/\">ihower 的 Ruby on Rails 實戰聖經<\/a> 還有 <a href=\"https:\/\/www.railstutorial.org\">Michael Hartl 的 Ruby on Rails Tutorial<\/a> 學習。<\/p>\r\n<p>但是後來去 <a href=\"https:\/\/rails-taichung.com\/\">Ruby on Rails\r\n臺中聚會<\/a>後，朋友們推薦 <a href=\"http:\/\/zh-tw.railsbridge.org\/docs\/\">RailsBridge<\/a>，發現 Rails 的入門友善許多。<\/p>\r\n<p>感覺就像是坐上一台 <a href=\"http:\/\/love-live.wikia.com\/wiki\/HAPPY_PARTY_TRAIN\">HAPPY PARTY TRAIN<\/a> 一樣。<\/p>\r\n<p>這大概就是我和 Ruby on Rails 如何邂逅的。<\/p>\r\n<hr>\r\n<p>所以，為什麼我推薦 Ruby on Rails 呢？<\/p>\r\n<ol>\r\n    <li>\r\n<code>rails generate scaffold<\/code> 可以快速產生有簡單讀寫功能的網站。這樣，就可以把時間與心力，花在修改外觀表現上。<\/li>\r\n    <li>Ruby 社群對新手相當友善：<a href=\"http:\/\/zh-tw.railsbridge.org\/docs\/\">RailsBridge<\/a> 與  <a href=\"http:\/\/railsgirls.tw\/\">Rails Girls<\/a> 的文章就夠你入門了。意猶未竟的話，還有 Meetup 可以去。<\/li>\r\n<\/ol>\r\n<hr>\r\n<p>不過也不能否認，慣例與語法，初期會有點難以捉摸。所以我某些地方同意阿川先生說的，<a href=\"http:\/\/blog.turn.tw\/?p=2881\">Rails 不適合完全沒基礎的初學者使用<\/a>。<\/p>\r\n<p>但是我不同意用 PHP 很舒服就是了（笑）不如說有點 HTML 基礎後、學點 JavaScript 的語法以體驗物件怎麼使用、再被 PHP 折磨一下，這個時候學就會比較有感覺。<\/p>",
		"created_at" : "2017-12-30T09:48:04Z",
		"updated_at" : "2017-12-30T09:48:04Z"
	},
	{
		"id" : 5,
		"title" : " devise 初探",
		"context" : "<p>一個網站光有 CRUD 是不夠的：如果你想做個人部落格，通常你會需要資料庫：透過資料庫搭配簡單程式，就再也不用直接寫一堆 HTML──你只要在後台程式專心寫文章就好。<\/p>\r\n<p>問題來了：<strong>這是你的個人部落格<\/strong>。你要怎麼讓電腦只允許你寫文章？<\/p>\r\n<p>你需要類似會員、管理員之類的東西。<\/p>\r\n<p>那怎麼在 rails 實做？<\/p>\r\n<p><a href=\"https:\/\/github.com\/plataformatec\/devise\">用 devise 吧。<\/a><\/p>\r\n<p><a href=\"http:\/\/railsgirls.tw\/devise\">Rails Girls 的講解還挺充足的。<\/a>只要照著做，<strong>簡易但堪用<\/strong>的認證機制就做出來了。<\/p>\r\n<p><a href=\"http:\/\/ithelp.ithome.com.tw\/articles\/10159830\">也可以參照 tinydenny 的短文。<\/a><\/p>\r\n<p>如果你確定只有你會維護這個部落格，你甚至可以清空註冊頁面，<a href=\"https:\/\/stackoverflow.com\/questions\/4316940\/create-a-devise-user-from-ruby-console\">只透過指令介面產生會員<\/a>。<\/p>\r\n<hr>\r\n<p>我還是說說東西好了。<\/p>\r\n<ol>\r\n    <li>正常來說，當你的 <code>rails g devise:install<\/code> 裝好後，應該會有三個指示。\r\n    <ol>\r\n        <li>\r\n<code>config.action_mailer.default_url_options = { :host =&gt; 'localhost:3000' }\r\n<\/code>：設定自動寄信的路徑。「如果忘記密碼了就寄信」功能就是透過這裡實現的。\r\n<a href=\"https:\/\/ihower.tw\/rails\/actionmailer.html\">ihower<\/a> 有詳細的資訊，不過因為目前的部落格不需要我以外的人註冊、編輯，所以目前我不管它。<\/li>\r\n        <li>去 <code>application.html.erb<\/code> 設定登入訊息，例如登入成功或失敗之類的......<\/li>\r\n        <li>去 <code>routes.rb<\/code> 設定首頁要放在哪裡。<\/li>\r\n    <\/ol>\r\n<\/li>\r\n    <li>把 devise 的 Model 做出來（<code>rails generate devise user<\/code>）然後產生一個資料庫吧（<code>rake db:migrate<\/code>）\r\n        <dl>\r\n            <dt>問：所以 <a href=\"http:\/\/railsgirls.tw\/devise\">Rails Girls<\/a> 說的，到底是產生了什麼 Model，產生了什麼欄位？<\/dt>\r\n            <dd>答：按照剛才的 <code>rails generate devise user<\/code> 指令，我們產生了 <code>user<\/code> 這個 Model。至於產生了什麼欄位，可以去 <code>db\/migrate\/xxxx...devise_create_users.rb<\/code> 來看。<\/dd>\r\n        <\/dl>\r\n<\/li>\r\n    <li>用 <code>rails g devise:views<\/code> 指令產生一組網頁吧。不過，這網頁還要改就是了。<\/li>\r\n    <li>要作到「如果尚未登入，就不能編輯文章」很簡單：在編輯表格的網頁加上 <code>user_signed_in?<\/code> 就對了。\r\n        <dl>\r\n            <dt>問：為什麼 <code>user_signed_in?<\/code> 以及 <code>current_user<\/code> 這兩個方法很有用？<\/dt>\r\n            <dd>答：<code>user_signed_in?<\/code> 是偵測用戶有沒有登入、<code>current_user<\/code> 則是撈出目前登入用戶的資料：例如 <code>current_user.email<\/code> 就是目前登入用戶的 email。光知道「這人有沒有登入」還有「目前登入用戶的資料」就足夠寫許多文章了。<\/dd>\r\n        <\/dl>\r\n<\/li>\r\n    <li>如何用 console 製造用戶？\r\n    <ol>\r\n        <li>打開終端機、在專案目錄打 <code>rails console<\/code>。<\/li>\r\n        <li>打下 <code>User.create!({:email =&gt; \"guy@gmail.com\", :password =&gt; \"111111\", :password_confirmation =&gt; \"111111\" })<\/code>\r\n<\/li>\r\n        <li>\r\n<code>User<\/code> 是你的 Model 名、<code>:email<\/code>、<code>:password<\/code>、<code>:password_confirmation<\/code> 分別等同於我們在網頁打的 email、密碼、還有確認密碼。<\/li>\r\n        <li>以後，你的登入信件就是 <code>guy@gmail.com<\/code>、而密碼就是 <code>111111<\/code> 了。<\/li>\r\n        <li>如果像我一樣是個人部落格就可以刪除註冊頁面了（笑）不過這也是因為我考慮到要掌握帳戶<\/li>\r\n    <\/ol>\r\n<\/li>\r\n<\/ol>\r\n<hr>\r\n<p><a href=\"http:\/\/stackoverflow.com\/questions\/5414262\/how-can-i-skip-an-error-if-find-returns-nothing-in-rails\">Coming soon<\/a><\/p>",
		"created_at" : "2017-12-30T09:50:31Z",
		"updated_at" : "2017-12-30T09:50:31Z"
	},
	{
		"id" : 6,
		"title" : "Update controller",
		"context" : "早期開發這個部落格的時候，要開發更新功能。\r\n\r\n如何開發更新功能？在 Ruby on Rails 以致所有 MVC 架構的世界，你應該要：\r\n\r\n1. 先產生一段能與資料庫交流的 Model，指令是 `rails g model`。這樣 MVC 的 M 就完成了。\r\n2. 產生一段控制器。控制器的英文是 Controller ，也就是 MVC 的 C。這要透過 `rails g controller` 完成。\r\n3. 最後去 `app\/views\/` 找到網頁寫好外觀。沒錯， views 就是 MVC 的 V。\r\n\r\n當我開發到控制器的時候，我發現 `Article.update( art_params )` 與 `railbridge 的 @job = Job.find(params[:id])` 乍看之下的效果一樣，不明白差別。但是接著，我很快的就發現 `Article.update( art_params )` 會更新所有文章。\r\n\r\n[所以我寫了這份註解。](https:\/\/github.com\/iigmir\/iismmx-rails-blog\/commit\/bd74bf7d19b237fd742aa73461b3cdd6b872c782#diff-a9812d4e3b1838fb7f02de4aa31d8033)",
		"created_at" : "2017-12-30T09:58:09Z",
		"updated_at" : "2017-12-30T09:58:09Z"
	},
	{
		"id" : 7,
		"title" : "會自己送出去的按鈕",
		"context" : "今天在為網站後台加按鈕以方便編輯的時候，發生了一件很久以前就有過的悲劇：button 按下去會直接送出去，**而不是執行其他動作**！\r\n\r\n「完蛋了」──正當我這麼想的時候，[stack overflow 救了我一命](https:\/\/stackoverflow.com\/questions\/6727251\/button-to-without-submit)──大概的意思就是說，`button` 透過設定，預設的類型為 `submit`。\r\n\r\n那，如果我不想讓 `button` 送出呢？那就要讓 `button` 歸為 `button`。\r\n\r\n怎麼做？[按照網站所說](http:\/\/www.wibibi.com\/info.php?tid=117)，有兩個辦法：\r\n\r\n1. button type=\"button\"\r\n2. input type=\"button\"\r\n\r\n第一個方法用下去會出問題，第二個就成功了！\r\n\r\n於是，一天又平安的度過了。\r\n\r\n-----\r\n\r\n2017\/08\/31 增筆：問題其實和[前端的 JavaScript 行為](https:\/\/developer.mozilla.org\/zh-TW\/docs\/Web\/HTML\/Element\/input\/submit)有關：\r\n> 請記住，如果表單內只有一個按鈕元素（例如  <code>&lt;button&gt;My button&lt;\/button&gt;<\/code>）的話，瀏覽器會自動把它視為提交按鈕。你要在其他按鈕之外，明確宣告一個提交按鈕。",
		"created_at" : "2017-12-30T10:03:15Z",
		"updated_at" : "2017-12-30T10:03:15Z"
	},
	{
		"id" : 8,
		"title" : "用 Disqus 給點意見",
		"context" : "雖然我個人不太喜歡留言。不過身為一個部落格，沒有留言好像說不過去。\r\n\r\n要做留言的話，第一個要考慮的問題，是如何實做反濫用機制──沒有人想看到自己的部落格，都是與 Line 妹妹喝茶吧？\r\n\r\n正當我這麼想的時候，有人告訴我：\r\n\r\n> 你可以用 [Disqus](https:\/\/disqus.com) 實做留言。\r\n\r\n於是我查了一下 Disqus 怎麼用。還蠻簡單的，套個 HTML 與 JavaScript 的腳本就成。\r\n\r\n但你看一下，上面的註解，有個有趣的東西……\r\n\r\n<pre>\r\n\/**\r\n*  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.\r\n*  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https:\/\/disqus.com\/admin\/universalcode\/#configuration-variables*\/\r\n\/*\r\nvar disqus_config = function () {\r\nthis.page.url = PAGE_URL;  \/\/ Replace PAGE_URL with your page's canonical URL variable\r\nthis.page.identifier = PAGE_IDENTIFIER; \/\/ Replace PAGE_IDENTIFIER with your page's unique identifier variable\r\n};\r\n*\/\r\n<\/pre>\r\n\r\n嗯，按照官方文件所說，這段小腳本可以避免意見重複發送。我似乎應該做這個東西吧？\r\n我運氣也不錯，很快就看到 Jason Lung 的文章：\r\n\r\n<pre>\r\nvar disqus_config = function () \r\n{\r\n    this.page.url = \"&lt;%= url_for([@post, {only_path: false}]) %&gt;\"\r\n    this.page.identifier = \"&lt;%= @post.id %&gt;\";\r\n};\r\n<\/pre>\r\n\r\n複製貼上，下一秒就完成囉。抄簡單der\r\n\r\n……才怪。\r\n\r\n> we were unable to load disqus. if you are a moderator please see our [troubleshooting guide](https:\/\/help.disqus.com\/customer\/portal\/articles\/472007-i-m-receiving-the-message-%22we-were-unable-to-load-disqus-%22)\r\n\r\n按照 troubleshooting guide 的說法，有以下幾個可以探測的點：\r\n\r\n1. 信任網域問題\r\n2. 載入網站是否一樣\r\n3. 域名有沒有變更\r\n\r\n我很確定我的網站沒有這些問題，所以我沒深究。\r\n\r\n1. 逾時：Disqus 表示「[網站部落格拜託你們，先幫我撐個十秒左右就好](https:\/\/www.youtube.com\/watch?v=myKf0AeSBOI)」\r\n2. [HTTP 狀態碼](https:\/\/blog.miniasp.com\/post\/2009\/01\/16\/Web-developer-should-know-about-HTTP-Status-Code.aspx)：這個可以透過開發工具檢測。200 代表成功載入、304 代表已經有了。\r\n\r\n那就是 JavaScript 的問題了吧？\r\n\r\n1. s.src 的網址正確與否：把裡面的網址貼到瀏覽器，如果找得到就成功了──前提是沒找錯人。\r\n2. 非 ASCII 字符：似乎是針對那些會用特殊符號如 ñ å š 之類的網站。我用的是數字所以沒差。\r\n3. JavaScript 變數：問題就在這裡，接下來就會談到。\r\n    1. this.page.title 不能超過兩百字。不過我沒寫就是了。\r\n    2. this.page.url 不能有空白。\r\n    3. this.page.url 必須是絕對網址。相對網址會出問題。\r\n\r\n所以要把上面那段程式碼修正為：\r\n\r\n<pre>\r\nvar disqus_config = function () \r\n{   \/\/ https:\/\/iismmx-rails-blog.herokuapp.com 是我的網站 URL。複製貼上的話，應該把 URL 變成自己的網站。\r\n    this.page.url = \"https:\/\/iismmx-rails-blog.herokuapp.com&lt;%= url_for([@post, {only_path: false}]) %&gt;\";\r\n    this.page.identifier = \"&lt;%= @post.id %&gt;\";\r\n};\r\n<\/pre>\r\n\r\n這樣就行了。一個留言後台終於完成了。\r\n\r\n等一下……我甚至連留言的資料庫都不用寫了嘛…………！！",
		"created_at" : "2017-12-30T10:09:48Z",
		"updated_at" : "2017-12-30T10:12:29Z"
	},
	{
		"id" : 9,
		"title" : "神戶的管路",
		"context" : "我一直是 [Kube](https:\/\/imperavi.com\/kube) 的愛用者：它簡易但靈活的架構、不預設或強加任何前提，深深吸引著對任何事都有定見的我。也或許是因為對任何事都有定見，我頗為抗拒 Bootstrap 的……不過 Kube 自己也宣稱了，它比較適合專業的前端使用，所以斟酌吧。\r\n\r\n嘛，正片開始。\r\n\r\n我[從 Github 下載 Kube](https:\/\/github.com\/imperavi\/kube) 到 rails 以後，就要開始開發了。一開始，我是用 `dist\/scss\/kube.scss` 檔案去開發。不過，常常都發現沒有任何樣式套進去，即使我加上了 class 也一樣。\r\n\r\n翻到 [Stack Overflow](https:\/\/stackoverflow.com\/questions\/12018820\/sass-compiles-empty-css-file) 的時候，發現他也有類似的問題。而得來的回答，是因為「這個 SASS 檔只有變數，自然什麼都不會編譯到」── SCSS 其實是 SASS 的一種──再回去翻 [Kube 的手冊](https:\/\/imperavi.com\/kube\/docs\/quick-start\/#h-development)後，發現這個檔案，對我而言還不夠。\r\n\r\n所以，我決定直接把 src 目錄的 SCSS 拿來用。但是問題又出現了：\r\n\r\n> Sass::SyntaxError......Undefined variable: \"$color-black\".\r\n\r\n一開始，我對 Asset Pipeline 毫不熟悉，所以沒辦法解決。但是看到 [Ruby on Rails 實戰聖經]以後，才發現 `require_tree .` 的意思是**載入所有目錄的所有預處理檔案**：\r\n\r\n> 實務上不喜歡用 require_tree 的方式來一次載入全部的 css 和 javascript，而是喜歡逐條 require載入，一來比較清楚，二來也可以確保 css 和 javascript 載入的順序是正確的。\r\n\r\n瞭解以後的我，把 application.css 的 require_tree . 改成 require kube，讓 application.css 只載入搬出來的 kube.scss。然後，就成功了。\r\n[Another reference](http:\/\/gogojimmy.net\/2012\/07\/03\/understand-assets-pipline\/)",
		"created_at" : "2017-12-30T10:17:55Z",
		"updated_at" : "2017-12-30T10:17:55Z"
	},
	{
		"id" : 10,
		"title" : "Form refreshed after AJAX",
		"context" : "在 rails 接上 AJAX 的時候，有個頗為糟糕的問題：那就是載入頁面以後，頁面會自動消失。我檢查一下後發現，是因為 AJAX 請求發生以後，瀏覽器又重新向頁面發送請求，所以頁面看起來像被重整。\r\n\r\n再查了一下 stack overflow 網站，問題的原因通常會這麼敘述：「因為登錄頁面用了 `form` 元素：它會在 AJAX 事件發生的時候自動傳送（submit）」\r\n\r\n解決辦法......好像和阻止立即傳送有關。不過，怎麼試也沒用，暫時先擱置好了。 \r\n\r\nRef:\r\n\r\n* [Why returned value from AJAX disappears almost instantly?](http:\/\/stackoverflow.com\/questions\/26809529\/why-returned-value-from-ajax-disappears-almost-instantly)\r\n* [Page refreshes after ajax request](http:\/\/stackoverflow.com\/questions\/32423364\/page-refreshes-after-ajax-request)\r\n* [How to stop refreshing page after ajax call?](http:\/\/stackoverflow.com\/questions\/27759380\/how-to-stop-refreshing-page-after-ajax-call)\r\n* [Stop HTML form from disappearing after AJAX call](http:\/\/stackoverflow.com\/questions\/24898958\/stop-html-form-from-disappearing-after-ajax-call)\r\n\r\n-----\r\n\r\n2018\/01\/01  後記：\r\n當年的問題，最後發現與 [turbolinks](https:\/\/github.com\/turbolinks\/turbolinks-classic) 這個套件有關。解決辦法，就是去掉它：也就是去掉  `'data-turbolinks-track': 'reload' `。",
		"created_at" : "2018-01-03T05:36:59Z",
		"updated_at" : "2018-01-03T05:37:09Z"
	},
	{
		"id" : 11,
		"title" : "vim 隨筆",
		"context" : "首先，先推薦 [vim adventures](https:\/\/vim-adventures.com\/) 這個遊戲。\r\n\r\n剛剛玩了幾個東西：\r\n\r\n* 多行註解：\r\n\t1. 在一般指令模式內按 <kbd>Ctrl<\/kbd> 加上 <kbd>V<\/kbd>：這會觸發區塊標記\r\n\t2. 選好以後按 <kbd>Shift<\/kbd> 加上 <kbd>i<\/kbd>，接著輸入 <code>\/\/<\/code> 註解（如果是 Python 或 Ruby 之類的，也可以輸入 <kbd>#<\/kbd>）\r\n\t3. 按下 <kbd>Esc<\/kbd>。收工！\r\n* <kbd>w<\/kbd> <kbd>W<\/kbd>：前往下一個單字。小寫會把符號算在路程內。\r\n* <kbd>b<\/kbd> <kbd>B<\/kbd>：前往上一個單字。小寫會把符號算在路程內。",
		"created_at" : "2018-01-03T07:44:59Z",
		"updated_at" : "2018-01-03T07:45:13Z"
	},
	{
		"id" : 12,
		"title" : "ckeditor without precompiled",
		"context" : "<p>本來的編輯器只有 HTML 加上數個 HTML 標籤插入鈕。這樣其實不太方便。所以我想用 ckeditor。<\/p>\r\n<p>運氣不錯的是，<a href=\"https:\/\/github.com\/galetahub\/ckeditor\">ckeditor 有 gem 能用<\/a>。我看著官方教程，以及 <a href=\"http:\/\/mariahavefun.logdown.com\/posts\/774943-ckeditor-installation-of-blood-and-tears\">maria 的程式<\/a>……然後就在我的上建好了！真叫人開心，<\/p>\r\n<p>真叫人開心，這麼簡單，佈署很快就能完成了。讚。<\/p>\r\n<p>……你以為這樣就能完成了？才不呢！<\/p>\r\n<p>到了上線以後，才是麻煩的開始。整個 ckeditor 根本沒有東西載入。<\/p>\r\n<p>瀏覽器是這麼寫的：<code>The resource from “https:\/\/iismmx-rails-blog.herokuapp.com\/” was blocked due to MIME type mismatch (X-Content-Type-Options: nosniff).<\/code><\/p>\r\n<p>MIME 是啥？簡單查了一下，姑且當作檔案類型吧：整個檔案類型似乎不對。看了訊息，有兩個 ckeditor 檔案是 301：也就是永遠移動了。因為我設定只要找不到的檔案，就會導回首頁，所以我會把它當成 404。<\/p>\r\n<p>對。<strong>找不到這兩個檔案<\/strong>。所以我又去查了一下，<strong>是因為某些檔案在上線後，不會被 precompile<\/strong>。<\/p>\r\n<p>precompile？啥？是我的話，我會翻成預先編譯。<\/p>\r\n<p>為什麼？目前不知道了。官方手冊說要加上這行：<code>Rails.application.config.assets.precompile += %w( ckeditor\/* )<\/code>。<\/p>\r\n<p>然而這並沒有什麼卵用。<\/p>\r\n<p>好吧。看到也有人碰上類似的問題，就覺得胃好痛。<\/p>\r\n<p>也許我該考慮去其他網站用 ckeditor，之後再複製貼上？<\/p>\r\n<hr>\r\n<p>參考資料：<\/p>\r\n<ul>\r\n  <li>logdown\r\n    <ol>\r\n        <li><a href=\"http:\/\/mariahavefun.logdown.com\/posts\/774943-ckeditor-installation-of-blood-and-tears\">Maria<\/a><\/li>\r\n        <li><a href=\"http:\/\/xtony77.logdown.com\/posts\/210308-rails-notes-ckeditor-interface-is-not-displayed-uploaded-file-failed-on-rails-4-production\">xtony77<\/a><\/li>\r\n    <\/ol>\r\n  <\/li>\r\n  <li>Stack Overflow\r\n    <ol>\r\n        <li><a href=\"https:\/\/stackoverflow.com\/questions\/35578067\/ckeditor-with-rails-4-mime-type-error\">CKeditor with Rails 4 mime type error<\/a><\/li>\r\n        <li><a href=\"https:\/\/stackoverflow.com\/questions\/19777316\/problems-with-ckeditor-running-on-production-rails-application-with-heroku\">Problems with ckeditor running on production Rails application with Heroku<\/a><\/li>\r\n    <\/ol>\r\n  <\/li>\r\n  <li><a href=\"https:\/\/github.com\/galetahub\/ckeditor\/issues\/714\">Github issue #714<\/a><\/li>\r\n<\/ul>\r\n\r\n-----\r\n\r\n2018\/01\/03 後記：新版改用 Markdown 格式，不再使用 ckeditor。",
		"created_at" : "2018-01-03T07:46:13Z",
		"updated_at" : "2018-01-03T07:48:15Z"
	},
	{
		"id" : 16,
		"title" : "我透過自學成了前端工程師",
		"context" : "註：原本為兩篇，新版微調後合併。\r\n\r\n-----\r\n\r\n<p>從 2015 夏天自學到 2017 年三月底，終於得到了前端開發的工作。<\/p>\r\n<p>之前的履歷一直都在履歷階段就遭到拋棄。連面試都沒有。在 Meetup 抱怨這件事之後，朋友給我推薦了 <a href=\"http:\/\/blog.niclin.tw\/\">NicLin<\/a> 的網站。<br>\r\n我接著和 NicLin 通了信，請他指引一下。在修正履歷以後，我發現有了點改變──卻沒有發現改變得如此巨大。<\/p>\r\n<p>來講講幾家公司的面試過程吧。<\/p>\r\n<ol>\r\n    <li>\r\n    <p>第一家在太平的素料公司。<\/p>\r\n    <p>過程：說穿了，那公司要的是懂 Photoshop 與 Dreamweaver 的行政雜工：面試官開門見山的說了雜務很多，碰電腦的時間不到半天。雖然我的條件其實不該挑剔太多，不過我還是問了些如為什麼需要招人之類的問題。<\/p>\r\n    <p>感想：……嗯，希望網頁能自己掌握很合理、認為網頁再重要也沒訂單重要也很合理。如果認為前者合理，就該徵人專門維護網頁；如果認為後者合理，就該把網頁外包給專業的人。而這兩個如果合在一起，就十分不合理。<br>\r\n    回去之後，覺得那些懂 Photoshop 與 Dreamweaver 而走掉的人十分合理……<\/p>\r\n    <p>這次的結果：<strong>無聲卡<\/strong>。<\/p>\r\n    <\/li>\r\n    <li>\r\n    <p>第二家在七期的 CBD 時代廣場大樓裡面（朝富路上，楓康大門對面那棟小蠻腰就是了），似乎在替客戶維護。<\/p>\r\n    <p>過程：面試官甲對我 CSS 預處理器的理解印象深刻，這方面聊得算是愉快。「為什麼要用預處理器」我也答得出來。<br>\r\n    只是，當他們談到自己的技術架構是 SCSS + Vuejs + webpack 時有點麻煩： SCSS 我懂，但是 Vuejs 我當時沒有碰、webpack 更是完全沒聽過－－不過面試官甲說「懂 Angular 的話 Vue 也是可以入門的」 當時鬆了一口氣。<br>\r\n    不過更大的麻煩還在後面……<br>\r\n    面試官 B 看到資料表，自然先問了我的大罩門：也就是學經歷。雖然我有告訴他們我完全自學的成果可以應付前端、而我對自己在 CSS 預處理器的回答頗滿意，但是在詢問「為什麼要踏入這一行」的時候，我開始有點鬆懈地回答「因為自己喜歡在電腦面前」 ……結果面試官 B 接著問了「所以，你和人溝通不良囉？」……只好勉強回答下去。<\/p>\r\n    <p>感想：我挖了個大坑自己跳，而裡面還有個炸藥。<br>\r\n    另外我回去以後玩了一下 Vuejs，我發現 Vuejs 的 MVVM 的確會讓使用 MVW 的 AngularJS 開發者感到熟悉。<\/p>\r\n    <p>這次的結果：口頭上說是<em>第二次面試<\/em>，但接著卻是<strong>不錄取<\/strong>的電話與信件回覆。<\/p>\r\n    <\/li>\r\n    <li>\r\n    <p>第三家在台灣大道上，長榮酒店對面的遠雄大樓，做軟體開發的。<\/p>\r\n    <p>過程：面試方先給了一份前端筆試，另外還有 IQ 測驗？好像是第九個圖片應該是什麼的。說實在答筆試不太容易，不過對面的朋友說我寫得很多，害我一開始有點信心。<br>\r\n    做完以後開始了面試。來面試的是一位技術人員、以及他的主管。 那位工程師問我有沒有作品，我給了他 Github 的網站……看完後，他回答說我做的網站不夠複雜、也沒有完整功能的網站、CSS\/JS 應該沒寫多少。另外，沒有朋友也是致命傷，因為有朋友在，可以勝過自學好幾年。云云。<\/p>\r\n    <p>感想：……很嚴苛的評價呢。我不期待結果了。<br>\r\n    回家以後，我開始懷疑這幾年的意義何在。但能突破同溫層，得到嚴苛的評價也是好事。<\/p>\r\n    <p>這次的結果：<strong>無聲卡<\/strong>，但我早就不期待了。<\/p>\r\n    <\/li>\r\n    <li>\r\n    <p>最後這家位於興富發鼎盛大廈（老虎城旁邊），公司（應該是）做第三方支付的。<\/p>\r\n\r\n    <p>過程：首先當然又前端筆試。雖然比第三家容易些，不過我其實沒有信心。 另外還有一份……紙筆版的智商測驗吧？某某某是誰、什麼英文的中文是什麼這種。感覺題目有點像是以前中科作業員那樣。接著是面試。技術人員說沒有時間看我的作品，叫我直接給他當場看。我正好又有平板。避免了上一家悲劇的我真的很幸運。接著技術人員要我寫一份小程式。關於這份小程式，請直接參見<a href=\"https:\/\/iigmir.github.io\/angularjs-notes\">我的 AngularJS 筆記<\/a>。<br>\r\n    再度聊了一下問題……嗯，發現自己問了不少技術人員無法回答的問題。和老闆面試之前，我向他要分數，原本因為上一家的關係，我以為只能拿個 40~60 分，但結果是……80 分以上。不過，這也要感謝技術人員，不斷提示我各種回答上的缺陷。<br>\r\n    <br>\r\n    這次和老闆面試了。印象最深的大概只有兩件：一是學經歷、二是結果。<br>\r\n    因為在第二家回答學經歷的時候大自爆，在這裡我就小心翼翼地回答：自己發現前端不是 <code>&lt;table&gt;<\/code> 用用就好、而前端可以透過網頁，很快地驗證自己想法結果云云。<br>\r\n    第二件事情是結果：當我問了例行性的「什麼時候通知」時……老闆看到我在「何時報到」勾了「隨時」。 沒錯，就是這麼急。 「你勾了隨時可以上班，那你可以明天就來報到嗎？」<br>\r\n    我愣了半秒，因為上次這個問題，是在兩年前的冬天。 半秒後我回答了：「是」。然後就去行政那邊聽了報到事宜。<br>\r\n    那天的夕陽很美很美。<\/p>\r\n    <p>感想：回答程式題的時候，把大括號、分號之類的寫進去會很有幫助。除了爭取思考時間以外，也能給面試官嚴謹的印象。<\/p>\r\n    <p>這次的結果：不用說，<strong>當場錄取<\/strong>、第二天報到。<\/p>\r\n    <\/li>\r\n<\/ol>\r\n\r\n<p>講了這麼多，這段就講謝詞吧。 首先我要感謝 <a href=\"https:\/\/rails-taichung.com\/\">Rails 臺中<\/a>：碰上了 Rails 臺中以後，終於實現了這一切。<br>也要感謝 <a href=\"http:\/\/blog.niclin.tw\/\">NicLin<\/a>：你對我履歷的意見十分有用。<br>另外，還要感謝<a href=\"http:\/\/www.hexschool.com\/\">六角學院<\/a>也給了我一點履歷的意見。<\/p>\r\n<p>以後再找時間談談自學的一點心路歷程？<\/p>\r\n\r\n-----\r\n\r\n<p>之所以想寫這篇，是因為看到了講「年薪百萬」的電腦補習班廣告，說矽谷程式員多有錢多有錢的。<br>\r\n但我的看法，這些人其實是有著深厚的技術底、又找到了營利模式優良的公司，才能拿到如此高薪。<br>\r\n但技術底這樣的東西，電腦補習班其實少有人教。要找到營利模式優良的公司更不容易。<\/p>\r\n<p>我自己則很少想過薪水，寫程式純粹是興趣使然而已：如果我最後沒辦法靠寫程式吃飯，說實在的，我都不知道自己還喜歡做什麼。<\/p>\r\n<p>因為想做，所以做了。<br>如此而已。<\/p>\r\n<p>離題了。總之講一點自學的故事吧：<\/p>\r\n<p>最初，我是從 <a href=\"https:\/\/code.org\">code.org<\/a> 看到一小時編程，玩了一下覺得很有趣，就開始想學程式。<br>之後無聊在 <a href=\"https:\/\/www.codecademy.com\/\">codecademy<\/a> 學起 Python，接著慢慢把裡面的項目，一個接一個的學起來。<\/p>\r\n<p>中途拿到了 CCNA 證書。那是一切的開始。<\/p>\r\n<p>可是 CCNA 的證書，卻什麼工作也不能保證：我當時一直在應徵電腦的修理、維護與網管，機會卻從未降臨到身邊。無可奈何，只好先去做其他工作。不過，有幾件事情改變了我的想法：<\/p>\r\n<ol>\r\n\t<li>我抱著把握任何機會的心態，去應徵寫網頁的工作，結果很快就被打槍了。離去前問面試官要如何改進，答曰：「<strong>想清楚自己到底想要做什麼<\/strong>」。<\/li>\r\n\t<li>應徵某份網管的工作，面試官問我會不會寫 Flash──我當然不會，但其實也不需要會：時值 2015 年的 Flash 已經有很多人不想用了，而且手機也不支援 Flash。<br>\r\n\t接著面試官問我「那麼要如何實現滑鼠移動到哪裡，就放大到哪裡」特效時，我好像也沒有回答清楚。不過回去看以後，發現可以用一個當時我第一次看見，現在卻很熟悉的名詞：<a href=\"https:\/\/jquery.com\/\">jQuery<\/a>。不過以現在的眼光來看，其實純 CSS 的動畫效果也行......<\/li>\r\n\t<li>應徵行政助理，面試官問我會不會用 <a href=\"https:\/\/www.adobe.com\/products\/dreamweaver.html\">Dreamweaver<\/a>──我當然會，那有什麼難的。我還能寫個官網給你看。<br>\r\n\t可是回去以後卻發現公司的官網是用 <code>&lt;table&gt;<\/code> 排版，看起來十分痛苦。從那天開始，我決定要學好用 <code>&lt;div&gt;<\/code> 配 CSS 的排版。<\/li>\r\n<\/ol>\r\n<p>工作期間，我還是靠著網路學習，來完成自己的作品。後來朋友們稱讚我的作品不錯，使我鼓起勇氣辭職。<br>\r\n不過這一步卻落空了。我投遞了太多太多的履歷，卻有太多太多的失落。直到 2016 年底的前端聚會，一切才有了<a href=\"https:\/\/iismmx-rails-blog.herokuapp.com\/articles\/21\">極度巨大的改變<\/a>。<br>\r\n改變的過程就省略了，來講講學習程式的心得：<\/p>\r\n<ol>\r\n\t<li>\r\n<strong>決定動機<\/strong>\r\n\t<ol>\r\n\t\t<li>\r\n<strong>問自己為什麼<\/strong>：如果有著能願意做一輩子的理由，你才能在拿到年薪百萬前，透過興趣克服無數的苦痛。<br>\r\n\t\t對了，如果你是因為喜歡在電腦面前沒日沒夜晚的做事，那怕是玩遊戲也好，都是很好的學習理由----但若想靠這個理由找程式員，就會有困難：因為寫程式也需要某種程度的溝通。而且你也需要足夠的睡眠時間，才能好好工作。<\/li>\r\n\t\t<li>\r\n<strong>問自己想鑽研的領域<\/strong>：你想要寫哪方面的程式？手機？網站？遊戲？嵌入式？<br>\r\n\t\t不同的程式需要不同的工具和語言：想寫自己的手機程式，比起 C++，學 Java 更容易達成自己的目標。<br>\r\n\t\t還是沒有譜的話，就去投身網站開發吧：無論前端後端，要投入的門檻都不算太高。<\/li>\r\n\t\t<li>\r\n<strong>真心想做的話就去做<\/strong>：只要想想如果自己要做討厭的事情一輩子、心態會多扭曲就知道了。我不覺得扭曲心靈的工作能做多久。<\/li>\r\n\t\t<li>\r\n<strong>背景不會是卻步的理由<\/strong>：有很多初階工作不需要懂太多演算法之類的東西，何況演算法也能在未來回學校學。但想回學校，我認為要先在業界一段時間才行。無論是因為籌學費、還是因為想培養進一步的基礎。<\/li>\r\n\t<\/ol>\r\n\t<\/li>\r\n\t<li>\r\n<strong>參與社群<\/strong>\r\n\t<ol>\r\n\t\t<li><strong>交幾個同好或業界人當朋友<\/strong><\/li>\r\n\t\t<li><strong>參加資訊方面的聚會<\/strong><\/li>\r\n\t\t<li><strong>找個開源社群看看<\/strong><\/li>\r\n\t<\/ol>\r\n\t在考慮自己的要不要怎樣前，你會有很多疑問：\r\n\t<ol>\r\n\t\t<li>你真心討厭目前的工作嗎？<\/li>\r\n\t\t<li>你真心想靠你喜歡這件事一輩子嗎？<\/li>\r\n\t\t<li>這種事又有沒人願意花錢找你做......？<\/li>\r\n\t<\/ol>\r\n\t這一切疑問，其實會有很多自己看不見的盲點，這也是很多人覺得「夢想不能當飯吃」的原因。你需要朋友給你指點迷津。<br>\r\n\t另外，聽聽別人那些夾帶著喜怒哀樂的閒聊也能讓你發現，這件事情是不是值得你克服無數的痛苦去做。<\/li>\r\n\t<li>\r\n<strong>培養自己的語言能力<\/strong>：資訊的世界以英文構成，你也需要每天去上網查資料。另外，對語文的掌握，也是踏入程式設計的敲門磚。<\/li>\r\n\t<li>\r\n<strong>寫作品<\/strong>：比起證書，一個自己寫的網站，更能看出實力。<\/li>\r\n<\/ol>\r\n<p>最後，感謝各位把這篇看到最後。<\/p>",
		"created_at" : "2018-01-03T07:54:21Z",
		"updated_at" : "2018-01-03T07:54:21Z"
	},
	{
		"id" : 14,
		"title" : "GOTO MVC! GOTO MVC!",
		"context" : "想像一家早餐店，烹飪鐵板就在用餐桌旁邊的那種。這種早餐店，你和老闆說下自己要什麼，老闆就會親自拿出原料下廚、並完成你要的餐點。然後你吃完餐點，走人。一個房間就能完成「烹飪→清潔店家→招呼」的所有事情。\r\n\r\n沒有 MVC 的網頁就像早餐店這樣：你直接對網頁的程式語法下各種指令：例如連接資料庫、執行各種動作……等。這種互動模式很簡單，如果只有做很簡單很簡單的功能，這種模式就已經堪用了：就好像一家早餐店，就算「烹飪→清潔店家→招呼」都只有老闆一個人、在一個沒隔間的小房間內完成也無妨。\r\n\r\n但是…假設餐廳的規模越來越大、客人越來越多、餐點越來越複雜……嗯，就假設是一間連鎖餐廳吧。你認為連鎖餐廳只用一個沒隔間的房間，就能完成所有事情嗎？很明顯的不行：老闆根本不能一個人完成所有事情。\r\n\r\n但就算請幾位「工作夥伴」也好不到哪裡去：「工作夥伴」們一下子要招呼客人、一下子要做菜、還要再清理餐廳……這樣一來，混亂可能還是小事，萬一搞到餐廳發生火警就麻煩啦。\r\n\r\n所以這老闆決定，把「工作夥伴」們分成三個部門：第一個部門就專門烹調、第二個部門就去用餐區送菜色、第三個部門就去外面招呼客人。這家餐廳終於上軌道了。\r\n\r\n---\r\n\r\n所謂的 MVC 就是 Model, View, Controller，中文翻譯為「模型、視圖、控制器」：模型和資料庫互動，並完成程式的運作方法、視圖負責呈現程式的外觀、最後控制器負責前兩者的聯繫。這和前面的餐廳有什麼關係？且聽我這比較：\r\n\r\n* 客人來到餐廳→櫃台招呼客人點餐→櫃台去叫廚房做菜→廚房做菜→櫃台負責帶位→客人之後在用餐區用餐\r\n* 網站收到請求→控制器要處理請求→控制器與模型互動→模型處理程式→控制器與視圖互動→視圖呈現外觀\r\n\r\n過程就是這樣。是不是很熟悉？\r\n\r\n---\r\n\r\n原本用純 PHP 檔案的話，你想要做個[會員登錄畫面](https:\/\/wiki.jonathancoulton.com\/Code_Monkey\/Lyrics)：\r\n\r\n1. 首先就要寫個 HTML 表單，把要用戶寫的地方，填東西進去\r\n2. 然後想要好看？就在 HTML 打個 color 或是 width 之類的屬性調整顏色長度之類\r\n3. 想要在送出以前，確認用戶有沒有填東西進去？就寫個 onsubmit 進來\r\n4. 確認之後的登錄呢？就寫個 `<?php \"SELECT\" .$_POST[\"foobar\"]. \"from members\" ?>`。\r\n5. ......\r\n\r\n長此以往，這個網頁最後會看起來一團亂。有一天，當你要找出為什麼大家抱怨無法登錄的時候，你痛苦得發現整個原始碼的行事邏輯混在一起，問題根本無從找起。\r\n\r\n對了，你最後發現為什麼大家抱怨無法登錄，[是因為某個傢伙下了個神秘的引號](https:\/\/developer.mozilla.org\/zh-TW\/docs\/Glossary\/SQL_Injection)，讓你的會員資料庫啾咪了。\r\n\r\n這整個實做過程其實包含好幾個語言：\r\n\r\n* HTML\r\n* CSS\r\n* JavaScript\r\n* PHP\r\n* SQL\r\n\r\n痛定思痛，你決定分成幾個部份：\r\n\r\n1. 最基本的表單用 <a href=\"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTML\/Element\/form\">HTML<\/a> 寫出來。\r\n2. 然後外觀針對某些地方指定 <a href=\"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTML\/Global_attributes\/id\">id<\/a> 後獨立成某個 <a href=\"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/CSS\/ID_selectors\">CSS<\/a> 檔案。\r\n3. 驗證部份再用該 id 寫成獨立的 <a href=\"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/API\/Document\/getElementById\">JavaScript<\/a> 檔案。最後，你乾脆直接用聽說很強很好用的 <a href=\"https:\/\/angularjs.org\/\">AngularJS<\/a>。\r\n3. 用 <a href=\"https:\/\/secure.php.net\/manual\/en\/function.include.php\">include<\/a> 載入又一個獨立的 PHP 檔案。\r\n\r\n還不錯，好多了：把外觀、路徑處理、以及程式運作獨立起來後，就漸漸有 MVC 的雛型。不過，有沒有一個關於這些步驟的懶人包？\r\n\r\n---\r\n\r\n用到後來，你發現 AngularJS 好像是 MVC，Ruby on Rails 也是 MVC。那，這兩個是一樣的嗎？\r\n\r\n[技術上來說不是](http:\/\/blog.turn.tw\/?p=1539)。那怎麼辦？\r\n\r\n告訴你，AngularJS 其實不是 MVC，而是 MVW：Model-View-Whatever：我們把這一切都歸為 MVW，然後就這樣吧。",
		"created_at" : "2018-01-03T07:51:12Z",
		"updated_at" : "2018-03-12T04:47:01Z"
	},
	{
		"id" : 13,
		"title" : "Vue 隨筆",
		"context" : "由原文章「V for VEndetta」與「 Vue，關於作用域。 」合併。\r\n\r\n-----\r\n\r\n<p>這次面試聽到公司用 <a href=\"https:\/\/vuejs.org\">Vue.js<\/a>──嗯，沒聽過。晚上試試看吧。<\/p>\r\n<p>然後我發現 Vue.js 頗有趣的，而且用 Angular 的我還有點熟悉感……<\/p>\r\n<p>用這個簡單的小程式碼講些東西吧：<\/p>\r\n\r\n<pre>\r\n&lt;div id=\"app\"&gt;\r\n    &lt;p&gt; {{ message }} &lt;\/p&gt;\r\n&lt;\/div&gt;\r\n&lt;!-- 略 --&gt;\r\nvar app = new Vue\r\n({\r\n    el: \"#app\",\r\n    data:\r\n    {\r\n        message: \"Hello VueJS!\"\r\n    }\r\n});\r\n<\/pre>\r\n\r\n<p>來說說這些程式碼的意義吧：<\/p>\r\n\r\n<ol>\r\n\t<li>\r\n<code>new Vue<\/code> 的意思是建立一個新的 Vue 物件。因為這個新物件裡面可能會放很多東西，所以我們要借用 JSON 格式 <code>{}<\/code> 來宣告。<\/li>\r\n\t<li>\r\n<code>el<\/code> 的意思是是 element，也就是 HTML 元素。它會讓 Vue 知道這個物件應該作用到哪個 HTML 元素上。<\/li>\r\n\t<li>\r\n<code>data<\/code> 會放置訊息。裡面的 <code>message<\/code> 就會對應到 HTML 的 <code>{{ message }}<\/code>。<\/li>\r\n<\/ol>\r\n\r\n-----\r\n\r\n今天在撰寫一個小程式：\r\n\r\n<pre>\r\nvar app = new Vue\r\n({\r\n    el: '#app',\r\n    data:\r\n    {\r\n        foo:\"Hello there\",\r\n        bar:countries_data,\r\n        ipt:\"\",\r\n    },\r\n    methods:\r\n    {\r\n        ret: function()\r\n        {\r\n            this.bar.forEach(function(ic)\r\n            {\r\n                if ( this.$data.ipt[0] == ic.abc )\r\n                {\r\n                    console.log( ic.xyz );\r\n                }\r\n            });\r\n        }\r\n    }\r\n});\r\n<\/pre>\r\n\r\n<p>這個程式在執行 <code>ret<\/code> 函式的時候，應該要檢查 <code>data<\/code> 裡面的 <code>ipt<\/code> 是否與 <code>bar<\/code> 裡面的 <code>abc<\/code> 吻合。而且因為 <code>bar<\/code> 是陣列，所以我用了 <code>forEach <\/code>語法……結果我一直得到錯誤訊息：<code>this.$data is undefined<\/code>。<\/p>\r\n<p>上網問人，才發現是我搞錯了作用域：如果我希望找到 <code>ipt<\/code>，那把 <code>this<\/code> 放到 <code>ret<\/code> 函式裡面，就絕對找不到──我應該要把 <code>this<\/code> 以變數的形式，放在 <code>forEach<\/code> 函式的外面。然後在該函式裡面，呼叫變數：<\/p>\r\n<pre>\r\nvar vm = this;\r\nthis.bar.forEach(function (ic) {\r\n  console.log(vm.ipt);\r\n});\r\n<\/pre>\r\n<p>把 <code>vm<\/code> 放在 <code>forEach<\/code> 外面的話，<code>forEach<\/code> 函式呼叫的 <code>vm<\/code> 就可以保留住我要的作用域了。<\/p>\r\n<p>另外，好像還有 arrow function 以及 <code>bind<\/code> 語法能用……<\/p>",
		"created_at" : "2018-01-03T07:50:28Z",
		"updated_at" : "2018-01-03T07:58:34Z"
	},
	{
		"id" : 17,
		"title" : "npm 的筆記",
		"context" : "由「用 node 架一個迷你靜態伺服器」、「npm 超級簡短文」、「久違的自動化」合併。\r\n\r\n-----\r\n\r\n<p>之前的網頁都直接在目錄中點擊 HTML 檔案。這個樣子的網址列，會以 <code>file:\/\/<\/code> 為開頭。雖然在自家電腦的版面配置上，這樣已經頗足夠了──但──<\/p>\r\n<ul>\r\n\t<li>如果要在其他電腦上檢查網頁呢？<\/li>\r\n\t<li>如果想模擬網站又不想用 <a href=\"https:\/\/www.apachefriends.org\/zh_tw\/\">XAMPP<\/a> 呢？<\/li>\r\n\t<li>如果想要在目錄間不斷切換呢？<\/li>\r\n\t<li><a href=\"https:\/\/developer.mozilla.org\/zh-TW\/docs\/Web\/HTTP\/Access_control_CORS\">「為什麼會我網頁的某些圖片不見了？」<\/a><\/li>\r\n\t<li>…………<\/li>\r\n<\/ul>\r\n<blockquote>\r\n<p>為什麼不用 <a href=\"https:\/\/nodejs.org\">node.js<\/a> 做個超簡單的伺服器呢？<\/p>\r\n<\/blockquote>\r\n<p>於是我就開始裝了。其實不難：<\/p>\r\n<ol>\r\n\t<li>先去 node.js 官網下載並安裝 node.js。安裝好以後，應該能用上兩個指令：node 與 npm。<\/li>\r\n\t<li>打開作業系統的終端機（例如 WIndows7 以後的就選 Powershell）然後鍵入這個指令：<code>npm install http-server -g<\/code>\r\n<\/li>\r\n\t<li>成功的話應該會開始下載、安裝必要的程式。<br>\r\n\t另外解釋一下各個指令的含意：\r\n\t<ol>\r\n\t\t<li>\r\n<a href=\"https:\/\/www.npmjs.com\/\">npm<\/a> 是管理各個小套件的程式。<\/li>\r\n\t\t<li>install 可以幫你安裝在 npm 網站的套件。<\/li>\r\n\t\t<li>\r\n<a href=\"https:\/\/www.npmjs.com\/package\/http-server\">http-server<\/a> 是這篇文章的主角：http-server 套件。<\/li>\r\n\t\t<li>-g 可以讓 http-server 這個套件，在這台電腦的任何目錄運行。這樣想測試其他網頁的目錄，就可以直接關機後在目錄切換，而不需要每個目錄都安裝。 <\/li>\r\n\t<\/ol>\r\n\t<\/li>\r\n\t<li>裝好以後，把終端機的目錄轉換到想測試的網頁目錄所在（如果在 WIndows7 想偷懶，可以在該目錄的目錄列上鍵入 <code>powershell<\/code>）<\/li>\r\n\t<li>開啟終端機以後，鍵入 <code>http-server<\/code> 指令。看到 <code>Starting up http-server, serving .\/<\/code> 之類的字眼以後，一個迷你的伺服器就開始在運作了。<\/li>\r\n\t<li>你可以在本機用任何 <code>Available on:<\/code> 下面的 IP 網址連結。<\/li>\r\n\t<li>若要在其他電腦上檢查你的網頁，最好還是先用 <code>ipconfig<\/code> 檢查一下位置。另外，防火牆記得開啟 8080 port，不然會被擋住。（想要偷懶的話也可以直接關掉，但盡量不要這麼做）<\/li>\r\n\t<li>想關掉 http-server，請按 <kbd>Ctrl<\/kbd> 與 <kbd>C<\/kbd>。<\/li>\r\n<\/ol>\r\n<p>接下來我會試著尋找、安裝、並探索 SASS 套件，這樣就可以在本機寫好 <a href=\"http:\/\/sass-lang.com\/\">SASS<\/a> 後直接編譯了。<\/p>\r\n<p>再之後，也許可以用測試套件自動化這一切？<\/p>\r\n\r\n-----\r\n\r\n<p>先從建立空白資料夾開始說吧：你想要開啟專案，可以下 <code>npm init<\/code> 指令開始，然後按照指示完成基本資料。接著，在 <code>package.json<\/code> 的 <code>devDependencies<\/code> 裡面增加所需要的套件：例如說我裝了 <code>http-server<\/code> 與 <code>node-sass<\/code> 的話，就鍵入 <kbd>npm install<\/kbd> 開始安裝這兩個套件。完成以後，就可以用了。<\/p>\r\n<p>SASS 編譯方法不難：想把 sass 目錄的 foo.scss 編譯到 public 目錄下，變成 bar.css 的話，輸入 <code>node-sass sass\/foo.scss public\/bar.css<\/code> 就好。<\/p>\r\n<p>但是，如果想執行的話，就要從 <code>node_modules<\/code> 下面的套件找 bin 執行。這樣很麻煩呢，有沒有簡單的辦法？<br>\r\n有。請在 <code>package.json<\/code> 的 <code>scripts<\/code> 裡撰寫指令。<br>\r\n指令當然可以直接寫，但這樣總有一天會造成麻煩。所以，試著參考下各套件的指令，接著把對應的指令寫進 <code>bin<\/code> 目錄裡面吧。<\/p>\r\n<p><a href=\"https:\/\/medium.com\/@brianhan\/watch-compile-your-sass-with-npm-9ba2b878415b\">Watch &amp; Compile your Sass with npm<\/a> 這文章還不錯的，好入門。<\/p>\r\n<p>另外還有些雜七雜八的紀錄：<\/p>\r\n<ol>\r\n\t<li>\r\n<a href=\"https:\/\/stackoverflow.com\/questions\/39330727\/node-sass-command-not-found-when-compiling\">為什麼想執行程式，得從 <code>node_modules<\/code> 下面的套件找 bin 執行？<\/a>\r\n\r\n\t<blockquote>Did you install the package globally (npm install -g node-sass) or locally? If locally, the CLI tool can be called as .\/node_modules\/.bin\/node-sass.<\/blockquote>\r\n\t<\/li>\r\n\t<li><a href=\"http:\/\/eddychang.me\/blog\/16-javascript\/58-nodes-update.html\">如何更新 node？<\/a><\/li>\r\n\t<li>寫好的檔案無法執行？把 bin 檔裡面的權限設定好了嗎？要可執行（exectueable）才行。<\/li>\r\n\t<li>想得到壓縮版的 CSS？ <a href=\"https:\/\/stackoverflow.com\/questions\/40579330\/minify-css-with-node-sass\">--output-style compressed<\/a>\r\n<\/li>\r\n<\/ol>\r\n<p>暫時先寫這樣。接下來，會想試試如何用 browserSync、還有該用什麼自動化指令，讓我存檔後立刻重整頁面，而不用一直打 <code>npm run<\/code>。<a href=\"https:\/\/kejyuntw.gitbooks.io\/gulp-learning-notes\/content\/plguins\/Tool\/Plugins-Tool-browser-sync.html\">參考資料<\/a>。<\/p>\r\n<p>唔，好累。好想睡覺……<\/p>\r\n\r\n-----\r\n\r\n<p>前面說好的 <code>npm<\/code> 自動化，因為一直找不到入門點，所以學起來其實很不順利。直到看了 <a href=\"https:\/\/developer.mozilla.org\/zh-TW\/docs\/Learn\/Tools_and_testing\/Cross_browser_testing\/Automated_testing\">MDN<\/a> 的文章，才發現了希望。<\/p>\r\n\r\n<p>MDN 示範的自動化工具稱作 <a href=\"http:\/\/gulpjs.com\/\"><code>gulp<\/code><\/a>。用 <code>npm install --global gulp-cli<\/code> 與 <code>npm install --save-dev gulp<\/code> 安裝 gulp 以後，這個專案就有自動化的功能了--但你必須在根目錄的 <code>gulpfile.js<\/code> 先設定好。<\/p>\r\n\r\n<p>我們直接給個程式碼吧：<\/p>\r\n\r\n<pre>\r\nvar gulp        = require('gulp');\r\nvar browserSync = require('browser-sync').create();\r\nvar gulpSass    = require('gulp-sass');\r\n\r\ngulp.task('browser-sync', function()\r\n{\r\n    browserSync.init({\r\n        server: {\r\n            baseDir: \".\/public\"\r\n        }\r\n    });\r\n});\r\n\r\ngulp.task('sass', function()\r\n{\r\n    return gulp.src(\"src\/scss\/*.scss\")\r\n        .pipe(gulpSass({\r\n            outputStyle: 'compressed'\r\n        }))\r\n        .pipe(gulp.dest(\"public\/css\"))\r\n        .pipe(browserSync.stream());\r\n});\r\n\r\ngulp.task('watch', function ()\r\n{\r\n    gulp.watch(\"src\/scss\/*.scss\", ['sass']);\r\n    gulp.watch(\"public\/*\/*\").on('change', browserSync.reload);\r\n    gulp.watch(\"public\/*\").on('change', browserSync.reload);\r\n});\r\n\r\ngulp.task('default',['browser-sync','watch']);\r\n<\/pre>\r\n\r\n<p>最上面的 <code>require<\/code> 就是這個程式要引用的軟體。這裡用了 <code>gulp<\/code>、<a href=\"https:\/\/www.npmjs.com\/package\/browser-sync\"><code>browser-sync<\/code><\/a>、<a href=\"https:\/\/www.npmjs.com\/package\/gulp-sass\"><code>gulp-sass<\/code><\/a> 這三個。針對不同的軟體，要寫不同的指令，以做出對應的動作：<a href=\"https:\/\/browsersync.io\/\">BrowserSync<\/a> 是個能自動重整、模擬網站的工具。<br>\r\n在這裡，我們指定了 BrowserSync 要測試的目錄，它位於 <code>.\/public<\/code> 裡面。<br>\r\n<code>sass<\/code> 呢，就叫它把 <code>src\/scss<\/code> 的 SCSS 檔案變成 CSS 檔案，並放到 <code>public\/css<\/code> 目錄。<\/p>\r\n\r\n<p><code>watch<\/code> 會自動檢查指定的檔案有沒有變更。變更的話就會：<\/p>\r\n\r\n<ul>\r\n\t<li>檢查 <code>src\/scss<\/code> 的 SCSS 檔有沒有變更。有的話，執行 <code>['sass']<\/code> 任務。<\/li>\r\n\t<li>檢查 <code>public<\/code> 目錄裡面的檔案有沒有變更。有的話，叫 <code>browserSync<\/code> 重新整理。<\/li>\r\n<\/ul>\r\n\r\n<p>那麼，下一步呢？告訴你，我們最後可以用 <code>gulp<\/code> 指令就能完成一切。<\/p>\r\n\r\n<p>可是如何完成？<\/p>\r\n\r\n<p>看到最下面的 <code>gulp.task('default',['browser-sync','watch']);<\/code> 了嗎？<code>gulp.task('default'); <\/code>是 <code>gulp<\/code> 的預設指令。如果只有輸入 <code>gulp<\/code> 而沒輸入其他任務以執行之，<code>gulp<\/code> 就會執行 <code>default<\/code>。而在 <code>default<\/code> 裡面，我們安插了兩個任務：<code>browser-sync <\/code>與 <code>watch<\/code>。這樣，<code>gulp<\/code> 預設就會執行 <code>browser-sync<\/code> 與 <code>watch<\/code>。而 <code>watch<\/code> 會執行 <code>sass<\/code>，使我們可以完成：存檔後立刻重整頁面、還有把 SCSS 檔案編譯成 CSS 後複製到 <code>public<\/code> 目錄。<\/p>\r\n\r\n<p>就這樣，只要開啟命令列並移動到專案目錄後輸入 <code>gulp<\/code>，自動化工作開始了。可喜可賀可喜可賀。<\/p>\r\n\r\n<p>改天把作品傳上來？<\/p>\r\n\r\n<p>註：<a href=\"https:\/\/stackoverflow.com\/questions\/9901082\/what-is-this-javascript-require\"><code>require()<\/code> 並不是 JavaScript 的語法<\/a>。<code>require()<\/code> 指令使用的是 Node.js 的模組。<\/p>\r\n\r\n<p>參考：<\/p>\r\n<ul>\r\n\t<li><a href=\"https:\/\/kejyuntw.gitbooks.io\/gulp-learning-notes\/plguins\/CSS\/Plugins-CSS-gulp-sass.html\">Gitbook<\/a><\/li>\r\n\t<li><a href=\"https:\/\/developer.mozilla.org\/zh-TW\/docs\/Learn\/Tools_and_testing\/Cross_browser_testing\/Automated_testing\">MDN<\/a><\/li>\r\n\t<li><a href=\"https:\/\/browsersync.io\/docs\/gulp%22%22\">BrowserSync<\/a><\/li>\r\n<\/ul>",
		"created_at" : "2018-01-03T08:02:16Z",
		"updated_at" : "2018-01-03T08:02:16Z"
	},
	{
		"id" : 18,
		"title" : "極快速使用 Carrierwave 在 rails 上傳圖片",
		"context" : "<p>參考一下我的 <a href=\"https:\/\/github.com\/iigmir\/rails-32-help\">repo<\/a>！<\/p>\r\n\r\n<h3>正文<\/h3>\r\n<p>配合<a href=\"https:\/\/code.tutsplus.com\/tutorials\/rails-image-upload-using-carrierwave-in-a-rails-app--cms-25183\">這篇<\/a>來看效果更佳。<\/p>\r\n<p>先從很久以前的這段對話開始吧。<\/p>\r\n\r\n<blockquote>\r\n<p>「如果我要上傳圖片的話，是不是要在資料庫裡面，新增一個 BINARY 型別，然後把圖片轉成二進位格式？」<br>\r\n「你幹嘛那麼辛苦啊？把圖片放在伺服器，然後給個圖片的路徑不就好了。」<\/p>\r\n<\/blockquote>\r\n\r\n<p>在 rails 要上傳圖片的話，你需要用到 <a href=\"https:\/\/github.com\/carrierwaveuploader\/carrierwave\">CarrierWave<\/a> 這個軟體。它可以幫忙完成上傳任務。<br>\r\n另外，你還需要 <a href=\"http:\/\/www.imagemagick.org\/script\/index.php\">ImageMagick<\/a> 來幫你做圖片縮放。<\/p>\r\n\r\n<ol>\r\n\t<li>先確定有沒有安裝 ImageMagick 這個軟體，不確定的話先安裝吧：例如 Ubuntu 就是 <code>sudo apt-get install imagemagick<\/code>。<\/li>\r\n\t<li>不免俗的當然要先初始化專案：<code>rails new pictures<\/code>。<\/li>\r\n\t<li>去 <code>Gemfile<\/code> 引入上面提到的兩個 Gem 並輸入 <code>bundle<\/code> 安裝之。亦即：\r\n\t<pre>\r\ngem 'carrierwave', '~&gt; 0.10.0'\r\ngem 'mini_magick', '~&gt; 4.3'<\/pre>\r\n\t這會安裝到舊版。新版的以後再增筆。<\/li>\r\n\t<li>使用鷹架快速完成稱為 <code>test<\/code> 的架構：<code>rails g scaffold test name:string description:text image:string<\/code>，接著用 <code>rake db:migrate<\/code> 產生資料庫。<\/li>\r\n\t<li>新增稱為 <code>Image<\/code> 的上傳器（uploader）：<code>rails generate uploader Image<\/code>\r\n<\/li>\r\n\t<li>去剛產生的 <code>uploader<\/code> 檔案改一些東西：\r\n\t<ol>\r\n\t\t<li>如果需要縮圖，你必須啟動 ImageMagick 程式並指定縮圖大小：前者需要去除 <code>include CarrierWave::MiniMagick<\/code> 註釋完成；後者則需要 <code>version :thumb do<\/code> 函式：該函式裡面有 <code>process :resize_to_fill =&gt; [50, 50]<\/code> 的宣告。其中 <code>[50, 50]<\/code> 陣列就可以指定縮圖大小。<\/li>\r\n\t\t<li>\r\n<code>def extension_white_list<\/code> 能指定上傳格式。<\/li>\r\n\t\t<li>之類之類.....<\/li>\r\n\t<\/ol>\r\n\t<\/li>\r\n\t<li>告訴 model 我們要用 image 上傳器吧：去 <code>app\/models\/test.rb<\/code> 寫下 <code>mount_uploader :image, ImageUploader<\/code>。<\/li>\r\n\t<li>最後去 view，也就是前端，把介面做出來。像是把 <code>text_area<\/code> 變成 <code>file_field<\/code>、以及 <code>image_tag<\/code> 包著 <code>@test.image<\/code> 之類的。<\/li>\r\n\t<li>就這樣！如果要限制大小，你可以到 model 設定。<\/li>\r\n<\/ol>\r\n\r\n<h3>\r\n<a href=\"http:\/\/railsgirls.tw\/thumbnails\">Rails Girls<\/a> 還有其他的問答<\/h3>\r\n\r\n<dl>\r\n    <dt>在第四個步驟完成時，解釋用 HTML 指定圖片寬度與伺服器來縮圖的差別<\/dt>    \r\n    <dd>用 HTML 或 <a href=\"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/CSS\/width\">CSS<\/a> 指定圖片寬度的意思，是我們直接把原圖上傳到伺服器。發動請求時，瀏覽器也抓取原圖，再透過瀏覽器的 HTML 或 CSS 引擎來調整外觀；<br>用伺服器來縮圖，則是在把原圖上傳到伺服器後，透過程式把原圖縮小，並以縮圖的形式保存。發動請求時，瀏覽器抓取縮圖。<br>這麼做的用意，是節省瀏覽器抓取的大小、以及隨之而來的時間與頻寬。<\/dd>\r\n    <dt>ImageMagick 是什麼？跟我們之前用的 libraries\/gems 有什麼差別？<\/dt>\r\n    <dd>第一個問題前面講過了不贅述。第二個問題：ImageMagick 並不在 libraries\/gems 裡面，所以它並不是 rails gems 套件的一部分。你必須另外安裝才能用。就好像你必須安裝 Skype 軟體而不是安裝套件，才能在瀏覽器開啟用 Skype 的連結一般。<\/dd>\r\n    <dt>解釋程式語言裡註解的概念。<\/dt>\r\n    <dd>幾乎所有的電腦語言，都會有一個稱作註解（Comment）的東西。把一段文字用註解包起來的話，電腦不會執行這段程式碼。通常，寫程式的人會在註解裡面說明某段程式如何運作，或是修改某段程式需要注意的地方...之類的。所以<strong><a href=\"https:\/\/www.ptt.cc\/bbs\/joke\/M.1444278263.A.2AD.html\">檔不能沒有註解<\/a><\/strong>！<br><strong>注意<\/strong>：電腦不會執行註解，不代表電腦讀不到註解。<\/dd>\r\n    <dt>語意化的問答應該用什麼標籤好？<\/dt>\r\n    <dd>\r\n<a href=\"https:\/\/stackoverflow.com\/questions\/513888\/semantic-html-markup-for-faqs\">dl and dt<\/a>.<\/dd>\r\n<\/dl>\r\n\r\n<p><small>對了，我被開除了。<br>唯一還能安慰的，是開除理由並非技術不行。<\/small><\/p>",
		"created_at" : "2018-01-03T08:03:53Z",
		"updated_at" : "2018-01-03T08:03:53Z"
	},
	{
		"id" : 19,
		"title" : "Telegram Bot: From start to abandon",
		"context" : "<p>我曾經想過一個 <a href=\"https:\/\/core.telegram.org\/bots\">Telegram 機器人<\/a>的專案：它可以每天檢查日期，並在特定日期的時候送出訊息。<\/p>\r\n<p>最後我放棄了，因為遠比我想像中的難很多。不過也許有天我會重啟，所以先記下筆記。<\/p>\r\n<p>首先，我先假設你已經有了 Telegram 帳號，並透過 <a href=\"https:\/\/telegram.me\/botfather\">BotFather<\/a> 帳號建了一個機器人。<br>\r\n從這裡開始來講如何寫個機器人：首先先選個習慣的工具來寫：我這邊選用了 mullwar 的 <a href=\"https:\/\/github.com\/mullwar\/telebot\">telebot<\/a> 來用。<br>\r\n接著就可以開始寫了。一開始可以先照手冊複製貼上。<\/p>\r\n<p>那個每天檢查的並在特定日期的時候送出訊息怎麼寫？嗯，<a href=\"https:\/\/github.com\/irazasyed\/telegram-bot-sdk\/issues\/20\">看起來 Telegram 沒有定時送信的 API<\/a>，我只好自己想辦法了。<br>\r\n我一開始認為應該向 <a href=\"https:\/\/zh.wikipedia.org\/wiki\/%E7%B6%B2%E8%B7%AF%E6%99%82%E9%96%93%E5%8D%94%E5%AE%9A\">NTP<\/a> 求日期，所以想用 ntp-client 抓時間並配合 moment 套件完成。不過，在看了 <a href=\"https:\/\/www.reddit.com\/r\/TelegramBots\/comments\/3d83jm\/how_to_send_daily_notifications\/\">reddit 的討論<\/a>後，我發現我搞錯了方向：就算用了 NTP，我還是會需要自動排程來完成工作。自動排程，似乎要使用 <a href=\"http:\/\/linux.vbird.org\/linux_basic\/0430cron.php\">cron jobs<\/a> 這玩意（另外還有一個有趣的東西叫 <a href=\"https:\/\/www.npmjs.com\/package\/node-schedule\"> Node Schedule<\/a> 的）。而如果需要對一個以上的用戶發送，你可能還需要資料庫以儲存用戶資訊。<\/p>\r\n<p>……突然有點累了呀。還不知道如何佈署呢。那算了。<\/p>\r\n<p>困難點：<\/p>\r\n<ul>\r\n\t<li>如何透過 cron jobs 發送訊息？又該下何種指令？<\/li>\r\n\t<li>該下何種方法以便發送訊息？<\/li>\r\n\t<li>如何安排日期檢查的實做？<\/li>\r\n\t<li>還需要其他相關功能嗎？<\/li>\r\n<\/ul>\r\n<p>參考資料：<\/p>\r\n<ul>\r\n\t<li><a href=\"https:\/\/blog.sean.taipei\/2017\/05\/telegram-bot\">從零開始的 Telegram Bot<\/a><\/li>\r\n\t<li><a href=\"https:\/\/www.reddit.com\/r\/TelegramBots\/comments\/3d83jm\/how_to_send_daily_notifications\/\">How to send daily notifications?<\/a><\/li>\r\n\t<li><a href=\"https:\/\/core.telegram.org\/bots\">Bots: An introduction for developers<\/a><\/li>\r\n<\/ul>",
		"created_at" : "2018-01-03T08:04:32Z",
		"updated_at" : "2018-01-03T08:04:32Z"
	},
	{
		"id" : 21,
		"title" : "使用 Vue 完成 AJAX 的更新",
		"context" : "<p>這次個人網站的功能很簡單，就是在最下面加上網頁最近的更新時間。最近的更新時間自然是從 Github API 叫出 Last Commit。<br>\r\n...這是表面上來看啦，但其實很複雜：解決各種問題起來花上了大概四到五個小時吧。<\/p>\r\n\r\n<h3>如何從 Github API 叫出 Last Commit？<\/h3>\r\n<p>首先自然要從叫出 Last Commit 開始。從<a href=\"https:\/\/stackoverflow.com\/questions\/15919635\/on-github-api-what-is-the-best-way-to-get-the-last-commit-message-associated-w\">這個連結的問答<\/a>可以看出，你可以用以下的 Github API 叫出 Last Commit：<\/p>\r\n<p><code>https:\/\/api.github.com\/repos\/作者\/專案\/git\/refs\/heads\/分支<\/code><\/p>\r\n<p>接著發現回傳的是 Commit 的 API，讓呼叫變得如同玩俄羅斯娃娃一般。<\/p>\r\n<a href=\"https:\/\/en.wikipedia.org\/wiki\/File:Floral_matryoshka_set_2_smallest_doll_nested.JPG\">\r\n    <img src=\"https:\/\/upload.wikimedia.org\/wikipedia\/commons\/4\/41\/Floral_matryoshka_set_2_smallest_doll_nested.JPG\" class=\"w50\">\r\n    <p>From Wikipedia, by BrokenSphere<\/p>\r\n<\/a>\r\n<p>接下來的開發的難度也因此倍增...<\/p>\r\n<p>參考：<\/p>\r\n<ul>\r\n\t<li><a href=\"https:\/\/developer.github.com\/v3\/git\/refs\/#get-a-reference\">refs 的意思<\/a><\/li>\r\n\t<li><a href=\"https:\/\/stackoverflow.com\/questions\/2304087\/what-is-head-in-git\">heads 的意思<\/a><\/li>\r\n<\/ul>\r\n\r\n<h3>gulp-uglify<\/h3>\r\n<p>\r\n接著，開發功能到一半的時候，我發現網頁的功能竟然失效了，因此困頓了一段時間。<br>\r\n查了 Console 發現 jscompress 出了問題。追蹤以後，才發現是因為我用的 let 是 ES6 的標準，而 gulp-uglify 並不支援 ES6。<\/p>\r\n\r\n<h3>作用域<\/h3>\r\n<p>我一開始把 AJAX 的行為放在 method 裡面，再從 mounted 叫出來。但我因此踢到了大鐵板：如果 AJAX 在 method 裡面的話，它會在網頁渲染完畢之後才開始執行。就算函式放在 mounted 呼叫也是一樣。<br>\r\n問題的解法是把整個 AJAX 呼叫放入 mounted 裡面，讓 AJAX 載入的同時，一起完成呼叫。<br>\r\n這讓我學到了 Vue 各 instnce 是在哪些時候執行，以及 AJAX 執行的時機。該死的非同步。<\/p>\r\n<p>P.S.Vue 裡面的第一層的每一塊，稱作 instnce。<\/p>\r\n<p>參考：<\/p>\r\n\r\n<ul>\r\n\t<li><a href=\"https:\/\/stackoverflow.com\/questions\/32413905\/initializing-vue-data-with-ajax\">https:\/\/stackoverflow.com\/questions\/32413905\/initializing-vue-data-with-ajax<\/a><\/li>\r\n\t<li><a href=\"https:\/\/vuejs.org\/v2\/guide\/instance.html\">https:\/\/vuejs.org\/v2\/guide\/instance.html<\/a><\/li>\r\n<\/ul>\r\n\r\n<h3>層層呼叫<\/h3>\r\n<p>開發到一半發現不知為何，有些變數竟然是 undefined。到底發生了什麼事？<br>\r\n我追蹤了某些變數，發現 AJAX 回傳的 JSON 如果被註冊到 Vue 的 data 裡面，Firefox 會出現一個意義不明的鎖頭。而在 Chromium 裡面則看來沒什麼。<br>\r\n我不清楚會變成這樣子的原因，是因為它變成了Private 屬性嗎？但好像也不對。<br>\r\n最後，我決定直接操作回傳 JSON 的結果，把它們註冊到各個需要的變數。<\/p>\r\n\r\n<h3>接下來呢？<\/h3>\r\n<p>我發現自己很不滿意開發環境：被壓縮的 JS 檔案把 debugger 除掉了，也使得除錯難度大大增加。我需要一個易於除錯，但不會被上傳的開發環境。<\/p>",
		"created_at" : "2018-01-03T08:06:21Z",
		"updated_at" : "2018-01-03T08:06:21Z"
	},
	{
		"id" : 22,
		"title" : "HTML templates at frontend",
		"context" : "<a href=\"https:\/\/github.com\/iigmir\/new-profile\">Refer Repo<\/a>\r\n<p>在近代的網路框架，HTML 可以被切分為許多小頁面，這樣維護起來的話會比較方便、同時也能少寫很多很多的 HTML 程式碼、要擴展起來也會輕而易舉。<br>\r\nRails 靠 <a href=\"http:\/\/guides.rubyonrails.org\/layouts_and_rendering.html\">.erb<\/a> 完成、Laravel 則有 <a href=\"https:\/\/laravel.com\/docs\/5.4\/blade\">.blade<\/a> 來完成功能。<\/p>\r\n\r\n<p>但這些都是後端框架才有的功能。那麼，純前端有沒有這樣的功能呢？<br>\r\n幸運的是有，它就是靠 gulp 完成的 <a href=\"https:\/\/www.npmjs.com\/package\/gulp-html-extend\">gulp-html-extend<\/a>。<\/p>\r\n\r\n<p>首先把 gulp <a href=\"https:\/\/iismmx-rails-blog.herokuapp.com\/articles\/33\">安裝起來<\/a>，接著寫好任務：<\/p>\r\n\r\n<pre>\r\nvar gulp = require('gulp')\r\nvar extender = require('gulp-html-extend')\r\n \r\ngulp.task('extend', function () {\r\n    gulp.src('.\/*.html')\r\n        .pipe(extender({annotations:true,verbose:false})) \/\/ default options \r\n        .pipe(gulp.dest('.\/output'))\r\n \r\n})\r\ngulp.task('watch', function () {\r\n    gulp.watch(['.\/*.html'], ['extend'])\r\n})\r\n<\/pre>\r\n\r\n<p>意思很明白，就是任何 HTML 被修改的時候，會啟動 html-extend 程式，把編譯後的結果放到 output 目錄。<\/p>\r\n\r\n<p>要切分 HTML 的話有兩種辦法：<\/p>\r\n\r\n<ol>\r\n\t<li>用 &lt;!-- @@include .\/foobar.html  --&gt; 把需要的 HTML 放進去，gulp 接著就會按照指引，引入指定的 HTML 檔案。<\/li>\r\n\t<li>用 &lt;!-- @@placeholder footer --&gt; 把一段稱作 footer 的區域空出來，接著在子頁面引入 &lt;!-- @@master .\/core.html --&gt; 的母頁面，再來把 footer 區域用 &lt;!-- @@block footer --&gt; 標出來，並寫入需要的內容。最後，用 <code>&lt;!-- @@close --&gt;<\/code> 完成這個段落。<\/li>\r\n<\/ol>\r\n\r\n<p>就這樣！<br>\r\n對了，操作手冊有點難懂，請仔細閱讀。<\/p>",
		"created_at" : "2018-01-03T08:07:06Z",
		"updated_at" : "2018-01-03T08:07:06Z"
	},
	{
		"id" : 23,
		"title" : "Oh, SM.",
		"context" : "[My OSM Repo](https:\/\/github.com\/iigmir\/osm-notes)\r\n\r\n我最近寫了個 [OpenStreetMap](https:\/\/www.openstreetmap.org\/) 的筆記。說實在，很多、很煩、很費力。感覺寫來沒啥盡頭、也沒啥人氣。\r\n\r\n為什麼我老是做這種事呢......\r\n\r\n教學指引撰寫參考：\r\n\r\n1. [Google Map API 教學文件](https:\/\/quip.com\/x5PJAYEgwPXE)\r\n2. [W3Schools: Google Maps Tutorial](https:\/\/www.w3schools.com\/graphics\/google_maps_intro.asp)",
		"created_at" : "2018-01-03T08:08:38Z",
		"updated_at" : "2018-01-03T08:08:38Z"
	},
	{
		"id" : 24,
		"title" : "Byebug：蟲蟲掰",
		"context" : "程式開發，不論哪個領域，都一定會碰上錯誤。這種情況下，我們會用[除錯器](https:\/\/zh.wikipedia.org\/zh-tw\/%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7https:\/\/zh.wikipedia.org\/zh-tw\/%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7)並排除錯誤。通常的用法是：\r\n\r\n1. 針對錯誤發生的地點設下[斷點](https:\/\/zh.wikipedia.org\/zh-tw\/%E6%96%AD%E7%82%B9)。在不同的環境有不同的下法。\r\n2. 當程式跑到斷點的時候，預期是會停下來的。如果不會，就是個要找出的錯誤。\r\n3. 在暫停的地方，用指令列來檢查、變更各種變數，以確定是否符合預期。\r\n4. 如果需要，可以叫除錯器下與步驟相關的指令：可能是下一步、也可能是走到某段函式的結尾、或著接下來的全部步驟......\r\n\r\n在 rails 裡面，我們會用 [byebug](https:\/\/github.com\/deivid-rodriguez\/byebug) 作為我們的除錯器。以這段程式碼為例：\r\n\r\n<pre>\r\nfoo = 9563\r\nbar = false\r\nif foo == 9563\r\n  if bar == true\r\n    byebug\r\n    budyguard.create()\r\n  end\r\nend\r\n<\/pre>\r\n\r\nbyebug 這個小指令就是可以讓程式暫停的斷點。但是這裡不會執行 byebug，因為要啟動除錯器的前提是在 bar 為 true 的前提下成立，但這個前提不存在。\r\n\r\n變成這樣就可以偵錯了：\r\n\r\n<pre>\r\nfoo = 9563\r\nbar = false\r\nif foo == 9563\r\n  byebug\r\n  if bar == true\r\n    budyguard.create()\r\n  end\r\nend\r\n<\/pre>\r\n\r\n當然如果前提差得更多、就要把除錯器的位置放得更前面。\r\n",
		"created_at" : "2018-01-03T08:10:48Z",
		"updated_at" : "2018-01-03T08:10:48Z"
	},
	{
		"id" : 38,
		"title" : "2018\/02\/08 interview",
		"context" : "Honestly, it was an awful interview.\r\n\r\n-----\r\n\r\nI wrote an survey, some question like:\r\n\r\n* \"If you have an mission that no one can help you, all you can do is Google, would you accept this challenge?\"\r\n* \"If you have to overtime without pay, would you accept?\"\r\n* \"What's your point of view about overtime?\"\r\n\r\nWell, I got your hint: You must overtime, without any overtime pay. <br \/> No money, right?\r\n\r\n-----\r\n\r\nMy view about overtime is that overtime can help you temporarily. However, if you always overtime, you need to think what's wrong because there's problem about your time management.\r\n\r\n-----\r\n\r\nI didn't asked any technological question because interviewer refused to answer.\r\n\r\nAnd, you said that your company will try me five weeks, with, out, any, wages?\r\n\r\n<iframe width=\"560\" height=\"315\" src=\"https:\/\/www.youtube.com\/embed\/6bQbtDY24Iw\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen><\/iframe>\r\n\r\nOkay......\r\n\r\n-----\r\n\r\nFinally,\r\n\r\n* what's your point of view about this video? <br \/> <iframe width=\"560\" height=\"315\" src=\"https:\/\/www.youtube.com\/embed\/omSdVC1bvlw\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen><\/iframe>\r\n* Do you have any weakness suggested in this video? <br \/> <iframe width=\"560\" height=\"315\" src=\"https:\/\/www.youtube.com\/embed\/9Cc844CS8Bk\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen><\/iframe>",
		"created_at" : "2018-02-08T02:51:46Z",
		"updated_at" : "2018-02-08T03:01:38Z"
	},
	{
		"id" : 25,
		"title" : "旭川の配線は、少しに無茶苦茶です。",
		"context" : "<p>今天為了修改部落格的一點 CSS 架構，所以又去參考了一下<a href=\"https:\/\/ihower.tw\/rails\/assets-pipeline.html\">實戰聖經的 Asset Pipeline 章節<\/a>。<\/p>\r\n<blockquote>Rails 產生 controller 檔案時，也會產生一個同名的 <code>.coffee<\/code> 和 <code>.scss<\/code> 檔案，這沒有什麼實際的用途，它並不是說該 controller 的頁面才會執行該 js 和 css。建議可以砍掉這個檔案，自己安排 js 和 css 的檔案即可。<\/blockquote>\r\n<p>這段話也不能說錯。不過，事實上 rails 是可以讓只有某 controller 的頁面下，執行對應 JS 和 CSS 的。<\/p>\r\n<p><a href=\"http:\/\/guides.rubyonrails.org\/asset_pipeline.html#how-to-use-the-asset-pipeline\">指引看來不難<\/a>，就針對 JS 使用 <code>&lt;%= javascript_include_tag params[:controller] %&gt;<\/code> 而 CSS 使用 <code>&lt;%= stylesheet_include_tag params[:controller] %&gt;<\/code> 這樣。<\/p>\r\n<p>那就在 app\/views\/layouts\/application.html.erb 加入 <code>&lt;%= javascript_include_tag params[:controller] %&gt;<\/code> 看看吧。<\/p>\r\n<pre>Sprockets::Rails::Helper::AssetNotPrecompiled in Home#index\r\n\r\nAsset was not declared to be precompiled in production.\r\nAdd `Rails.application.config.assets.precompile += %w( articles.js )` to `config\/initializers\/assets.rb` and restart your server\r\n<\/pre>\r\n<p>很明顯，我們需要一點施工：<\/p>\r\n<blockquote>When using asset precompilation, you will need to ensure that your controller assets will be precompiled when loading them on a per page basis. By default .coffee and .scss files will not be precompiled on their own. See Precompiling Assets for more information on how precompiling works.<\/blockquote>\r\n<p>理由是 <code>.coffee<\/code> 和 <code>.scss<\/code> 檔案都不是 HTML 能讀取的 JS 和 CSS 檔案：<code>.coffee<\/code> 要透過 <a href=\"http:\/\/coffeescript.org\">CoffeeScript<\/a> 編譯成 JS 檔案、而 <code>.scss<\/code> 則要依賴 <a href=\"http:\/\/sass-lang.com\">SASS<\/a> 編譯成 CSS 檔案。<\/p>\r\n<p>趕緊去 <code>config\/initializers\/assets.rb<\/code> 加上 <code>Rails.application.config.assets.precompile += %w( articles.js )<\/code> 後重新開機吧。<\/p>\r\n<p>現在，你應該可以用 CoffeeScript 與 SASS 來寫程式了。<\/p>\r\n<p>當然，如果你習慣其他預處理器如 <a href=\"https:\/\/github.com\/metaskills\/less-rails\">LESS<\/a> 或 <a href=\"https:\/\/github.com\/typescript-ruby\/typescript-rails\">TypeScript<\/a>，rails 也有對應的 gem 完成你的願望。<\/p>\r\n<p>Ref:<\/p>\r\n<ul>\r\n    <li>Stack Overflow: <a href=\"https:\/\/stackoverflow.com\/questions\/9245228\/how-do-i-use-controller-specific-stylesheets-in-rails-3-2-1\">How do I use Controller specific stylesheets in Rails 3.2.1?<\/a>\r\n<\/li>\r\n    <li>Railsguides: <a href=\"http:\/\/guides.rubyonrails.org\/asset_pipeline.html#controller-specific-assets\">Controller Specific Assets<\/a>\r\n<\/li>\r\n    <li>Ruby on Rails 實戰聖經：<a href=\"https:\/\/ihower.tw\/rails\/assets-pipeline.html\">Asset Pipeline<\/a>\r\n<\/li>\r\n<\/ul>",
		"created_at" : "2018-01-03T08:11:46Z",
		"updated_at" : "2018-01-03T08:11:46Z"
	},
	{
		"id" : 26,
		"title" : "Do a custom view helper",
		"context" : "<p>看到別人的部落格外觀，幾經考慮，最後決定從選單重做：原本垂直方向的選單浪費很多空間，看了別人的部落格以後，我決定改把選單放在頁頂。這樣就會多出更多空間。這次修改主要用到了 CSS 的 Flex 特性、還有把外部連結改為 Helper。Flex 比較麻煩，也許等到以後再說。這裡來講把外部連結改為 Helper 的事情。<\/p>\r\n<p>原本在網頁的程式碼是這樣子的：<\/p>\r\n<pre>\r\n&lt;%= link_to \"https:\/\/example.com\/abc\" do %&gt;\r\n    &lt;%= fa_icon \"example\" %&gt;\r\n&lt;%= end %&gt;\r\n&lt;%= link_to \"https:\/\/qwertyui.com\/abc\" do %&gt;\r\n    &lt;%= fa_icon \"qwertyui\" %&gt;\r\n&lt;%= end %&gt;\r\n&lt;%= link_to \"https:\/\/omkinjub.com\/abc\" do %&gt;\r\n    &lt;%= fa_icon \"omkinjub\" %&gt;\r\n&lt;%= end %&gt;\r\n<\/pre>\r\n<p>但是在網頁裝這麼多重複的 Helper 頗為惱人……一定有辦法完成吧？可是我不知道怎麼做。找了很久，才發現<a href=\"https:\/\/rails.devcamp.com\/rails-bdd-tdd-course\/advanced-features-rails\/creating-custom-view-helper-rails\">有人是這麼寫的<\/a>：<\/p>\r\n<pre>\r\n# app\/helpers\/posts_helper.rb\r\nmodule PostsHelper\r\n  def status_label status\r\n    case status\r\n    when 'submitted'\r\n      content_tag(:span, status.titleize, class: 'label label-primary')\r\n    when 'approved'\r\n      content_tag(:span, status.titleize, class: 'label label-success')\r\n    when 'rejected'\r\n      content_tag(:span, status.titleize, class: 'label label-danger')\r\n    end\r\n  end\r\nend\r\n<\/pre>\r\n<p>這個寫法…頗令我驚訝的。不過，我很快就試著做了自己的：<\/p>\r\n<pre>\r\ndef links( input )\r\n    account_name = \"abc\"\r\n    website = \"https:\/\/\" + input + \".com\/\" + account_name\r\n\r\n    link_to website, target: \"_blank\" do\r\n        fa_icon input\r\n    end\r\nend\r\n<\/pre>\r\n<p>然後在頁面直接用 <code>links( \"example\" )<\/code> 就能完成了。<\/p>\r\n<p>但我很不明白的是：為什麼 helper 可以傳出我預期的  helper，也就是 <code>link_to<\/code>，而不是其他東西？我不明白為什麼，感覺頗為黑箱的。<\/p>\r\n<p>Ref:<\/p>\r\n<ul>\r\n    <li><a href=\"https:\/\/rails.devcamp.com\/rails-bdd-tdd-course\/advanced-features-rails\/creating-custom-view-helper-rails\">Creating a Custom View Helper in Rails<\/a><\/li>\r\n<\/ul>",
		"created_at" : "2018-01-03T08:12:35Z",
		"updated_at" : "2018-01-03T08:12:35Z"
	},
	{
		"id" : 27,
		"title" : "Docker-compose in \/usr\/bin",
		"context" : "I encountered a problem:\r\n\r\n<pre>\r\n[***@localhost ***]$ sudo docker-compose\r\nsudo: docker-compose: command not found\r\n[***@localhost ***]$ sudo whereis docker-compose\r\ndocker-compose: \/usr\/local\/bin\/docker-compose\r\n<\/pre>\r\n\r\nI installed `docker-compose`, but there's no such command if executed as root. Pretty weird. I read what permission the file was and changed it, wish that works:\r\n\r\n<pre>\r\n[***@localhost ***]$ ls -l \/usr\/local\/bin\/docker-compose\r\n-rwxr-xr-x. 1 root root 8856752 Nov  5 09:25 \/usr\/local\/bin\/docker-compose\r\n[****@localhost ****]$ sudo chmod 777 \/usr\/local\/bin\/docker-compose\r\n[sudo] password for **:\r\n[****@localhost ****]$ ls -l \/usr\/local\/bin\/docker-compose         \r\n-rwxrwxrwx. 1 root root 8856752 Nov  5 09:25 \/usr\/local\/bin\/docker-compose\r\n[****@localhost ****]$ sudo docker-compose\r\nsudo: docker-compose: command not found\r\n[****@localhost ****]$\r\n<\/pre>\r\n\r\nAs you see, it's useless, root user still not found `docker-compose` command. Therefore, I asked my friend. He suggested that I should type `sudo \/usr\/local\/bin\/docker-compose` command to see absolute path works or not.\r\n\r\nIt works -- But I don't want to type absolute path always, what should I do? He said,\r\n\r\n> Move to `\/usr\/bin`, and that's done.\r\n\r\n<p>Yes, moved to <code>\/usr\/bin<\/code> works. However, why it works? What's different between <code>\/usr\/local\/bin<\/code> and <code>\/usr\/bin<\/code>? Here are my notes:<\/p>\r\n\r\n<ol>\r\n    <li>\r\n<code>\/usr\/local\/bin<\/code> contain commands <strong>what user have<\/strong>.<\/li>\r\n    <li>Whereas, <code>\/usr\/bin<\/code> contain commands <strong>what system have<\/strong>.<\/li>\r\n    <li>But, if <code>\/usr\/local\/bin<\/code> contain commands what user have, why <code>sudo<\/code> -- that is, root <strong>user<\/strong>-- cannot run <code>\/usr\/local\/bin<\/code>? The answer is, <code>\/usr\/local\/bin<\/code> don't have shell script for root user, as root user is so powerful that any action may result into danger.<\/li>\r\n<\/ol>\r\n\r\nThat's all.\r\n\r\nRef:\r\n\r\n<ul>\r\n    <li><a href=\"http:\/\/linux.vbird.org\/linux_basic\/0210filepermission.php\">鳥哥的 Linux 私房菜 -- 第五章、Linux 的檔案權限與目錄配置<\/a><\/li>\r\n    <li><a href=\"https:\/\/linux.cn\/article-3737-1.html\">Linux有问必答：如何为sudo命令定义PATH环境变量<\/a><\/li>\r\n    <li><a href=\"https:\/\/unix.stackexchange.com\/questions\/8656\/usr-bin-vs-usr-local-bin-on-linux\">\/usr\/bin vs \/usr\/local\/bin on Linux<\/a><\/li>\r\n    <li><a href=\"https:\/\/unix.stackexchange.com\/questions\/115129\/why-does-root-not-have-usr-local-in-path\">\r\nWhy does root not have \/usr\/local in path?<\/a><\/li>\r\n    <li><a href=\"https:\/\/ja.stackoverflow.com\/questions\/30665\/root%E3%81%AB-usr-local-bin%E3%81%AE%E3%83%91%E3%82%B9%E3%81%8C%E9%80%9A%E3%81%A3%E3%81%A6%E3%81%AA%E3%81%84%E7%90%86%E7%94%B1%E3%81%AF%E3%81%AA%E3%82%93%E3%81%A7%E3%81%99%E3%81%8B\">rootに\/usr\/local\/binのパスが通ってない理由はなんですか？<\/a><\/li>\r\n<\/ul>",
		"created_at" : "2018-01-03T08:15:04Z",
		"updated_at" : "2018-01-03T08:15:04Z"
	},
	{
		"id" : 28,
		"title" : "Some emotions",
		"context" : "\r\n\r\nSorry for these days, I don't have any articles.\r\n\r\nCurrently, I am writing some apps, but I found that writing is really upsets me. Why? I think I should happy now.\r\nBut no, I am just angry, and always ask myself, why? Where's my passionate?\r\n\r\nWhat is strong? What is weak? As a developer, what should I have?\r\nI don't know, I don't know...my level. Maybe I am not even a full [Stack overflow](https:\/\/stackoverflow.com\/) developer.\r\nSelf-taught? Is that really good if you just learnt how to print Hello World?\r\n\r\nEven you can write your own game engine, you are not enough.\r\n\r\nNow, I am not so young, something cannot come back, and something...something disappear.\r\n\r\nLooks like everyone besides me are happy.\r\nAnd I cannot find people that I can trust to tell something.\r\n\r\nI am walking on a hard path.\r\nI feel that my ability is going down.\r\nI am abusing my body and my health.\r\n\r\nMy hobbies, my money, and my habits.\r\n\r\nLife sucks.",
		"created_at" : "2018-01-03T08:15:51Z",
		"updated_at" : "2018-01-03T08:15:51Z"
	},
	{
		"id" : 29,
		"title" : "About some weird Convention",
		"context" : "<p>我們都知道 Ruby on Rails 有個稱作<a href=\"https:\/\/zh.wikipedia.org\/zh-tw\/%E7%BA%A6%E5%AE%9A%E4%BC%98%E4%BA%8E%E9%85%8D%E7%BD%AE\">慣例優於設定<\/a>（Convention Over Configuration） 的原則。不過，這慣例常常會坑人，端看你對 Ruby on Rails 的理解究竟有多少。<br>\r\n對於什麼事情都有個人看法的我來說，慣例的設計原則把我害得很慘很慘……<\/p>\r\n\r\n<p>這篇來講兩個慣例的坑：＼<\/p>\r\n\r\n<ol>\r\n\t<li>單複數問題<\/li>\r\n\t<li>\r\n<code>belongs_to<\/code> 與 <code>has_many<\/code> 的問題<\/li>\r\n<\/ol>\r\n\r\n<p>首先來談談單複數問題：<br>\r\n在英文裡面，單數與複數是有區別的，而且常常有許多規則與例外；可是漢語語境下，並不區分單數複數。聽說日語也不太區分。<br>\r\n身為一位漢語母語用者，用上了英文為主的 rails、會覺得 rails 的單數複數慣例不自然，也是理所當然的慣例（咦）<\/p>\r\n\r\n<p>老實說，我還是很難掌握使用單數或複數的時機。<\/p>\r\n\r\n<hr>\r\n\r\n<p>接著是 <code>belongs_to<\/code> 與 <code>has_many<\/code> 的問題：<br>\r\n當我在實做刪除功能的時候，發生了這樣的問題：<\/p>\r\n\r\n<pre>\r\nSQLite3::SQLException: no such column: bar.foo_id: SELECT...<\/pre>\r\n\r\n<p>沒有找到東西刪除？這怎麼可能？當下，我先使用 byebug 檢查看看變數，一切正常。接著我使用很土砲的 puts 指令，想挖挖看有沒有其他問題。<br>\r\n當然也沒有。我就此困惑了。<br>\r\n待我盯著錯誤訊息許久，才意識到是 <code>bar<\/code> 是屬於 <code>foo<\/code> 的資料。我決定去比對這兩個 model 檔案：<\/p>\r\n\r\n<pre>\r\n\/\/ In models\/foo.rb\r\nclass Foo &lt; ActiveRecord::Base\r\n    has_many :Bar, dependent: :destroy\r\nend\r\n\r\n\/\/ In models\/bar.rb\r\nclass Bar &lt; ActiveRecord::Base\r\n    belongs_to :Foo\r\nend\r\n<\/pre>\r\n\r\n<p>……沒有問題啊？<br>\r\n直到我想起自己是要做投票功能，所以參考了 <a href=\"http:\/\/docs.railsbridge.org\/intro-to-rails\/hooking_up_votes_and_topics\">RailsBridge 的說明<\/a>。那就先在 console 輸入看看好了：<\/p>\r\n\r\n<pre>\r\nActiveModel::UnknownAttributeError: unknown attribute 'foo_id' for Bar.<\/pre>\r\n\r\n<p>WTF? 這什麼奇怪的變數？「慣例」是這樣搞？<\/p>\r\n\r\n<p>雖然最後透過修改 migrate 檔案解決了問題，但慣例卻還是深深困惑住我。<\/p>\r\n\r\n<p>Ref:<\/p>\r\n\r\n<p>關於 <code>belongs_to<\/code> 與 <code>has_many<\/code> 的問題：<\/p>\r\n\r\n<ol>\r\n\t<li><a href=\"https:\/\/stackoverflow.com\/questions\/33707380\/rails-associations-sqlite3sqlexception-no-such-column\">Rails Associations: SQLite3::SQLException: no such column<\/a><\/li>\r\n\t<li><a href=\"https:\/\/stackoverflow.com\/questions\/31505430\/rails-4-has-many-through-statementinvalid-sqlite3sqlexception-no-such-c\">Rails 4 - Has_many through - StatementInvalid - SQLite3::SQLException: no such column:<\/a><\/li>\r\n<\/ol>",
		"created_at" : "2018-01-03T08:16:35Z",
		"updated_at" : "2018-01-03T08:16:35Z"
	},
	{
		"id" : 30,
		"title" : "如果 rails 開發環境要用其他資料庫的話",
		"context" : "<p>在開發的時候，rails 預設使用 sqlite 資料庫作為開發環境。不過要公諸於世的網站，不會用 sqlite 資料庫運作。用什麼呢？這就必須要看雲端供應商（如果要用供應商的 IaaS 的話）、或是自己的偏好（如果要用供應商的 PaaS，或是自己架主機的話）。<\/p>\r\n<p>無論如何，如果需要在開發環境改用其他資料庫、而不是使用 sqlite 資料庫的話，一點步驟的小指引：<\/p>\r\n<ol>\r\n\t<li>首先請決定要用什麼資料庫：這裡用的 <a href=\"https:\/\/mariadb.org\/\">MariaDB<\/a> 是 MySQL 的分支。<\/li>\r\n\t<li>下載該資料庫，並設定需要的帳號密碼。每個資料庫的用法不同。MariaDB 的話，照著這篇 <a href=\"https:\/\/mariadb.com\/products\/get-started\">StartGuide<\/a> 做。<\/li>\r\n\t<li>設定完成後記下帳號密碼，然後翻翻看 rails 支援哪些資料庫：\r\n\t<pre>\r\n  -d, [--database=DATABASE]                              # Preconfigure for selected database (options: mysql\/postgresql\/sqlite3\/oracle\/frontbase\/ibm_db\/sqlserver\/jdbcmysql\/jdbcsqlite3\/jdbcpostgresql\/jdbc)\r\n<\/pre>\r\n\t主流的 <a href=\"https:\/\/www.mysql.com\/\">mysql<\/a>, <a href=\"https:\/\/www.postgresql.org\">postgresql<\/a>,<a href=\"https:\/\/www.microsoft.com\/sql-server\"> sqlserver<\/a> 都有......我覺得應該夠用了啦。<\/li>\r\n\t<li>輸入 <code>rails -d mysql<\/code>。請記住 MariaDB 是 MySQL 的分支。<\/li>\r\n\t<li>去檢查 <code>config\/database.yml<\/code> 的說明，它在最前面應該有說明需要安裝的驅動程式。<br>\r\n\t再去 Gemfile 檔案搜尋，應該是有安裝到的。<\/li>\r\n\t<li>把前面記下來的帳號密碼寫在 <code>config\/database.yml<\/code> 的 <var>username<\/var> 與 <var>password<\/var> 裡面。<\/li>\r\n\t<li>檢查一下 <var>database<\/var> 以確認即將建立的資料庫。<\/li>\r\n\t<li>\r\n<strong><a href=\"https:\/\/stackoverflow.com\/questions\/6765740\/rake-mysql2-unknown-database-error\">輸入 <code>rake db:create<\/code> ！輸入 <code>rake db:create<\/code> ！輸入 <code>rake db:create<\/code> ！<\/a><\/strong><br>\r\n\t因為很重要所以要說三次。沒有輸入，資料庫根本不存在。<\/li>\r\n\t<li>撰寫一下自己的的 CRUD。懶得撰寫只要測試的話，參考一下 <a href=\"http:\/\/docs.railsbridge.org\/installfest\/create_a_rails_app\">RailsBridge<\/a> 的指引：<code>rails generate scaffold drink name:string temperature:integer<\/code>。<\/li>\r\n\t<li>收工！<\/li>\r\n<\/ol>",
		"created_at" : "2018-01-03T08:17:06Z",
		"updated_at" : "2018-01-03T08:17:06Z"
	},
	{
		"id" : 32,
		"title" : "vscode 牌殺蟲器",
		"context" : "用了微軟的 vscode(Visual Studio Code) 才發現：如果有任何微軟產品相關的問題，找[黑暗執行緒](http:\/\/blog.darkthread.net)就對了。\r\n\r\n正話開始，vscode 有個很可愛的小蟲蟲被打叉了。對寫程式的人來說，這圖標就代表我們看到了再熟悉不過的好朋友：[除錯器](https:\/\/zh.wikipedia.org\/zh-tw\/除錯器)。\r\n\r\n在寫爬蟲的時候老是出錯，那該怎麼用除錯器才好？噢，正好黑暗執行緒寫了一篇 [Node.js 的文章](http:\/\/blog.darkthread.net\/post-2016-08-06-debug-nodejs-with-vscode.aspx)。\r\n\r\n步驟簡單來講：\r\n\r\n1. 點那隻被打叉叉的蟲蟲標誌\r\n2. 選取組態\r\n3. 在 `launch.json` 設定要除錯的程式\r\n4. 開始除錯\r\n\r\n除錯有兩個方法：一是在想除錯的地方下斷點、二是在想除錯的地方寫 `debugger` 的指令。\r\n\r\n說起來，我最後還是靠別人的部落格來解圍。xD。\r\n\r\n* [黑暗執行緒：如何使用Visual Studio Code偵錯Node.js？](http:\/\/blog.darkthread.net\/post-2016-08-06-debug-nodejs-with-vscode.aspx)\r\n* [MDN: debugger](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/JavaScript\/Reference\/Statements\/debugger)",
		"created_at" : "2018-01-06T10:52:51Z",
		"updated_at" : "2018-01-06T11:04:30Z"
	},
	{
		"id" : 33,
		"title" : "2018\/01\/12 面試題目",
		"context" : "### 筆試\r\n1. `null` 與 `undefined` 的分別。\r\n2. 何謂原型（prototype）與原型鏈？\r\n3. <pre>var y = 1;\r\nif ( foo() )\r\n{\r\n    y += typeof(foo());\r\n}\r\nconsole.log(y);\r\n\/\/ 請問會出現什麼？<\/pre>\r\n4. <pre>var salary = \"1000$\";\r\n(function(){\r\n    console.log(\"I have \" + salary);\r\n    var salary = \"5000$\";\r\n    console.log(\"Now got \" + salary);\r\n}());\r\n\/\/ 請問會出現什麼？<\/pre>\r\n5. <pre> console.log(typeof(null));\r\nconsole.log(typeof({}));\r\nconsole.log(typeof([]));\r\nconsole.log(typeof(undefined));\r\n\/\/ 請問將顯示什麼？\r\n<\/pre>\r\n6. <pre>for( var i = 0 ; i <= 10 ; i++ )\r\n{\r\n    node[i].addEventListener(\"click\",function()\r\n    {\r\n        alert(\"You clicked \" + i);\r\n    });\r\n}\r\n\/\/ 請問點選第一個 node 與第三個 node 會顯示什麼？\r\n<\/pre>\r\n\r\n### 面試\r\n\r\n只記得有被有沒有用過 rails 的 ORM，我答不出來。\r\n\r\n好像還有被問到給 API 然後用它渲染？前公司學到的就是 API 渲染、還有用 Vue 了。\r\n\r\n然後因為要招的是 Golang 的全端、加上前端已經有人了，覺得錄取機率不大……\r\n\r\n---\r\n\r\n### 我筆試的答案\r\n\r\n1. `null` 是宣告了狀態但沒有數值、而 `undefined` 則是從頭到尾都沒有定義。\r\n2. 我不知道所以沒寫。\r\n3. `1object`\r\n4. `I have 1000$` , `Now got 5000$`，因為立即執行函式會先讀取全域變數 `1000$` 再讀取區域變數 `5000$`。\r\n5. `Object`, `Object`, `Array`, `undefined`\r\n6. `You clicked 0`, `You clicked 3`\r\n\r\n---\r\n\r\n### 反省\r\n\r\n1. 看了些資料，感覺差不多。 參考資料：\r\n  1. [What is the difference between null and undefined in JavaScript?](https:\/\/stackoverflow.com\/questions\/5076944\/what-is-the-difference-between-null-and-undefined-in-javascript)\r\n  2. [javascript中如何判断空值null與undefined](http:\/\/s90304a123.pixnet.net\/blog\/post\/44656963-javascript%E4%B8%AD%E5%A6%82%E4%BD%95%E5%88%A4%E6%96%AD%E7%A9%BA%E5%80%BCnull%E8%88%87undefined)\r\n  3. [undefined与null的区别](http:\/\/www.ruanyifeng.com\/blog\/2014\/03\/undefined-vs-null.html)\r\n  4. [undefined 和 null 的差別](http:\/\/www.jstips.co\/zh_tw\/javascript\/differences-between-undefined-and-null\/)\r\n  5. MDN 的 [null](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/JavaScript\/Reference\/Global_Objects\/null) 與 [undefined](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/JavaScript\/Reference\/Global_Objects\/undefined)\r\n2. 以後再寫寫我的看法與結論？\r\n3. `Error: foo is not defined`：也許我看錯了。\r\n4. `I have undefined`, `Now got 5000$`：我忘記了[提昇](https:\/\/developer.mozilla.org\/zh-TW\/docs\/Glossary\/Hoisting)的概念：它會讓所有 function 放到最上面執行，但針對變數就不會。這個程式與以下程式碼一樣：<br \/><pre>var salary = \"1000$\";\r\nfunction foo(){\r\n    console.log(\"I have \" + salary);\r\n    var salary = \"5000$\";\r\n    console.log(\"Now got \" + salary);\r\n};\r\nfoo();<\/pre>\r\n5. `object`, `object`, `object`, `undefined`：陣列也是物件。\r\n6. 還來不及想怎麼測……\r\n7. 關於面試的 ORM：ORM 的意思是 Object-Relational Mapping，也就是用物件導向的想法\/方法寫資料庫存取。其實 rails 裡面就有這個概念，稱作 Active Record。請參考 [iHower](https:\/\/ihower.tw\/rails\/activerecord.html) 與 Ruby on Rails Guides ( [English](http:\/\/guides.rubyonrails.org\/active_record_basics.html) 與 [中文](https:\/\/rails.ruby.tw\/active_record_basics.html) 都有 )\r\n\r\n---\r\n\r\n20180516 增筆：2. 呃，`foo()` 本來不就是沒有被定義嗎。",
		"created_at" : "2018-01-16T05:52:12Z",
		"updated_at" : "2018-05-16T07:14:32Z"
	},
	{
		"id" : 34,
		"title" : " 2018\/01\/15 面試題目",
		"context" : "### 筆試\r\n公司的筆試…[PTT 有答案](https:\/\/www.ptt.cc\/bbs\/Ajax\/M.1371198760.A.DDB.html)…而且連錯字都一樣……\r\n對了，我有和公司說，考題已經洩漏了喔。\r\n\r\n### 面試\r\n#### CSS\r\n1. 如果要完成水平與垂直置中，怎麼做？<br \/>`margin` 用 `x auto`、`flex` 也有水平與垂直置中的功能。文字還可以用 text-align 置中。\r\n  1. 還有嗎？<br \/>我沒有想到了。\r\n2. display 有哪些屬性？<br \/>`none`, `inline`, `block`, `inline-block`, `flex`, `grid`\r\n  1. 你通常用哪個屬性切板？<br \/>`block`。有些更老的還有 `float`。\r\n3. SASS 有什麼優點？<br \/>巢狀選擇器、變數、mixin。\r\n\t1. 那你怎麼用 SASS？ <br \/> 純前端如 `node` 會選擇 `gulp-sass` 之類的、後端框架如 `rails` 同樣也有 `sass` 可選。 \r\n\r\n#### JS\r\n（括弧內都是我的註解，沒和考官說明）\r\n\r\n1. 你之前除了 jQuery 還用過什麼框架？<br>Vue 與 Angular1。react 稍微用過，但因為不喜歡他的想法（JSX 把 HTML 寫進 JavaScript 嚴重牴觸我的三觀）所以沒有深究。\r\n2. 你知道 REST 嗎？<br>一種設計模式。傳統的 URL 是一個頁面加上問號、參數、值（例如 `example.com\/foobar.php?foo=1?bar=2000` ）－－但 REST 把這些東西用 \/ 表示（ `example.com\/foobar\/1\/2000` ）能令網站更好維護。\r\n3. 你知道請求有哪些狀態嗎？除了 `GET` 以外。<br>`GET`, `POST`, `PUT`, `UPDATE`, `DELETE`\r\n4. 你用過哪些套件發動非同步請求？<br>除了 jQuery 以外，如果專案不大，我會用原生。我也曾經用過 axios 還有 request 套件。\r\n5. 你知道 ES6 嗎？<br>我知道：`let`, `const`, arrow function（`=>` 這玩意）之類的。我用過 `let` and arrow。\r\n  1. 那你知道 `Promise` 嗎？<br>我知道，不過我還是沒用成功過。\r\n  2. 那 Fetch 呢？<br>聽過，應該是類似 Promise 的東西？\r\n6. 框架值是什麼？<br>不知道。\r\n7. 你怎麼開發專案？<br>以我的作品集為例，我用的是 Vue。我用 gulp 找到需要的套件、看好手冊後，就開工，讓 gulp 幫我完成事情。\r\n  1. 除了 gulp 還有其他的嗎？<br>噢......我知道有 webpack 的存在，但我還在研究。<br>（其實我有點排斥 webpack 把什麼都包在一起的概念......）\r\n\r\n#### other\r\n1. 用過 Git 嗎？<br>我用過。\r\n    1. 那你怎麼用的？指令列？圖形介面？<br>都有。小烏龜、vscode、指令都有用過。還有 Github 之類的……\r\n\r\n---\r\n\r\n### 面試反省\r\n1. 如果要完成水平與垂直置中，怎麼做？還有嗎？<br \/>[還有很多方法。](http:\/\/www.oxxostudio.tw\/articles\/201502\/css-vertical-align-7methods.html)：`line-height`, `::before`, `::after`, `calc`......等等：[甚至你要用 `position:absolute` 也是答案](http:\/\/www.flycan.com\/article\/css\/css-div-position-center-1562.html)。\r\n2. display 有哪些屬性？<br \/>[MDN 直接上](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/CSS\/display)。我漏了 `table`, `flow`, `list-item`\r\n  1. 你通常用哪個屬性切板？ <br \/> 其實我該早點用 Flex 的……\r\n3. SASS 有什麼優點？<br \/>[身為 CSS preprocessor 的作者](https:\/\/developer.mozilla.org\/en-US\/docs\/Glossary\/CSS_preprocessor)，我還算滿意自己的答案。<br \/> SASS 還是有些特點，不過我覺得易於維護的特點已經講到了。\r\n\r\n#### JS\r\n1. 你之前除了 jQuery 還用過什麼框架？<br \/>我知道很多公司很愛 react，但不喜歡就是不喜歡。\r\n2. 你知道 REST 嗎？<br \/>[差得遠了](https:\/\/zh.wikipedia.org\/zh-tw\/具象狀態傳輸)：雖然依舊是一種設計模式，但 REST 的意思是給出一段網址，稱為資源（resource）；配合 HTTP 的請求狀態，就可以完成特定的請求：例如說給出 `example.com\/foobar\/1\/2000` 的網址──也就是資源──再配合 HTTP 的 `PATCH` 就可以叫用戶端發起更新 `foobar\/1\/2000` 資源的請求。[Ref: iHower](https:\/\/ihower.tw\/blog\/archives\/1542)\r\n3. 你知道請求有哪些狀態嗎？除了 GET 以外。<br>沒有 `UPDATE`、少了 `PATCH` 與 `CONNECT`。\r\n4. 你用過哪些套件發動非同步請求？<br>唔……\r\n5. 你知道 ES6 嗎？<br>呃……\r\n  1. 那你知道 Promise 嗎？<br>啊…我還是不懂概念……\r\n  2. 那 Ftech 呢？<br \/><q cite=\"@calpaliu\"><a href=\"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/API\/Fetch_API\">Fetch<\/a> 不是 Promise 的那一類。。。<\/q>\r\n6. 框架值是什麼？<br \/>好像沒有人知道。是我聽錯嗎？\r\n7. 你怎麼開發專案？<br \/>我當然有自己的 Freestyle...\r\n  1. 除了 gulp 還有其他的嗎？<br \/><q cite=\"@calpaliu\">gulp, grunt, node-script, webpack, babel, eslint 都可以算是前端常用工具<\/q>\r\n\r\n#### other\r\n1. 用過 Git 嗎？那你怎麼用的？指令列？圖形介面？<br \/>好像也沒什麼好說的？\r\n\r\n---\r\n\r\n20180516 增筆：\r\n\r\n1. 關於非同步請求：其實也不用寫過太多函式庫啦，畢竟都是要做 AJAX 請求的。比起來，懂得非同步還有 Promise 觀念更重要。原生、axios、還有 request，我想差不多啦。\r\n2. ES6 真是個大坑。裡面有太多太多我不懂的東西。但至少 Promise 懂一點了。",
		"created_at" : "2018-01-16T06:01:56Z",
		"updated_at" : "2018-05-16T07:20:13Z"
	},
	{
		"id" : 31,
		"title" : "爬蟲程式 Takami 的感想文",
		"context" : "[作品展示](https:\/\/github.com\/iigmir\/Takami)。另外，取名為 Takami 的原因，是 LoveLive Sunshine 的主角[高海千歌](http:\/\/love-live.wikia.com\/wiki\/Chika_Takami)。\r\n\r\n一切是因為看了[鐵人賽](https:\/\/ithelp.ithome.com.tw\/users\/20107159\/ironman\/1325)的文章才想到的：看了鐵人賽的文章，才發現爬蟲沒有我想像中的那麼困難：無非就是發出請求、擷取回應、針對回應抓取文字。\r\n\r\n身為一位 Love Liver 平時興趣聽 [Love Live](http:\/\/love-live.wikia.com) 的歌也很正常。但是，如果每首歌都要搜尋、複製、貼上的話…我曾經做過，那是個酷刑……\r\n\r\n看了鐵人賽的文章，我想自己應該也能做一個。\r\n\r\n所以就開始吧。用 [Aozora Jumping Heart](http:\/\/love-live.wikia.com\/wiki\/Aozora_Jumping_Heart) 來做示範。\r\n\r\n如果想聽音樂，我們的行為將是點選 Audio 裡面那個稱為 ![Aqours](http:\/\/vignette2.wikia.nocookie.net\/emoticon-bank\/images\/6\/61\/AqoursPlay.png) 的按鈕。\r\n\r\n那麼，它怎麼玩呢？難道是給 JSON API 嗎？\r\n\r\n網路告訴我它直接給了 `.ogg` 檔案播放，沒有 `.json` 檔案被傳送。這意味著，按鈕裡面很可能直接包含來源網址。\r\n\r\n那我們把網頁原始碼打開來看吧：\r\n<pre>\r\n&lt;span class=\"ogg_custom aqours\"&gt;\r\n    &lt;div id=\"ogg_player_1\" class=\"ogg_player\"&gt;\r\n        &lt;div&gt;\r\n            &lt;button onclick=\"if (typeof(wgOggPlayer)&nbsp;!= 'undefined') wgOggPlayer.init(false, {&quot;id&quot;:&quot;ogg_player_1&quot;,&quot;videoUrl&quot;:&quot;https:\/\/vignette.wikia.nocookie.net\/love-live\/images\/e\/e6\/Aozora_Jumping_Heart.ogg\/revision\/latest?cb=20160716075746&quot;,&quot;width&quot;:180,&quot;height&quot;:35,&quot;length&quot;:284,&quot;linkUrl&quot;:&quot;\/wiki\/File:Aozora_Jumping_Heart.ogg&quot;,&quot;isVideo&quot;:false});\" style=\"width: 180px; text-align: center\" title=\"Play sound\"&gt;&lt;img src=\"\/extensions\/OggHandler\/play.png\" alt=\"Play sound\" width=\"22\" height=\"22\"&gt;&lt;\/button&gt;\r\n        &lt;\/div&gt;\r\n        &lt;div&gt;\r\n            &lt;a href=\"\/wiki\/File:Aozora_Jumping_Heart.ogg\" class=\"image\" title=\"About this file\"&gt;&lt;img src=\"\/extensions\/OggHandler\/info.png\" alt=\"Aozora Jumping Heart\" width=\"22\" height=\"22\"&gt;&lt;\/a&gt;\r\n        &lt;\/div&gt;\r\n    &lt;\/div&gt;\r\n&lt;\/span&gt;\r\n<\/pre>\r\n\r\n注意一下 `<button>` 裡面的標籤：\r\n<pre>\r\nonclick=\"if (typeof(wgOggPlayer) != 'undefined') wgOggPlayer.init(false, {\"id\":\"oggplayer1\",\"videoUrl\":\"https:\/\/vignette.wikia.nocookie.net\/love-live\/images\/e\/e6\/AozoraJumpingHeart.ogg\/revision\/latest?cb=20160716075746\",\"width\":180,\"height\":35,\"length\":284,\"linkUrl\":\"\/wiki\/File:AozoraJumpingHeart.ogg\",\"isVideo\":false});\"\r\n<\/pre>\r\n\r\n裡面放了個有趣的執行程式：`wgOggPlayer.init()`。如果你用除錯器（在開發工具內，針對 `onclick` 屬性的程式碼輸入 `debugger`，也就是 `onclick=\" debugger; if (typeof( `，除錯器就會在開發工具啟動時開始跑除錯器）去追蹤這段程式碼，它會把你帶往一個 JavaScript 的頁面。\r\n\r\n那個程式要幹嘛不重要，重要的是裡面有個東西叫做 `videoUrl`，它有我們需要的東西：\r\n<pre>\r\nhttps:\/\/vignette.wikia.nocookie.net\/love-live\/images\/e\/e6\/AozoraJumpingHeart.ogg\/revision\/latest?cb=20160716075746\r\n<\/pre>\r\n\r\n於是，我們知道了。追這個 `<button>` 標籤裡面的東西準沒錯。\r\n\r\n不過，它好像不能用 jQuery 的 `$(\"button\")` 叫出來啊……怎麼辦呢？\r\n\r\n你想到了嗎？`$(\"span.ogg_custom \").html()` 啊。這樣就能以字串的形式，叫出裡面的 HTML 了。抓到以後，用[正規表達式](http:\/\/regexr.com)抓文字不就好了？\r\n\r\n我看了幾個檔案，我想我需要這樣：\r\n<pre>\r\nhttps:\/\/vignette.wikia.nocookie.net\/love-live\/images\/（都可以）\/（都可以）\/（都可以）.ogg\/\r\n<\/pre>\r\n\r\n如果要這樣匹配的話，我們的正規表達式就需要這樣：\r\n<pre>\/(https:\\\/\\\/vignette.wikia.nocookie.net\\\/love-live\\\/images)\\\/(.*)\\\/(.*)\\\/(.*).ogg\\\/\/g <\/pre>\r\n \r\n 1. 那個看起來像是 V 的 `\\\/` 是 `\/` 的跳脫字元，因為 `\/` 本身就有表達意義。\r\n 2. `(.*)` 是一組匹配查詢，它會匹配所有字詞直到斷行、或是為止該組匹配查詢碰上某個東西為止：例如 `(.*)\\\/` 就是匹配所有字詞、直到 `\/` 為止。\r\n\r\n最後就是讀 URL 了：拿到歌曲 URL 以後，就可以讀取 URL 裡面 `span.ogg_custom` 的 DOM 了。\r\n\r\n不過有點小插曲：我們用的 `request` 套件，它請求是非同步的，所以基本上是先到先贏，而不按照順序。如果順序會亂跳的話，又要怎麼知道第幾首呢？\r\n\r\n索性也不難：在迴圈裡面加個變數檢查就好。\r\n\r\n好的，就這樣完成了。",
		"created_at" : "2018-01-06T09:39:08Z",
		"updated_at" : "2018-01-16T23:21:38Z"
	},
	{
		"id" : 36,
		"title" : "Firefox 匯入\/匯出搜尋引擎套件",
		"context" : "我是 Firefox 用戶，很久以前自己加了很多搜尋引擎套件（套件的運作原理，請參考 [MDN](https:\/\/developer.mozilla.org\/zh-TW\/docs\/Web\/OpenSearch) 的說明）來用。\r\n\r\nFirefox 更新以後，目前在 AMO 的搜尋引擎套件目前不是很多、自己加的功能也找不到、另外我還需要備份並移植搜尋引擎套件到其他電腦上……這意味著，我需要找到可以匯入\/匯出搜尋引擎套件的方法。\r\n\r\n放這些搜尋引擎套件的檔案在 `\\%userprofile%\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\（個人檔案路徑）\\search.json.mozlz4`。請注意這個 `search.json.mozlz4`，它是一個被壓縮的檔案，所以你不能直接用文字編輯器開啟、複製、貼上。\r\n\r\n在 Firefox 56 以前，可以用 [XML Search Engines Exporter\/Importer](https:\/\/addons.mozilla.org\/zh-TW\/firefox\/addon\/search-engines-export-import\/) 套件完成。但……我目前在用的是 Firefox 57，所以這個套件只能廢了。\r\n\r\n看了[套件官網](https:\/\/github.com\/nohamelin\/xseei)，開發者說套件：「目前的 WebExtensions 架構無法移植」。作為替代，可以在 Firefox 運行瀏覽器主控台（Browser Console，**不是網頁主控台（Web Console）**）。\r\n\r\n1. 你需要開啟 Browser Console：可以從開發者選單選、也可以使用 <kbd>Ctrl<\/kbd> + <kbd>Shift<\/kbd> + <kbd>J<\/kbd> 快捷鍵。\r\n2. 按照需求，把 [匯入](https:\/\/gist.github.com\/nohamelin\/8e2e1b50dc7d97044992ae981487c6ec) 或是 [匯出](https:\/\/gist.github.com\/nohamelin\/6af8907ca2dd90a9c870629c396c9521) 的程式碼，複製貼上到瀏覽器主控台。\r\n3. 成功的話，匯入程式會要求你選擇要匯入的 XML 檔案；匯出程式會打包成一個壓縮檔後，要求你選擇要儲存的目錄。\r\n\r\n好的，總之這很有趣。也許以後找個時間去翻譯 [MDN 的 Browser Console](https:\/\/developer.mozilla.org\/en-US\/docs\/Tools\/Browser_Console) 條目？\r\n\r\nRef:\r\n\r\n* [nohamelin\/xseei](https:\/\/github.com\/nohamelin\/xseei)\r\n* [Tools for working with search engines](https:\/\/support.mozilla.org\/zh-TW\/questions\/1157315)\r\n* [I want to know where the search engines are located and change the name of a search engine](https:\/\/support.mozilla.org\/zh-TW\/questions\/1120564)",
		"created_at" : "2018-02-02T05:15:13Z",
		"updated_at" : "2018-02-02T05:15:13Z"
	},
	{
		"id" : 39,
		"title" : "RSS feed",
		"context" : "<blockqote>\r\n    「還有人用 [RSS](https:\/\/zh.wikipedia.org\/wiki\/RSS) 嗎？」<br \/>\r\n\t\t「沒了吧」\r\n<\/blockqote>\r\n\r\n好啦，雖然看起來沒人用，但我還是想寫一下 RSS feed。一來了解技術、二來這是部落格的重要功能、第三就是看了點文章後，有點想「力挽狂瀾」的熱血。至於什麼文章，可以移到後面的 Ref 來看。\r\n\r\n最基礎來說，RSS feed 檔案是 [XML](https:\/\/zh.wikipedia.org\/wiki\/XML) 檔案。然後用 [Conditional GET](https:\/\/stackoverflow.com\/questions\/1975442\/how-does-rss-reader-know-that-a-feed-is-updated) 推送請求。\r\n\r\n總之，要做的話，就要做出這段 XML。看起來，用 [Atom](https:\/\/zh.wikipedia.org\/wiki\/Atom_(%E6%A8%99%E6%BA%96)) 格式比較新。接著，因為 RSS 就是個 XML，所以出乎意料的簡單，連 gem 也不需要。\r\n\r\n那如果要[維基百科](https:\/\/zh.wikipedia.org\/wiki\/Atom_(%E6%A8%99%E6%BA%96))那樣的格式，要怎麼做呢？\r\n\r\n首先，你需要有一個專門放 RSS feed 的 controller：\r\n\r\n<pre> # In app\/controllers\/foobar_controller.rb\r\ndef index\r\n    respond_to do |format|\r\n        format.atom\r\n    end\r\nend\r\n<\/pre>\r\n\r\n接著建立一個 Builder 檔案以產生 XML：\r\n\r\n<pre> # In app\/views\/foobar\/index.atom.builder\r\natom_feed({'xml:lang' => 'zh-TW'}) do |feed|\r\n    feed.title(\"Example Feed\")\r\n    feed.subtitle(\"A subtitle.\")\r\n    feed.author do |a|\r\n        a.name(\"John Doe\")\r\n        a.email(\"johndoe@example.com\")\r\n    end\r\nend\r\n<\/pre>\r\n\r\n我們還要給個 entry……\r\n\r\n<pre> # In app\/views\/foobar\/index.atom.builder\r\natom_feed({'xml:lang' => 'zh-TW'}) do |feed|\r\n    feed.entry(article) do |entry|\r\n        entry.title(article.title)\r\n        entry.link(\"http:\/\/example.org\/2003\/12\/13\/atom03\")\r\n        entry.summary(\"Some text.\")\r\n    end\r\nend\r\n<\/pre>\r\n\r\n總之，針對 `<property>value<\/property>` 的東西，你要在 builder 這樣寫成 `feed.property(\"value\")` 這樣。把必要的東西寫好，接著用 URL 地址貼上訂閱器。收工。\r\n\r\nRef:\r\n\r\n* 有關為什麼要用 RSS feed：\r\n    1.  [訂閱 Facebook 粉絲專頁 RSS 的方法，幫你脫離臉書訊息控制](http:\/\/www.playpcesor.com\/2017\/06\/facebook-page-rss.html)\r\n    2.  [社群時代，你還在手工訂閱嗎？](http:\/\/www.playpcesor.com\/2015\/05\/rss-feedly.html)\r\n    3.  [為什麼你應該捨棄臉書改用 RSS？克服資訊偏食的理由和方法](https:\/\/blog.hungching.com\/2015\/01\/rss-is-better-than-social-media.html)\r\n    4.  建立個人 RSS 中心： [1](https:\/\/blog.hungching.com\/2015\/02\/how-to-get-full-text-rss-feed.html) [2](https:\/\/blog.hungching.com\/2015\/02\/social-media-page-to-rss.html)\r\n* 有關技術詳情：\r\n    1. [Build a RSS feed in Ruby on Rails](http:\/\/www.lugolabs.com\/articles\/80-build-a-rss-feed-in-ruby-on-rails)\r\n    2. [Adding an Atom Feed to Your Application](https:\/\/richonrails.com\/articles\/adding-an-atom-feed-to-your-application)\r\n    3. [ActionView::Helpers::AtomFeedHelper](http:\/\/api.rubyonrails.org\/classes\/ActionView\/Helpers\/AtomFeedHelper.html)\r\n",
		"created_at" : "2018-02-08T08:36:44Z",
		"updated_at" : "2018-02-08T08:37:13Z"
	},
	{
		"id" : 37,
		"title" : "vue-cli 筆記",
		"context" : "最近去學 [vue-cli](https:\/\/github.com\/vuejs\/vue-cli)，畢竟……懂 `.vue` 好像是 Vue 開發者的必備技能。發問的社團裡面，有人推這個軟體。用了這個軟體後……我有一種相見恨晚的感覺。\r\n\r\n以下筆記是摘自 [Github 的筆記](https:\/\/github.com\/iigmir\/todolist-with-vuecli\/tree\/master\/note)。\r\n\r\n### Hello world app\r\n\r\n一開始 `vue init` 的東西就是 Hello World。在 `.vue` 裡面，大多數寫法和毫無設定的 Vue 差不多。不過 instance 的形式有點不一樣，要注意……\r\n\r\n接著，這個 component 最重要的問題是如何定時更改……問題的訣竅，是利用 `setInterval` 永遠定時的特性，還有 JavaScript 函式的 `this` 是透過呼叫所在地的作用域參照，這兩個特質來完成。\r\n\r\n最後有個與前幾天面試相關的簡答：\r\n\r\n```\r\n<style scope lang=\"scss\">\r\n<!-- 這個的意思是什麼？ -->\r\n```\r\n\r\n* `scope` 的意思是：`style` 的只會在 `.vue` 裡面做動。 <blockquote>Add \"scoped\" attribute to limit CSS to this component only<\/blockquote>\r\n* `lang` 可以讓你使用喜歡的預處理器，前提是要安裝該處理器。\r\n\r\n之後再說說 Vue Router？\r\n\r\n### Mutiple Vue routers\r\n\r\n有時候，我們不會只有一個組件（或著說，不會只有一個 `.vue` 檔要用），屆時要怎麼做呢？答案是[命名視圖](https:\/\/router.vuejs.org\/zh-cn\/essentials\/named-views.html)。\r\n\r\n1. 在 App.vue 裡面引入多個 `<router-view name=\"apptitle\"><\/router-view>` 組件：`<router-view \/>` 只會載入一個！\r\n2. 去 `src\/router\/index.js` 修改 `component` 為 `components`。\r\n3. `components` 裡面引入需要的組件。請注意要把組件本身引進去。\r\n\r\n### Main app\r\n\r\n1. 注意 DOM 行為的單位與對應事件：例如要提交一個表單，執行提交的 DOM 是 `<form>` 而不是 `<input type=\"submit\">`。如果在錯誤的 `<input type=\"submit\">` 下指令，那麼 DOM 就沒有辦法執行指定的事件了。請參考 [v-on:submit.prevent not stopping form submission](https:\/\/stackoverflow.com\/questions\/40837936\/v-onsubmit-prevent-not-stopping-form-submission)\r\n2. What the hell is \"Elements in iteration expect to have 'v-bind:key' directives\"? [What?](https:\/\/vuejs.org\/v2\/guide\/list.html#v-for-with-a-Component)\r\n3. [v-model](https:\/\/vuejs.org\/v2\/guide\/forms.html) 的綁定真的很魔幻…很魔幻……\r\n\r\n### Deploy\r\n\r\n用 vue-cli 產生的東西，如果要部署到 Github Pages 的話，有很多教學與套件。但教學一個比一個雷、套件一個比一個難用……稿不清楚是我理解力太差、還是怎麼樣……總之，我最後選了 [vue-gh-pages](https:\/\/www.npmjs.com\/package\/vue-gh-pages) 來用。省事。\r\n\r\n總之，[readme](https:\/\/github.com\/iigmir\/todolist-with-vuecli\/blob\/master\/README.md) 的檔案重寫了。\r\n\r\n另外，把程式碼排好的快捷鍵，[在 ubuntu 是 Ctrl + Shift + I](https:\/\/stackoverflow.com\/questions\/29973357\/how-do-you-format-code-in-visual-studio-code-vscode)。",
		"created_at" : "2018-02-02T05:27:04Z",
		"updated_at" : "2018-03-02T02:48:54Z"
	},
	{
		"id" : 45,
		"title" : "Vue 響應式短文",
		"context" : "### 故事前言\r\n\r\n工作碰上一個問題，就是我在模擬一份資料。這份資料長度不明，但我會需要自己新增屬性。問題在於，如果我想更改狀態，啥都沒有。因為想先快回家，所以這個問題只好留著不解決（我的頭……）。\r\n\r\n### 你怎麼了？\r\n\r\n程式如下：\r\n<pre>&lt;div v-for=\"(odd, idx) in i.odds\"&gt;\r\n    &lt;div id=\"app\" v-bind:class=\"{ active : foobar( input ) , box : true }\"&gt;\r\n        &lt;div v-on:click=\"fbz( input )\"&gt; <!-- active -->\r\n            &lt;p> {{ idx + 1 }} &lt;\/p&gt;\r\n            &lt;p class=\"\"> {{ odd }} &lt;\/p&gt;\r\n        &lt;\/div>\r\n    &lt;\/div>\r\n&lt;\/div>\r\nvar app =  new Vue({\r\n    el:\"#app\",\r\n    data: { odds:[] },\r\n    methods: {\r\n        foobar: function(x,y){},\r\n        fbz: function(x,y){}\r\n    },\r\n    computed: {\r\n        other_methods: function(x,y){}\r\n    },\r\n\t\tmounted: function() {\r\n\t\t    \/\/ AJAX\r\n\t\t\t\tapp.odds = AJAX.recived;\r\n\t\t\t\tapp.odds.forEach( (el,idx) => { app.odds[idx].b = false; } )\r\n\t\t}\r\n});\r\n\/*\r\n    我想透過點選 fbz 函式變換 #app 的 input 狀態，再透過 .active 參照 #app 的狀態。\r\n    但是我發現 .active 無論選 fbz 還是 other_methods 如何都不會變動……\r\n*\/<\/pre>\r\n\r\n回去看資料，發現有人想用 [watch](https:\/\/stackoverflow.com\/questions\/36978333\/vuejs-event-binding-in-v-for) 解決。不過我看不懂程式碼，所以決定先放著。\r\n\r\n直到我看見 [Github 的某人提出 issue](https:\/\/github.com\/vuejs\/vue\/issues\/5565) 才發現曙光。\r\n\r\n### 簡單來說，你有什麼發現？\r\n\r\n關鍵字是 Reactivity。解法是 `.$set`。\r\n\r\n### 所以我說為什麼？\r\n\r\n問題是在「自己新增屬性」這點，因為 Vue「[不允许在已经创建的实例上动态添加新的根级响应式属性 (root-level reactive property。)](https:\/\/cn.vuejs.org\/v2\/guide\/reactivity.html)」。所以我想透過 `mounted` 新增屬性會變得徒勞無功。\r\n\r\n另外我也很好奇：Vue 官方說明之所以有這麼詭異的問題，是「受现代 JavaScript 的限制 (以及废弃 Object.observe)」。但，那個「限制」是什麼？可能要看 [getter](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/JavaScript\/Reference\/Functions\/get) [setter](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/JavaScript\/Reference\/Functions\/set) 了。\r\n\r\n### 那怎麼辦？\r\n\r\n在 `mounted` 新增屬性時設定 [`.$set`](https:\/\/vuejs.org\/v2\/api\/#Vue-set-target-key-value)。上例就是改為 `app.odds.forEach( (el,idx) => { this.$set( this.odds[idx] , 'b', false); )`：\r\n\r\n<pre>mounted: function() {\r\n\t\t\/\/ AJAX\r\n\t\tapp.odds = AJAX.recived;\r\n\t\tapp.odds.forEach( (el,idx) => { this.$set( this.odds[idx] , 'b', false); } )\r\n}<\/pre>\r\n\r\n### 後記\r\n\r\n幹，我頭超級痛。我覺得我好像要看醫生。\r\n\r\n### 20180701 增筆\r\n\r\n我想起有人告訴我：「你可以用 `computed` 實例，這樣的話就能響應了。」——但是我最後沒有採用 `computed` 實例，理由是<strong> <code>computed<\/code> 實例無法傳送參數<\/strong>。這樣的話，`computed` 對上例就無能為力。\r\n\r\n可以看看 [Stack Overflow](https:\/\/stackoverflow.com\/questions\/40522634\/can-i-pass-parameters-in-computed-properties-in-vue-js) 還有 [Laracasts](https:\/\/laracasts.com\/discuss\/channels\/vue\/pass-arguments-to-computed-properties?page=0) 上面的回答。\r\n\r\n### 參考\r\n\r\n* [Two way bind v-for array troubleshooting](https:\/\/codepen.io\/iigmir\/pen\/vRRroa)\r\n* [VueJS event binding in v-for](https:\/\/stackoverflow.com\/questions\/36978333\/vuejs-event-binding-in-v-for)\r\n* [In a nested v-for, :class binding is not working with mouseover \/ mouseout events](https:\/\/github.com\/vuejs\/vue\/issues\/5565)\r\n* [深入响应式原理](https:\/\/cn.vuejs.org\/v2\/guide\/reactivity.html)\r\n* [為什麼畫面沒有隨資料更新 - Vue 響應式原理（Reactivity）](https:\/\/pjchender.blogspot.tw\/2017\/05\/vue-vue-reactivity.html)\r\n* [ vue中遇到的坑 --- 变化检测问题（数组相关） ](https:\/\/www.cnblogs.com\/zhuzhenwei918\/p\/6893496.html)\r\n* [ Vue响应式及其缺陷 ](https:\/\/www.w3cplus.com\/vue\/vue-reactivity-and-pitfalls.html)",
		"created_at" : "2018-03-31T04:59:39Z",
		"updated_at" : "2018-07-01T06:36:14Z"
	},
	{
		"id" : 41,
		"title" : "this is sparta",
		"context" : "<iframe width=\"560\" height=\"315\" src=\"https:\/\/www.youtube.com\/embed\/wzqXggZU3eE\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen><\/iframe>\r\n\r\n大多數情況下，`this` 是由「[在哪裡呼叫](https:\/\/ithelp.ithome.com.tw\/articles\/10193193)」決定的。大多數情況下 `this` 是全域物件（在瀏覽器就是 `Window`，因為大多數時候，最開始的呼叫就是從 `Window` 開始 ），除非：\r\n\r\n1. 由 `bind` or `apply` 綁定指定參數，那 `this` 就是被指定的參數。\r\n2. 由 `new` 產生新物件，那 `this` 就是該新物件。\r\n3. 該函式在某個物件內，那 `this` 就是該物件。\r\n\r\n另外，在嚴謹模式（strict mode）下，「在哪裡呼叫」的規則會嚴格執行：很多只有呼叫函式的寫法，其實是省略了 `Window` 這個（全域變數）主詞。也就是說，`foo()` 呼叫，其實該寫成 `Window.foo()`。如果沒有這主詞，你就會看到一個 `undefined`。\r\n\r\n對了，在嚴謹模式，你可能想這麼玩：\r\n<pre>\r\nfunction foo()\r\n{\r\n\t\"use strict\";\r\n\tthis.foo = \"Bar\";\r\n\treturn this;\r\n}\r\nconsole.log( undefined.foo() ); \/\/ TypeError: undefined has no properties\r\n<\/pre>\r\nundefined: [但我拒絕，我 undefined 最喜歡做的一件事，就是對自以為能玩壞我的傢伙說「不」！ ](https:\/\/developer.mozilla.org\/zh-TW\/docs\/Web\/JavaScript\/Reference\/Errors\/No_properties)\r\n\r\n---\r\n\r\n<pre>\r\nvar all_prop = function(ap){ return ap.prop; };\r\nvar another_prop = function(){ return this.prop; };\r\n\r\nvar test = {\r\n  \/\/\"use strict\";\r\n  prop: 42,\r\n  func: function() {\r\n    return this.prop;\r\n  },\r\n  f:all_prop(this),\r\n  fu:another_prop()\r\n};\r\n\r\nconsole.log(test.fu());\r\nconsole.log(test.f());\r\n\/\/ expected output: 42\r\n\/\/ But actually is: \"Error: test.fu is not a function\"\r\n<\/pre>\r\n\r\n問題：為什麼不能呼叫 `test.fu()` 或是呼叫 `test.f()`？",
		"created_at" : "2018-02-25T02:45:10Z",
		"updated_at" : "2018-02-25T02:47:44Z"
	},
	{
		"id" : 42,
		"title" : "2018\/03\/12 面試題目",
		"context" : "這次的面試很開心，回答得算順利，面試者也認為有專業。\r\n\r\n雖然我不清楚面試者如何對他不熟悉的領域，聽出有沒有理解就是了。\r\n\r\n### 你的工作經驗？\r\n\r\n維護該公司的系統、導入一些小套件、寫新的頁面。\r\n那個公司的系統很舊，所以我都是用 jQuery 與後端 helper 完成事情。\r\n\r\n### Vue 做什麼的？\r\n\r\n在 jQuery 的時代，資料呈現是以 DOM element 為單位：這種情況下，如果要更換資料，就會以 DOM element 操作為主。\r\n例如我想要輸入 input 時把資料呈現的話，在 jQuery 就會這樣寫：\r\n\r\n<pre>\r\n&lt;div id=\"app\">\r\n    &lt;input class=\"foo\">&lt;br \/>\r\n    &lt;span class=\"bar\">&lt;\/span>&lt;br \/>\r\n    &lt;span class=\"baz\">&lt;\/span>\r\n&lt;\/div>\r\n\r\n$(\".foo\").keypress(function()\r\n{\r\n    var the_text = $(\".foo\").val();\r\n    $(\".bar\").text(the_text);\r\n    $(\".baz\").text( \"輸入了\" + the_text);\r\n});\r\n<\/pre>\r\n\r\n但萬一我要改動 DOM element 的話，就會是惡夢一場。\r\n\r\n在雙向綁定的 Vue 就不同了，你可以這樣寫：\r\n\r\n<pre>\r\n&lt;div id=\"app\">\r\n    &lt;input clas=\"foo\" v-model=\"foo_m\">&lt;br \/>\r\n    &lt;span class=\"bar\"> {{ foo_m }} &lt;\/span>&lt;br \/>\r\n    &lt;span class=\"baz\"> {{ \"輸入了\" + foo_m }} &lt;\/span>\r\n&lt;\/div>\r\n\r\nvar app = new Vue({\r\n    data:{ foo_m : \"\" },\r\n    method:{  }\r\n})\r\n<\/pre>\r\n\r\n整個程式碼就會整潔許多。 \r\n\r\n* [廖雪峰的官方网站：双向绑定](https:\/\/www.liaoxuefeng.com\/wiki\/001434446689867b27157e896e74d51a89c25cc8b43bdb3000\/00147574857851718682c42639f466a934ad9d4f485d1f2000)\r\n* [脫離資料分散的問題，從 jQuery 換到 Vue.js](https:\/\/yami.io\/jquery-to-vuejs\/)\r\n* [已经在用jquery了，为什么还要使用Vue.js？](http:\/\/www.h5w3.com\/?p=836)\r\n\r\n### 如果要驗證資料，例如身份證號碼，要怎麼做？\r\n\r\n1. HTML 有 `pattern` 或是 `type` 屬性可以做最簡單的驗證。\r\n2. 當然我可以繞過 HTML 驗證，所以還需要 JavaScript 驗證。\r\n3. 然而用戶端還是有辦法[繞過 JavaScript 驗證](https:\/\/www.google.com.tw\/search?q=繞過 JavaScript 驗證)。因此，不管前端做得再全，後端還是要驗證。\r\n4. 身份證號碼就第一位是字母、第二位是 1 或 2、最後是檢查碼。併此指名。\r\n\r\n* [MDN](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTML\/Element\/input)\r\n\r\n### 如果我給一個 JSON API，你如何把它變成網頁表格的資料？\r\n\r\n假設在 Vue 的話：\r\n\r\n<pre>\r\n&lt;table>\r\n    &lt;thead>\r\n        &lt;tr>\r\n            &lt;td>ID&lt;\/td>\r\n            &lt;td>Name&lt;\/td>\r\n            &lt;td>Account&lt;\/td>\r\n        &lt;\/tr>\r\n    &lt;\/thead>\r\n    &lt;tbody>\r\n        &lt;tr v-for=\"(value, key, index) in i_ajax\" :key=\"i.id\">\r\n            &lt;td> {{ index }} &lt;\/td>\r\n            &lt;td> {{ value.name }} &lt;\/td>\r\n            &lt;td> {{ value.account }} &lt;\/td>\r\n        &lt;\/tr>\r\n    &lt;\/tbody>\r\n&lt;\/table>\r\n<\/pre>\r\n\r\n* [List Rendering](https:\/\/vuejs.org\/v2\/guide\/list.html)\r\n\r\n### 一個表單，從送出去到回應，中間發生什麼事？\r\n\r\n1. 首先會執行前端驗證。\r\n2. 接著瀏覽器會發出一段 Request。\r\n3. 這個 Request 會跑到伺服器執行。\r\n4. 伺服器執行完畢一定會給個 Reponse。\r\n5. 瀏覽器再針對 Reponse 做對應動作。\r\n\r\n* [MDN](https:\/\/developer.mozilla.org\/zh-TW\/docs\/Learn\/Getting_started_with_the_web\/How_the_Web_works)\r\n* [alex\/what-happens-when](https:\/\/github.com\/alex\/what-happens-when)\r\n\r\n### 你對後端 PHP 的理解？ \r\n\r\n我寫過幾次原生 PHP，用原生的 echo 手刻，但發現這樣寫會很恐怖。我之後接觸過 Laravel 還有 Ruby on Rails。知道如何用後端 helper 或是 RESTful 或是 API 之類的東西產生網頁、也理解什麼是 MVC。\r\n\r\n### 什麼是 RESTful？\r\n\r\n假設我有 `foo.bar\/3` 這個網址，它其實就是個資源（Resource）。這個名詞，對應的就是 `foo.bar` 的第 `3` 個資源。再透過 HTTP 的 `GET` `POST` `PATCH` `DELETE` 完成對應的 CRUD。\r\n\r\n* [2018\/01\/15 面試題目](https:\/\/iismmx-rails-blog.herokuapp.com\/articles\/34)\r\n* [MDN](https:\/\/developer.mozilla.org\/zh-TW\/docs\/Glossary\/REST)\r\n\r\n### 什麼是 MVC？\r\n\r\n我目前的應徵的前端網頁，在整個框架就是對應到 MVC 的 View、接著 M 就是 Model，它掌管算法或是與資料庫的交互、最後 C 的 Controller 負責把這兩者結合在一起。\r\n\r\n* [ GOTO MVC! GOTO MVC! ](https:\/\/iismmx-rails-blog.herokuapp.com\/articles\/14)\r\n\r\n### 你平常如何找資料？用英文論壇嗎？\r\n\r\n我會找官方手冊，接著找 Stack Overflow。完全沒有，就會去中文即時通訊軟體如 Line Telegram 之類的，因為它們能很快得到需要的回應。\r\n\r\n### 你使用什麼版控？\r\n\r\n> 「Git，你們該不會用 SVN？」 <br \/> 「我的確是 SVN，不過我可以用 Git」\r\n\r\n### 針對 RWD 你會用手刻？還是框架？\r\n\r\n針對 RWD 我會以框架優先：因為框架速度快、大家都懂、也好維護。真的沒有辦法（例如查遍手冊都沒有正確用法）時，才會考慮手刻。",
		"created_at" : "2018-03-12T04:33:09Z",
		"updated_at" : "2018-03-31T05:44:02Z"
	},
	{
		"id" : 20,
		"title" : "關於後端只傳 JSON，接著讓前端自己渲染的那些事",
		"context" : "[專案網站](https:\/\/github.com\/iigmir\/json_rails)\r\n\r\n要維護一個網路框架，常常要和各種 helper 打交道。這些抽象的 helper 語法很好用，但也有問題：一來前端不一定懂、二來後端也可能對前端有誤會。\r\n\r\n這些語法和前端掛在一起、會變得極度混亂。接著維護上也會出現問題：到了後來，儘管大家覺得某個網頁的問題很多，但因為後端語法和前端混在一起，所以沒有人敢動：誰動誰就死、誰就來承擔一切。\r\n\r\n而當今的 JavaScript 相當發達──哪怕是 jQuery 也好，它也能操縱各種網頁元件。那麼，可不可以後端只給 JSON 傳資料，然後前端用這些資料，產生各種樣式？\r\n\r\n只用一個 JSON 就生出有資料的網頁，把前端和後端徹底分開。多麼棒的想法啊。\r\n\r\n於是，我開始寫了。同樣還是用熟悉的 rails 與 Kube。另外，JavaScript 使用 jQuery 去請求 JSON、架構渲染使用 Vue──我其實很希望連請求也都用 Vue，不過看來過於複雜，還是在裡面嵌入 jQuery 的 AJAX API 比較簡單。\r\n\r\n可是怎麼嵌入？我一開始搜尋，以為是用 ready 語法產生。但是無論如何，都無法得到路徑正確的 JSON 檔案。直到後來，才發現在 Vue2，ready 語法已經被棄用了，必須改用 mounted 語法。改掉之後，成功看到了資料有進來。\r\n\r\n接著，我拔掉了後端語法。相同效果下，網頁變得簡潔許多。\r\n\r\n只是我突然想到，就算是只用 JSON 傳資料，前後端從此就能切分清楚了嗎──要是隨著行事邏輯的複雜，JSON 的資料多了以後，做各種判斷、下各種樣式，會比較容易嗎……？而且，要不要考慮停了 JavaScript 的用戶，也是個問題。\r\n\r\n請求發多少、速度多快，可能也是要考慮的要點。",
		"created_at" : "2018-01-03T08:05:20Z",
		"updated_at" : "2018-03-12T05:07:31Z"
	},
	{
		"id" : 43,
		"title" : "關於後端的 Helper",
		"context" : "鳩山與福澤在白板面前，討論對網路框架的感想。<br \/>\r\n福澤看似若有所思，接著問鳩山說：「你知道後端 helper 嗎？」<br \/>\r\n鳩山遲了幾秒，決定問福澤：「我不太清楚你對 helper 的定義，是有什麼意思嗎？」<br \/>\r\n「好吧，」福澤拿起白板上的白板筆，開始在白板寫起程式碼：\r\n\r\n<pre>\r\nform_helper({ action:\"qwerty\" , class:\"foobar\"}) |f|\r\n    f.text a.bc\r\n    f.number a.cx\r\n    f.submit({value:\"Submit\"})\r\nend\r\n<\/pre>\r\n\r\n「你猜這東西最後會變成什麼嗎？」筆一甫落，福澤就問鳩山這個問題。<br \/>\r\n鳩山看了這個有點抽象、甚至有點不太熟悉的程式碼，決定放棄：「嗯，我有點不清楚。請問它最後會變成什麼樣子？」<br \/>\r\n「好的。」福澤又拿起白板筆，在題目旁邊寫了答案：\r\n\r\n<pre>\r\n&lt;form action=\"qwerty\" class=\"foobar\"&gt;\r\n    &lt;input type=\"text\" name=\"a[bc]\"&gt;\r\n    &lt;input type=\"number\" name=\"a[cx]\"&gt;\r\n    &lt;input type=\"submit\" value=\"Submit\"&gt;\r\n&lt;\/form&gt;\r\n<\/pre>\r\n\r\n寫 Java 的鳩山看了就發現：「噢...噢...我知道了。原來是這樣子。」\r\n\r\n「這是一種類似 [rails](http:\/\/guides.rubyonrails.org\/form_helpers.html) 的虛擬碼。不過許多網路框架也有這種東西。」福澤開了 [CodeIgniter](https:\/\/www.codeigniter.com\/userguide3\/helpers\/form_helper.html) 與 [Express](https:\/\/developer.mozilla.org\/en-US\/docs\/Learn\/Server-side\/Express_Nodejs\/forms) 的程式碼網站。\r\n\r\n「事實上，」福澤繼續說：「[Laravel 也有這種東西](https:\/\/laravel.com\/docs\/4.2\/html)。我們讀了一點文件，也有一點程式基礎，所以能知道這些後端 Helper 可以幹什麼，接著就可以為此少寫很多東西。」<br \/>\r\n「你說得沒錯。」鳩山點頭。<br \/>\r\n「不過呢，」福澤話鋒一轉：「不是所有人都知道那是什麼東西，無論那個人是前端或後端。要維護還有劃清責任的話，可能會有問題。」\r\n\r\n室內靜默了幾秒，因為福澤說他口渴，需要喝點茶，順便醞釀氣氛。\r\n\r\n福澤喝完點茶後，開始總結：「基於我前端出身，我其實不太喜歡這種完全不像 HTML 的東西。如果要我發表意見，我其實不贊同使用。」<br \/>\r\n鳩山遲了幾秒，也發表看法：「這方面我也同意，這種東西可能會很難把責任分清楚。我寧願用 JSON API 傳資料、或是後端處理前端傳過來的請求。」<br \/>\r\n福澤摸了摸下巴說：「既然我們有所共識，那我們就不用內建的後端 Helper 吧。」\r\n\r\n做出結論後，兩個人就回到位子上了。",
		"created_at" : "2018-03-17T06:27:13Z",
		"updated_at" : "2018-03-17T06:27:13Z"
	},
	{
		"id" : 78,
		"title" : "在 Ｍac 安裝 PHP 套件",
		"context" : "### 序言\r\n\r\n要我說的話，最適合 Web 開發的作業系統順序是：Linux > macOS > Windows。\r\n\r\n雖然 macOS 是基於 UNIX 的作業系統，但他終究是 macOS 而不是 Linux 發行版。設定起來，自然不如 Linux 順心而自然。\r\n\r\n### 開始前\r\n\r\n在接下去以前，你的 Ｍac 要有...\r\n\r\n1. [Homebrew](https:\/\/brew.sh)\r\n2. 內含 <abbr title=\"PHP Extension Community Library\">PECL<\/abbr> 的 PHP\r\n\r\n你可以輸入以下指令，檢查套件是否有是否安裝：\r\n\r\n<pre>\r\npecl help version # PECL 與 PHP 版本\r\nbrew -v # Homebrew 版本\r\n<\/pre>\r\n\r\n[這裡有如何安裝內含 PECL 的 PHP 教學](https:\/\/icyapril.com\/php\/programming\/2016\/08\/14\/installing-pecl-on-osx.html)...至於如何安裝 Homebrew，官網都有指引......而 PECL 是一種套件管理工具，任務大致上與 [Composer](https:\/\/getcomposer.org\/) 差不多，不過 PECL 管了一些更底層（用 C 語言寫的...）的套件，所以 Composer 裝不了。\r\n\r\n這次的主角是 [igbinary](https:\/\/pecl.php.net\/package\/igbinary)。\r\n\r\n### 安裝\r\n\r\n安裝起來還不簡單，`sudo pecl install igbinary` 不就好了？\r\n\r\n這麼想的你就錯了： `ERROR: failed to mkdir \/usr\/include\/php\/ext\/igbinary`\r\n\r\nsudo 也不行是啥巫術？簡直就像有 [SELinux](https:\/\/en.wikipedia.org\/wiki\/Security-Enhanced_Linux) 之類的東西在作怪。\r\n\r\n......爬文才發現，macOS 還真的有類似 SELinux 的東西：[System Integrity Protection](https:\/\/support.apple.com\/HT204899)。\r\n\r\n好吧，那就關掉吧。\r\n\r\n### 關掉 SIP\r\n\r\n重新開機，看到蘋果商標後，同時按下 <kbd>Command<\/kbd> + <kbd>R<\/kbd> 以進入恢復模式。\r\n\r\n接著點選終端機，並輸入 `csrutil disable` 並重新開機。\r\n\r\n### 再安裝\r\n\r\n這次就可以直接輸入 `sudo pecl install igbinary` 了。記得安裝完以後重啟伺服器軟體。\r\n\r\n### 後記\r\n\r\n> 「很多人 Mac 最後不是賣掉，就是灌 Windows。」 <br \/>\r\n> 「喔，我倒不會。最差的情況是灌 Ubuntu 而已。」\r\n\r\n### 參考資料\r\n\r\n* [一些升級 El Capitan 之後要注意的事項](https:\/\/hiraku.tw\/2015\/09\/3969\/)\r\n* [can't install imagick php extension on mac](https:\/\/stackoverflow.com\/questions\/43955366\/cant-install-imagick-php-extension-on-mac)\r\n* [Mac OS\/X won't let me mkdir \/usr\/share\/tomcat6, even as root](https:\/\/apple.stackexchange.com\/questions\/301976\/mac-os-x-wont-let-me-mkdir-usr-share-tomcat6-even-as-root)\r\n* [sudo mkdir in \/usr\/, Operation not permitted. El Capitan](https:\/\/stackoverflow.com\/questions\/33309005\/sudo-mkdir-in-usr-operation-not-permitted-el-capitan)\r\n* [Install PEAR and PECL on Mac OS X](https:\/\/jason.pureconcepts.net\/2012\/10\/install-pear-pecl-mac-os-x\/)\r\n* [Installing PECL on Mac OS X with Homebrew](https:\/\/icyapril.com\/php\/programming\/2016\/08\/14\/installing-pecl-on-osx.html)\r\n* [What is the difference between PEAR and Composer?](https:\/\/stackoverflow.com\/questions\/34199824\/what-is-the-difference-between-pear-and-composer)\r\n* [如何捋清楚php的pecl和pear，composer三者的区别与联系？](https:\/\/www.zhihu.com\/question\/50826568)",
		"created_at" : "2018-04-28T23:28:09Z",
		"updated_at" : "2018-04-29T05:47:25Z"
	},
	{
		"id" : 44,
		"title" : "Flexbox ❤️ CSS Grid",
		"context" : "> 公司福利：[不需支援連 Flexbox 都不能用的瀏覽器](https:\/\/github.com\/f2etw\/jobs\/issues\/159)。\r\n\r\n有個面試題沒有答好：\r\n\r\n> Flexbox 與 CSS Grid 有什麼區別？\r\n\r\n我才發現自己沒有搞懂兩者。最近玩了 [Flexbox Froggy](http:\/\/flexboxfroggy.com) 與 [Grid Garden](http:\/\/cssgridgarden.com) 才有了點頭緒。\r\n\r\n## 簡單來說\r\n\r\n* [Flexbox](https:\/\/developer.mozilla.org\/zh-TW\/docs\/Web\/CSS\/CSS_Grid_Layout\/Basic_Concepts_of_Grid_Layout) 是以***線性操作***為單位。\r\n* [CSS Grid](https:\/\/developer.mozilla.org\/zh-TW\/docs\/Web\/CSS\/CSS_Grid_Layout) 則用***面的操作***為單位。\r\n\r\nFlexbox 有線、有方向。你可以決定這條線該從哪裡出發、哪裡結束、如何斷行……這種操作讓我想起 `float` 與 `inline-block`：你需要讓子元素乖乖排隊，但往往會讓父元素崩潰……Flexbox 就是要解決這種問題；<br \/>相較之下，CSS Grid 則有欄、有列。你需要做的是決定子元素該放在哪個欄、還有哪個列。這種哲學我想起更古老的 `<table>` 排版，但在 CSS Grid 之下的 HTML 乾淨許多。\r\n\r\n那麼 CSS Grid 是取代 Flexbox 的嗎？<br \/>***並不是***。\r\n\r\n## 簡易實做\r\n\r\n要講明理由，我需要請出 Windows Server 的 IIS 預設畫面：\r\n\r\n![IIS 8.5 預設畫面](https:\/\/docs.microsoft.com\/en-gb\/iis\/install\/installing-iis-85\/installing-iis-85-on-windows-server-2012-r2\/_static\/image1.png)\r\n\r\n我們拿例子最左上角的三個方塊好了。這裡面有英語、日語、還有義大利語。三者方塊除了大小不同，位置也不同。另外，文字還需要對齊。於是我們的排版出現以下任務：\r\n\r\n1. 定義方塊大小\r\n2. 定義方塊位置\r\n3. 方塊文字垂直對齊\r\n\r\n### 定義方塊大小\r\n\r\n定義方塊大小無論如何都能辦到，只是對應屬性不同。\r\n\r\n### 純 Flexbox\r\n\r\n如果純用 Flexbox，垂直對齊無疑很簡單：\r\n\r\n<pre>.parent\r\n{\r\n    display:flex;\r\n    flex-direction:column-reverse;\r\n}<\/pre>\r\n\r\n但定義方塊位置就會很彆扭了。`warp` 不完。\r\n\r\n### 純 CSS Grid\r\n\r\n在定義位置方面，CSS Grid 也很簡單：\r\n\r\n<pre>.parent\r\n{\r\n    display:grid;\r\n    grid-template-columns:repeat(4,80px);\r\n    grid-template-rows:repeat(4,80px);\r\n}\r\n\r\n.child\r\n{\r\n    grid-column: 1\/3;\r\n    grid-row: 1\/3;\r\n}<\/pre>\r\n\r\n但如果要垂直對齊文字，CSS Grid 也同樣彆扭。\r\n\r\n<p data-height=\"265\" data-theme-id=\"0\" data-slug-hash=\"aYYGZX\" data-default-tab=\"css,result\" data-user=\"iigmir\" data-embed-version=\"2\" data-pen-title=\"IIS default page in HTML(prototype)\" class=\"codepen\">來看看最後實做的原型：<a href=\"https:\/\/codepen.io\/iigmir\/pen\/aYYGZX\/\">IIS default page in HTML(prototype)<\/a> on <a href=\"https:\/\/codepen.io\">CodePen<\/a>.<\/p>\r\n<script async src=\"https:\/\/static.codepen.io\/assets\/embed\/ei.js\"><\/script>\r\n\r\n所以，這兩個各有長處。誰也不是來取代誰、而是利用自身的長處，彌補對方的短絀。\r\n\r\n最後以一段歌詞做結：\r\n\r\n> ヒトリより　キミとなら　もっと<br \/>\r\n> 強くなれる気がするよ<br \/>\r\n> 僕にはない　キミにあるもの<br \/>\r\n> 合わされば最強に<br \/>\r\n> -- GARNiDELiA, [Aikotoba](https:\/\/www.youtube.com\/watch?v=9dfKJ503-Fc)\r\n\r\nRef:\r\n\r\n* [Does CSS Grid Replace Flexbox?](https:\/\/css-tricks.com\/css-grid-replace-flexbox)\r\n* [Flexbox vs. CSS Grid — Which is Better?](https:\/\/www.youtube.com\/watch?v=hs3piaN4b5I)\r\n* [Flexbox Froggy](http:\/\/flexboxfroggy.com) & [Grid Garden](http:\/\/cssgridgarden.com)\r\n* [深入解析 CSS Flexbox](http:\/\/www.oxxostudio.tw\/articles\/201501\/css-flexbox.html)",
		"created_at" : "2018-03-30T08:13:39Z",
		"updated_at" : "2018-03-30T08:16:27Z"
	},
	{
		"id" : 79,
		"title" : "寫點測試",
		"context" : "[TDD Practice](https:\/\/github.com\/iigmir\/TDD-practice)\r\n\r\n<blockquote cite=\"https:\/\/vinta.ws\/blog\/695\"> 信奉 Test-Driven Development 的工程師鄙視先寫 code 再補 tests 的工程師，先寫 code 再補 tests 的工程師鄙視不寫 tests 的工程師，不寫 tests 的工程師鄙視又他媽亂改需求的 PM。 <\/blockquote>\r\n\r\n測試的理由，是確保程式碼照著一定的規範走。而規範，就是俗稱的 [spec](https:\/\/en.wikipedia.org\/wiki\/Spec)：程式要有什麼功能，就得從需求演化為規範，再從規範變成測試用例。\r\n\r\n通常，我們會先寫程式，再測試之。但也有人想到：何不先寫規範與測試程式，再想辦法把程式寫進去？<br \/>\r\n而這個想法，就變成了 [Test-Driven Development](https:\/\/en.wikipedia.org\/wiki\/Test-driven_development)：\r\n\r\n1. 首先，我先寫一個測試程式，測試程式會寫好規範，以完成需求。當然，也要能呼叫要主程式。\r\n2. 運行這個測試程式。由於主程式並不存在，結果當然失敗。\r\n3. 試著撰寫主程式，想辦法讓測試程式通過。\r\n4. 當你寫到最後，發現測試程式全部完成，你就成功了。\r\n\r\n前端測試比較麻煩的是：瀏覽器是個圖形介面，所以很多前端的問題，其實程式測不了......不過看完 [Ruby on Rails 的測試寫法](https:\/\/railsbook.tw\/chapters\/23-testing-with-rspec-part-1.html)，我想依舊可以寫些最簡單的測試。\r\n\r\n那就開始吧。\r\n\r\n### 準備\r\n\r\n如果需要寫測試，你需要一個測試框架，還有一個斷言函式庫。我這裡用的是 [Mocha](https:\/\/mochajs.org\/) + [Assert](https:\/\/github.com\/defunctzombie\/commonjs-assert)。\r\n\r\n### 開始\r\n\r\n<pre>\r\ndescribe('Novel', function()\r\n{\r\n    describe('Add', function()\r\n    {\r\n        it('Should add chapter at last chapter when adding', function()\r\n        {\r\n            let novel = new Novel([1,2,3,4,5,6,7,8,9,10]);\r\n            assert.deepEqual( [1,2,3,4,5,6,7,8,9,10,11] , novel.add() );\r\n        });\r\n    });\r\n});\r\n<\/pre>\r\n\r\n這是最簡單的測試了。我們需要 `Novel` 程式，裡面有個 `Add` 方法，接著寫了需要的功能，還有相對應的測試程式。寫好了，就去跑 `npm test` 測試程式。\r\n\r\n於是：\r\n\r\n<pre>\r\nfunction Novel( current_chapter )\r\n{   \/\/ Code\r\n    this.add = () =>\r\n    {\r\n        let tmp_ary = current_chapter.sort( (x,y) => x - y );\r\n        let new_array = Array.from(tmp_ary);\r\n        let tmp_num = tmp_ary[ tmp_ary.length - 1 ] + 1;\r\n        \r\n        new_array.push( tmp_num );\r\n        return new_array;\r\n    }\r\n}\r\n<\/pre>\r\n\r\n我寫了程式，接著又用 `npm test` 跑測試。\r\n\r\n感想嗎？<br \/>\r\n我很累。沒想到這麼累。\r\n\r\n### 參考資料\r\n\r\n* [寫測試讓你更有信心](https:\/\/railsbook.tw\/chapters\/23-testing-with-rspec-part-1.html) ( [Part 2](https:\/\/railsbook.tw\/chapters\/24-testing-with-rspec-part-2.html) )\r\n* [Test-driven development](https:\/\/en.wikipedia.org\/wiki\/Test-driven_development)\r\n* [測試的哲學](http:\/\/blog.darkthread.net\/blogs\/darkthreadtw\/archive\/2008\/12\/05\/3898.aspx)\r\n* [單元測試：Mocha、Chai 和 Sinon](https:\/\/cythilya.github.io\/2017\/09\/17\/unit-test-with-mocha-chai-and-sinon)\r\n* [测试框架 Mocha 实例教程](http:\/\/www.ruanyifeng.com\/blog\/2015\/12\/a-mocha-tutorial-of-examples.html)\r\n* [测试相关](https:\/\/leohxj.gitbooks.io\/front-end-database\/about-test\/index.html)",
		"created_at" : "2018-04-30T11:37:10Z",
		"updated_at" : "2018-04-30T11:57:33Z"
	},
	{
		"id" : 80,
		"title" : "nginx worker_connections are not enough",
		"context" : "I set my nginx for my Mac for developing. However, it goes [500](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Status\/500).\r\n\r\nI read access log, gosh, about ten thousand access log there. <br \/>\r\nThen, I read error log, it said:\r\n\r\n<pre>\r\n2018\/05\/05 15:05:35 [alert] 1346#0: 20000 worker_connections are not enough\r\n2018\/05\/05 15:05:35 [error] 1346#0: *86966 kevent() reported about an closed connection (54: Connection reset by peer) while reading response header from upstream, client: 127.0.0.1, server: localhost, request: \"GET \/phpinfo.php HTTP\/1.0\", upstream: \"http:\/\/127.0.0.1:80\/phpinfo.php\", host: \"127.0.0.1\", referrer: \"http:\/\/127.0.0.1\/\"\r\n<\/pre>\r\n\r\nOkay, then, why? I read [Stack overflow](https:\/\/stackoverflow.com\/questions\/28265717\/worker-connections-are-not-enough) and [netingcn](http:\/\/www.netingcn.com\/nginx-proxy-error-500.html), found that 500 error may because nginx stuck in infinity loop.\r\n\r\nI found my nginx.conf, there are two `location ~ \\.php$` nginx.conf. One is:\r\n\r\n<pre>\r\nlocation ~ \\.php$ {\r\n    proxy_pass   http:\/\/127.0.0.1;\r\n}\r\n<\/pre>\r\n\r\nLooks like it self-reference? So I comment this. Now there's no `nginx worker_connections are not enough` more.\r\n\r\nAnd, refer [How to persistently control maximum system resource consumption on Mac](https:\/\/unix.stackexchange.com\/questions\/108174\/how-to-persistently-control-maximum-system-resource-consumption-on-mac) in Unix & Linux Stack Exchange.",
		"created_at" : "2018-05-04T23:34:57Z",
		"updated_at" : "2018-05-04T23:45:49Z"
	},
	{
		"id" : 81,
		"title" : "FastCGI sent in stderr: \"Primary script unknown\"",
		"context" : "解決完  [nginx worker_connections are not enough](https:\/\/iismmx-rails-blog.herokuapp.com\/articles\/80)  後，我依舊要解決問題。這次是在 php 檔案只出現 File not found 字樣，但檔案明明就有。排查 Log 以後，發現以下錯誤：\r\n\r\n<pre>[error] 18762#0: *12 FastCGI sent in stderr: \"Primary script unknown\" while reading response header from upstream, client: 127.0.0.1, server: localhost, request: \"GET \/phpinfo.php HTTP\/1.1\", upstream: \"fastcgi:\/\/127.0.0.1:9000\", host: \"127.0.0.1\", referrer: \"http:\/\/127.0.0.1\/\"<\/pre>\r\n\r\n去 [Server Fault](https:\/\/serverfault.com\/a\/754378) 以後，發現可以在 Log 宣告變數：\r\n\r\n<pre>log_format scripts '$document_root$fastcgi_script_name &gt; $request' #請放在 http 區塊<\/pre>\r\n\r\n這個意思是，建立一種紀錄模式稱為 `scripts`，裡面會紀錄 `$document_root` `$fastcgi_script_name` `$request` 三個變數，以及 `&gt;` 符號。接著在 nginx.conf 的 `server` 區塊寫下：\r\n\r\n<pre>access_log \/my\/logs\/path.log scripts; #\/my\/logs\/path.log 要修改為 nginx 可執行的路徑<\/pre>\r\n\r\n他會在 `\/my\/logs\/path.log` 的檔案內，紀錄先前寫好的 `scripts` 模式。接著去 `\/my\/logs\/path.log` 裡查查看：\r\n\r\n<pre>\/usr\/local\/Cellar\/nginx\/1.13.12\/html\/phpinfo.php > GET \/phpinfo.php HTTP\/1.1<\/pre>\r\n\r\n明顯不對。要去設定。我想是 Document Root 的問題吧。那就去 nginx.conf 的 `server` 區塊設定：\r\n\r\n<pre>root           \/Users\/my\/project;<\/pre>\r\n\r\n重啟後成功，收工！\r\n\r\nRef: [Nginx 1 FastCGI sent in stderr: “Primary script unknown”](https:\/\/serverfault.com\/questions\/517190\/nginx-1-fastcgi-sent-in-stderr-primary-script-unknown)",
		"created_at" : "2018-05-07T18:09:02Z",
		"updated_at" : "2018-05-08T03:14:11Z"
	},
	{
		"id" : 84,
		"title" : "Git 回滾啟示錄",
		"context" : "公司同事在操作 Git 時不小心犯錯，把相當數量的程式——我猜有數千個——蓋過去，變成舊的了。想當然，整個專案就大爆炸。\r\n\r\n當時的處理方法，是把所有的檔案手動比對，並直接覆蓋。但那數千個檔案的提交，依舊出現在歷史上面。結果就是上游方看到提交史，直接拒絕了我們的 Pull Request。\r\n\r\n現在想想，我當時應該當機立斷，把所有資料立刻弄回同事操作失誤前。\r\n\r\n不過接下來，要怎麼把這次回滾推上去才好？\r\n\r\n有些人會選用 `git push -f` 直接覆蓋整個提交史，不過我認為這不是好辦法。因為整個專案的提交史遭到竄改，這影響遠比 `git rebase` 嚴重。\r\n\r\n我原本認為應該用以原基礎為分支開新分之，再合併回來。不過看了看，[其實有更好的辦法](https:\/\/stackoverflow.com\/questions\/5509543\/how-do-i-properly-force-a-git-push)。那就是 `git revert`。\r\n\r\n也就是：發現錯誤後，立刻用 `git revert` 跳回到之前的提交，並立刻 `git commit` 提交並說明回退，再把這次回退提交，推送到遠端。\r\n\r\n不過，[就連 Gitlab 也能犯下如 rm -rf 這樣子的 Epic fail 了](https:\/\/about.gitlab.com\/2017\/02\/01\/gitlab-dot-com-database-incident\/)，這次大回滾又能說啥呢。\r\n\r\n但我得從這次失敗中，學到正確的回滾方法。\r\n\r\n### 參考資料\r\n\r\n* [How do I properly force a Git push?](https:\/\/stackoverflow.com\/questions\/5509543\/how-do-i-properly-force-a-git-push)\r\n* [Git reset --hard and a remote repository](https:\/\/stackoverflow.com\/questions\/1377845\/git-reset-hard-and-a-remote-repository)\r\n* [Force “git push” to overwrite remote files](https:\/\/stackoverflow.com\/questions\/10510462\/force-git-push-to-overwrite-remote-files)\r\n* [【狀況題】聽說 git push -f 這個指令很可怕，什麼情況可以使用它呢？](https:\/\/gitbook.tw\/chapters\/github\/using-force-push.html)\r\n* [【狀況題】啊！不小心把檔案或目錄刪掉了…](https:\/\/gitbook.tw\/chapters\/using-git\/recover-deleted-files.html)\r\n* [Reset、Revert 跟 Rebase 指令有什麼差別？](https:\/\/gitbook.tw\/chapters\/rewrite-history\/reset-revert-and-rebase.html)\r\n* [員工接連犯錯，公司可以開除他嗎？法律專家的 3 點提醒](https:\/\/www.managertoday.com.tw\/books\/view\/56081)\r\n* [員工犯錯時，主管應該怎麼做？微軟執行長給主管的三個建議](https:\/\/www.managertoday.com.tw\/articles\/view\/54239)\r\n* [有犯錯空間，才有更多學習的空間](https:\/\/www.managertoday.com.tw\/columns\/view\/16214)\r\n* [部屬犯錯先別發怒，主管要反問「接下來，你打算怎麼辦？」](https:\/\/www.managertoday.com.tw\/articles\/view\/50943)",
		"created_at" : "2018-05-16T07:00:08Z",
		"updated_at" : "2018-05-16T07:02:13Z"
	},
	{
		"id" : 83,
		"title" : "在 Rails 使用 ES6",
		"context" : "身為一位潮到不行der前端開發，使用 [ES6](http:\/\/es6-features.org) 也是理所當然的事情。\r\n\r\n不過呢，身為後端的 Rails 可不一定就那麼潮：\r\n\r\n<pre>\r\nremote:        Running: rake assets:precompile\r\nremote:        rake aborted!\r\nremote:        Uglifier::Error: Unexpected token: operator (>). To use ES6 syntax, harmony mode must be enabled with Uglifier.new(:harmony => true).\r\n<\/pre>\r\n\r\n我想英文訊息已經很清楚了：如果你想用 ES6 語法，就要開啟 harmony 模式。\r\n\r\n嗯，真和諧。\r\n\r\n那怎麼做？錯誤訊息的 [Uglifier](https:\/\/github.com\/lautis\/uglifier) 是個處理並壓縮 JavaScript 的程式。你需要下載他來用。首先，請輸入 `gem install uglifier` 安裝他。成功的話，去 `config\/environments\/production.rb`，也就是上線環境設定檔找到：\r\n\r\n<pre>\r\nconfig.assets.js_compressor = :uglifier\r\n<\/pre>\r\n\r\n然後寫成：\r\n\r\n<pre>\r\nconfig.assets.js_compressor = Uglifier.new(harmony: true)\r\n<\/pre>\r\n\r\nRails 就能吃 ES6 語法了。",
		"created_at" : "2018-05-16T05:46:17Z",
		"updated_at" : "2018-05-16T05:46:38Z"
	},
	{
		"id" : 86,
		"title" : "刪除文章失敗",
		"context" : "剛剛想在這裡刪除文章時，出現[伍佰](.\/500)了。我立刻下 `heroku logs` 檢查：\r\n\r\napp[web.1]: SQL (2.5ms)  （省略）\r\napp[web.1]: (0.6ms)  ROLLBACK\r\napp[web.1]: Completed 500 Internal Server Error in 10ms (ActiveRecord: 5.4ms)\r\napp[web.1]: ActiveRecord::InvalidForeignKey (PG::ForeignKeyViolation: ERROR:  update or delete on table \"articles\" violates foreign key constraint \"********\" on table \"article_tags\"\r\napp[web.1]: DETAIL:  Key (id)=(82) is still referenced from table \"article_tags\".\r\n\r\n我一開始以為是 heroku API 有問題，但仔細看，發現「Key (id)=(82) is still referenced from table \"article_tags\"」：這也就是說，因為文章的一些分類標籤要依賴文章，所以刪不得。\r\n\r\n好吧，以後找時間修正。現在先記上一筆。",
		"created_at" : "2018-05-20T06:30:30Z",
		"updated_at" : "2018-05-20T06:30:30Z"
	},
	{
		"id" : 85,
		"title" : "vuex 的故事",
		"context" : "[vuex](https:\/\/vuex.vuejs.org) 是基於 [flux](https:\/\/facebook.github.io\/flux\/docs\/overview.html) 架構的理念而誕生，並針對 [Vue](https:\/\/vuejs.org) 優化的專門程式。\r\n\r\n那麼，為什麼要使用 flux 架構？\r\n\r\n讓我們想像一下網頁的導覽頁面吧：導覽頁面基本上重複性很高，卻又一定會用到。這就意味著，我要在網頁複製貼上很多很多次。你不嫌煩，我都嫌煩呀。\r\n\r\n「不是說寫程式就是不要複製貼上嗎？那為什麼我寫 HTML 的時候，就每次都要這麼做啊？」\r\n\r\n如果用 iframe 寫呢？<br \/>\r\n嗯，iframe 這玩意難調又難看。相信我，誰看了誰調了，都只能說哥哥母湯喔。<br \/>\r\n所以怎麼辦？\r\n\r\n基於組件（component）的 JavaScript 框架因此誕生了。 一開始由 [React](https:\/\/reactjs.org\/docs\/react-component.html) 開先河，而 Vue component 借鑿了 React。\r\n\r\n---\r\n\r\n能建立各種組件是很好啦，但如果，組件之間要共享某些變數怎麼辦？\r\n\r\n例如說「會員帳號」這個文字，如果我同時要在登入頁面、主頁面、還有會員名單，甚至管理後台，怎麼辦？\r\n\r\n在組件內都建立一次 AJAX 請求？你會不會太過分？<br \/>\r\n在組件內呼叫父組件或子組件？那樣肯定很難維護。<br \/>\r\n另外，你還無法預期資料哪裡來，一切問題都會很難抓到。\r\n\r\n就不能把所有變數放在同一個地方，讓所有會用上的組件，能統一管理？\r\n\r\n這就是 flux 架構想解決的問題：統一變數與狀態的管理和變動，讓各組件能方便取用，並修改變數狀態。而 vuex 就是針對 Vue 量身訂做的 flux 架構。\r\n\r\n> 「為什麼要用到 vuex？」 <br \/>\r\n> 「你叫爺爺去和哥哥拿筆電後給你，又成何體統？」\r\n\r\n---\r\n\r\n再講一次，vuex 是基於 flux 架構的理念而誕生，而 flux 架構是為了**統一變數與狀態的管理和變動**。\r\n\r\n接下來，我們必須談到幾個名詞。首先就是單向數據流（unidirectional data flow）：顧名思義，所有變數只能透過一定的方法，單方面地變更。這樣的話，變數更新才有一定的方向可尋。\r\n\r\n具體來說如何變動？噢，各程式的實作不同，但通常會這樣走：\r\n\r\n1. **放變數、資料的地方叫做狀態**（state）——嗯，我不太喜歡用 state 這個名詞稱之，太過誤導了。不過只能這樣。\r\n2. 視圖（view）組件接收狀態的東西。視圖可以**接收並呈現**狀態的變更，但不能更改狀態。\r\n3. 如果要視圖變更狀態，唯一的辦法就是**要求視圖觸發行為**（action）。行為是接收「更改狀態」命令的唯一*窗口*。\r\n4. 雖然行為要接收來自視圖要求更改狀態的命令，但行為並不是真正負責更改狀態的地方，這是因為要考慮各種狀態變更，或是非同步這種麻煩的資料輸入之類的。因此，我們需要讓行為整理好命令所需的動作後，**把整理好的資料，提交給調度**（Dispatcher）。<br \/>**只有調度才能更改狀態**。\r\n\r\n以 Vue 來說，view 當然是我們看到的網頁（如 `.vue` `.html` 等等）。這裡面除了 Dispatcher 會被稱作 mutation 以外，其他的都一樣。另外，getters 是 state 的封裝。\r\n\r\n---\r\n\r\n現在開始實作吧。我們要判斷用戶有沒有登入，有登入就顯示文章。\r\n\r\n首先，就是把 [vuex](https:\/\/github.com\/iigmir\/vuex_practice\/blob\/master\/src\/vuex_store.js) 寫進來。\r\n\r\n接著從[登入頁面](https:\/\/github.com\/iigmir\/vuex_practice\/blob\/master\/src\/components\/login.vue)開始作：我在表單裡面寫了 `letslogin` 來確認資料正常與否，並觸發 vuex 裡面的 `ajax_login` action。\r\n\r\n`ajax_login` 會作什麼呢？\r\n\r\n首先，`ajax_login` 會觸發 [Yes Or No API](https:\/\/yesno.wtf\/api) 以模擬登入的成功或失敗。成功的話 `commit` 就會發動 `mutations` 的函式。也就是說，`commit(\"login\",login_info.account)` 會發動 `mutations` 的 `login` 函式。\r\n\r\n在 `mutations` 的 `login` 函式裡面，就可以更改 `state` 的狀態了。最後，`state` 把改動後的變數交給 view，一切就完成了。\r\n\r\n---\r\n\r\n故事講完啦。謝謝各位。[實作專案在這裡](https:\/\/github.com\/iigmir\/vuex_practice)。\r\n\r\n### More reading\r\n\r\n* [Iframe 有什么好处，有什么坏处？......](https:\/\/www.zhihu.com\/question\/20653055)\r\n* [Good Reasons why not to use Iframes in page content](https:\/\/stackoverflow.com\/questions\/23178505\/good-reasons-why-not-to-use-iframes-in-page-content)\r\n* [The iFrame Is Evil!](http:\/\/www.rwblackburn.com\/iframe-evil\/)\r\n* [前後端分離與 SPA](https:\/\/blog.techbridge.cc\/2017\/09\/16\/frontend-backend-mvc\/)\r\n* [跟著小明一起搞懂技術名詞：MVC、SPA 與 SSR](https:\/\/medium.com\/@hulitw\/introduction-mvc-spa-and-ssr-545c941669e9)\r\n* [Flux 的基本概念](https:\/\/ithelp.ithome.com.tw\/articles\/10192962)\r\n* [redux](https:\/\/redux.js.org\/basics\/data-flow)\r\n* [深入淺出 Flux](https:\/\/medium.com\/4cats-io\/%E6%B7%B1%E5%85%A5%E6%B7%BA%E5%87%BA-flux-44a48c320e11)\r\n* [为什么43%前端开发者想学Vue.js](https:\/\/zhuanlan.zhihu.com\/p\/32462675)\r\n* [Flux架构模式](https:\/\/zhuanlan.zhihu.com\/p\/24728725)\r\n* [vuex中为什么把把异步操作封装在action，把同步操作放在mutations？](https:\/\/www.zhihu.com\/question\/48759748\/answer\/112823337)\r\n* [如何理解 Facebook 的 flux 应用架构？](https:\/\/www.zhihu.com\/question\/33864532)\r\n* [Flux todoMVC 为什么要费那么多力气实现一个功能!!!!,这样写的好处是神马？](https:\/\/www.zhihu.com\/question\/32239901\/answer\/55213224)\r\n",
		"created_at" : "2018-05-20T04:47:21Z",
		"updated_at" : "2018-05-29T18:02:34Z"
	},
	{
		"id" : 88,
		"title" : "Group and sort for SVG elements",
		"context" : "I recently develop SVG and encounter a problem: I need to let my text above my shape. Because there are many texts on page, I cannot simply use `z-index` CSS property. When finding how to sort elements, I found [a pen on codepen](https:\/\/codepen.io\/aeternia\/pen\/qazrgQ).\r\n\r\nIt uses [g element](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/SVG\/Element\/g), which offer elements an container to contain elements, and sort their priority.\r\n\r\nI was cried when found that worked.\r\n\r\nRef:\r\n\r\n* [g on MDN](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/SVG\/Element\/g)\r\n* [d3 force directed graph with labels](https:\/\/codepen.io\/aeternia\/pen\/qazrgQ)\r\n* [How to use z-index in svg elements?](https:\/\/stackoverflow.com\/questions\/17786618\/how-to-use-z-index-in-svg-elements)",
		"created_at" : "2018-07-01T06:13:10Z",
		"updated_at" : "2018-07-01T06:13:10Z"
	}
]}
